
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftis_equalnot_equalless_or_equalgreater_or_equalless_thangreater_thanandorleftplusminusleftstarslashand call cin close_brace close_bracket close_parenthesis comma cout do double double_number else elseif equal false for greater_or_equal greater_than identifier if in int int_number is_equal less_or_equal less_than main minus minus_minus not_equal open_brace open_bracket open_parenthesis or out plus plus_plus semicolon slash star string true while\n\t\tProgramFlow : VariablesDeclaration SubroutinesDeclaration Main\n\t\n\t\tMain : main open_brace Routine close_brace\n\t\n\t\tNumber : int_number action_insert_int_operand\n\t\t\t   | double_number action_insert_double_operand\n\t\n\t\tvariable : identifier dimensions\n\t\n\t\tdimensions : open_bracket variable close_bracket dimensions\n\t\t\t\t   | open_bracket Number close_bracket dimensions\n\t\t\t\t   |\n\t\t\n\t\tVariablesDeclaration : type RecVariableDeclaration semicolon VariablesDeclaration\n\t\t\t\t\t\t\t |\n\t\n\t\tRecVariableDeclaration  :\tvariable \n\t\t\t\t\t\t\t\t|\tvariable comma RecVariableDeclaration\n\t\t\t\t\t\t\t\t|   variable equal ArithmeticExpression\n\t\t\t\t\t\t\t\t|\tvariable equal ArithmeticExpression comma RecVariableDeclaration\n\t\n\t\ttype : int\t\n\t\t\t | double\n\t\n\tArithmeticExpression  : ArithmeticExpression plus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | ArithmeticExpression minus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | term\n\t\n    term\t\t: factor\n\t\t\t\t| term star action_insert_operator factor action_generate_quadruplet\n\t\t\t\t| term slash action_insert_operator factor action_generate_quadruplet\n\n\t\n    factor : Number\n\t\t   | variable action_insert_variable_as_operand\n\t\t   | UnaryOperation\n\t\t   | open_parenthesis ArithmeticExpression close_parenthesis\n\t\n\t\tBooleanExpression : true \n\t\t\t\t\t\t  | false \n\t\t\t\t\t\t  | ArithmeticExpression\n\t\t\t\t\t\t  | ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet\n\t\n\t\tAssignmentStatement : variable action_insert_variable_as_operand equal ArithmeticExpression action_assignation\n\t\t\t\t\t\t\t| UnaryOperation\n\t\n\t\tUnaryOperation : plus_plus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet\n\t\t\t\t\t   | minus_minus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet\n\t\n\t\tLogicOperator : is_equal\n\t\t\t\t\t  |\tnot_equal\n\t\t\t\t\t  |\tless_or_equal\n\t\t\t\t\t  |\tgreater_or_equal\n\t\t\t\t\t  |\tless_than\n\t\t\t\t\t  |\tgreater_than\n\t\t\t\t\t  | and\n\t\t\t\t\t  | or\n\t\n\t\tifCondition : if open_parenthesis BooleanExpression action_pushToIfStack action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\n\t\telseIfCondition : action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto elseif open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\t\t\t\t\t| elseCondition\n\t\n\t\telseCondition : action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto  else open_brace Routine close_brace action_fillUnconditionalGotosWithEnd\n\t\t\t\t\t  | action_fillUnconditionalGotosWithEnd\n\t\n\t\twhileLoop : while open_parenthesis action_pushToJumpStack BooleanExpression  action_pushToJumpStack  action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace action_fillPreviousGotoFalse action_generateGotoBooleanExpression\n\t\n\t\tdoWhileLoop : do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon\n\t\n\t\tforLoop : for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace\n\t\n\tUpdateVariables : AssignmentStatement\n\t\t\t\t\t| AssignmentStatement comma UpdateVariables\n \t\n\t\tSubroutinesDeclaration : identifier open_brace Routine close_brace SubroutinesDeclaration\n\t\t\t\t\t\t\t   |\n\t\n\t\tRoutine : AssignmentStatement semicolon Routine\n\t\t\t\t| ifCondition Routine\n\t\t\t\t| whileLoop Routine\n\t\t\t\t| doWhileLoop Routine\n\t\t\t\t| forLoop Routine\n\t\t\t\t| call identifier semicolon Routine\n\t\t\t\t| InOut Routine\n\t\t\t\t|\n\t\n\t\tInOut : cin in variable RecursiveIn semicolon\n\t\t\t  | cout out ArithmeticExpression RecursiveOut semicolon\n\t\t\t  | cout out string RecursiveOut semicolon\n\t\n\t\tRecursiveIn : in variable RecursiveIn\n\t\t\t\t\t|\n\t\n\t\tRecursiveOut : out ArithmeticExpression RecursiveOut\n\t\t\t\t\t | out string RecursiveOut\n\t\t\t\t\t |\n\taction_insert_variable_as_operand :action_insert_int_operand :action_insert_double_operand :action_insert_operator : action_generate_quadruplet :action_assignation :action_generate_unary_operation_quadruplet :action_pushToJumpStack :action_generateEmptyGotoFalse_quadruplet :action_generateUnconditionalGoto :action_fillPreviousGotoFalse :action_pushToIfStack :action_fillUnconditionalGotosWithEnd :action_generateGotoBooleanExpression :'
    
_lr_action_items = {'identifier':([0,2,3,4,5,13,14,15,16,18,19,22,23,24,25,26,27,36,37,38,46,52,53,61,62,63,64,65,66,67,68,70,71,72,73,74,83,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,120,122,133,138,141,142,152,153,163,164,167,170,171,173,174,176,178,179,180,181,183,187,188,192,194,196,198,199,],[-10,7,10,-15,-16,10,-10,10,10,10,10,10,10,10,10,58,10,-74,-74,-9,10,7,10,10,-78,10,10,10,10,10,10,10,-74,-74,-74,-74,10,10,10,10,10,10,10,-74,-35,-36,-37,-38,-39,-40,-41,-42,10,10,10,10,-63,-64,-65,10,10,10,10,10,-49,10,-83,-81,-43,-45,-47,-84,-50,-48,10,10,-83,-46,10,-83,-44,]),'main':([0,2,6,14,38,52,81,],[-10,-54,12,-10,-9,-54,-53,]),'int':([0,14,],[4,4,]),'double':([0,14,],[5,5,]),'$end':([1,11,80,],[0,-1,-2,]),'open_brace':([7,12,32,157,159,166,186,195,],[13,19,63,163,164,171,188,196,]),'semicolon':([8,9,10,17,21,29,39,40,41,42,43,44,45,47,48,58,69,76,77,78,79,86,87,88,91,92,93,94,95,96,97,102,103,104,106,121,123,124,125,126,127,128,129,130,131,136,137,139,140,143,144,145,146,147,148,150,154,155,156,158,165,],[14,-11,-8,-5,53,-32,-12,-71,-13,-19,-20,-23,-25,-72,-73,83,-24,-3,-4,-8,-8,-27,-28,-29,119,-67,-70,-70,-71,-71,-14,-26,-6,-7,-76,138,141,142,-77,-77,-75,-75,-75,-75,-31,153,-67,-70,-70,-33,-34,-17,-18,-21,-22,-75,-66,-68,-69,-30,170,]),'comma':([9,10,17,29,40,41,42,43,44,45,47,48,69,76,77,78,79,95,96,102,103,104,106,125,126,127,128,129,130,131,143,144,145,146,147,148,162,],[15,-8,-5,-32,-71,70,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,-71,-71,-26,-6,-7,-76,-77,-77,-75,-75,-75,-75,-31,-33,-34,-17,-18,-21,-22,167,]),'equal':([9,10,17,28,60,78,79,103,104,],[16,-8,-5,-71,84,-8,-8,-6,-7,]),'open_bracket':([10,78,79,],[18,18,18,]),'star':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,95,96,102,103,104,125,126,127,128,129,130,143,144,147,148,],[-8,-5,-71,73,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,-71,-71,-26,-6,-7,-77,-77,73,73,-75,-75,-33,-34,-21,-22,]),'slash':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,95,96,102,103,104,125,126,127,128,129,130,143,144,147,148,],[-8,-5,-71,74,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,-71,-71,-26,-6,-7,-77,-77,74,74,-75,-75,-33,-34,-21,-22,]),'plus':([10,17,40,41,42,43,44,45,47,48,69,75,76,77,78,79,88,93,95,96,102,103,104,106,125,126,127,128,129,130,139,143,144,145,146,147,148,],[-8,-5,-71,71,-19,-20,-23,-25,-72,-73,-24,71,-3,-4,-8,-8,71,71,-71,-71,-26,-6,-7,71,-77,-77,-75,-75,-75,-75,71,-33,-34,-17,-18,-21,-22,]),'minus':([10,17,40,41,42,43,44,45,47,48,69,75,76,77,78,79,88,93,95,96,102,103,104,106,125,126,127,128,129,130,139,143,144,145,146,147,148,],[-8,-5,-71,72,-19,-20,-23,-25,-72,-73,-24,72,-3,-4,-8,-8,72,72,-71,-71,-26,-6,-7,72,-77,-77,-75,-75,-75,-75,72,-33,-34,-17,-18,-21,-22,]),'close_bracket':([10,17,47,48,49,50,76,77,78,79,103,104,],[-8,-5,-72,-73,78,79,-3,-4,-8,-8,-6,-7,]),'close_parenthesis':([10,17,29,40,42,43,44,45,47,48,69,75,76,77,78,79,85,86,87,88,95,96,102,103,104,106,107,117,125,126,127,128,129,130,131,132,134,143,144,145,146,147,148,149,150,151,158,160,161,162,172,189,191,193,],[-8,-5,-32,-71,-19,-20,-23,-25,-72,-73,-24,102,-3,-4,-8,-8,-82,-27,-28,-29,-71,-71,-26,-6,-7,-76,-78,-78,-77,-77,-75,-75,-75,-75,-31,-79,-79,-33,-34,-17,-18,-21,-22,157,-75,159,-30,165,166,-51,-52,-78,-79,195,]),'is_equal':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,109,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'not_equal':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,110,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'less_or_equal':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,111,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'greater_or_equal':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,112,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'less_than':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,113,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'greater_than':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,114,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'and':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,115,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'or':([10,17,40,42,43,44,45,47,48,69,76,77,78,79,88,95,96,102,103,104,125,126,127,128,129,130,143,144,145,146,147,148,],[-8,-5,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,116,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,-33,-34,-17,-18,-21,-22,]),'in':([10,17,34,78,79,92,103,104,137,],[-8,-5,65,-8,-8,120,-6,-7,120,]),'out':([10,17,35,40,42,43,44,45,47,48,69,76,77,78,79,93,94,95,96,102,103,104,125,126,127,128,129,130,139,140,143,144,145,146,147,148,],[-8,-5,66,-71,-19,-20,-23,-25,-72,-73,-24,-3,-4,-8,-8,122,122,-71,-71,-26,-6,-7,-77,-77,-75,-75,-75,-75,122,122,-33,-34,-17,-18,-21,-22,]),'call':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[26,26,26,26,26,26,26,26,26,26,-63,-64,-65,26,26,-49,26,-83,-81,-43,-45,-47,-84,-50,-48,26,-83,-46,26,-83,-44,]),'close_brace':([13,19,20,22,23,24,25,27,51,53,54,55,56,57,59,63,82,83,90,105,138,141,142,163,164,168,169,170,171,173,174,175,176,178,179,180,181,183,188,190,192,194,196,197,198,199,],[-62,-62,52,-62,-62,-62,-62,-62,80,-62,-56,-57,-58,-59,-61,-62,-55,-62,118,-60,-63,-64,-65,-62,-62,173,174,-49,-62,-83,-81,181,-43,-45,-47,-84,-50,-48,-62,192,-83,-46,-62,198,-83,-44,]),'if':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[30,30,30,30,30,30,30,30,30,30,-63,-64,-65,30,30,-49,30,-83,-81,-43,-45,-47,-84,-50,-48,30,-83,-46,30,-83,-44,]),'while':([13,19,22,23,24,25,27,53,63,83,118,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[31,31,31,31,31,31,31,31,31,31,135,-63,-64,-65,31,31,-49,31,-83,-81,-43,-45,-47,-84,-50,-48,31,-83,-46,31,-83,-44,]),'do':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[32,32,32,32,32,32,32,32,32,32,-63,-64,-65,32,32,-49,32,-83,-81,-43,-45,-47,-84,-50,-48,32,-83,-46,32,-83,-44,]),'for':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[33,33,33,33,33,33,33,33,33,33,-63,-64,-65,33,33,-49,33,-83,-81,-43,-45,-47,-84,-50,-48,33,-83,-46,33,-83,-44,]),'cin':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[34,34,34,34,34,34,34,34,34,34,-63,-64,-65,34,34,-49,34,-83,-81,-43,-45,-47,-84,-50,-48,34,-83,-46,34,-83,-44,]),'cout':([13,19,22,23,24,25,27,53,63,83,138,141,142,163,164,170,171,173,174,176,178,179,180,181,183,188,192,194,196,198,199,],[35,35,35,35,35,35,35,35,35,35,-63,-64,-65,35,35,-49,35,-83,-81,-43,-45,-47,-84,-50,-48,35,-83,-46,35,-83,-44,]),'plus_plus':([13,16,19,22,23,24,25,27,46,53,61,62,63,66,71,72,73,74,83,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,122,133,138,141,142,152,153,163,164,167,170,171,173,174,176,178,179,180,181,183,187,188,192,194,196,198,199,],[36,36,36,36,36,36,36,36,36,36,36,-78,36,36,-74,-74,-74,-74,36,36,36,36,36,36,36,-74,-35,-36,-37,-38,-39,-40,-41,-42,36,36,36,-63,-64,-65,36,36,36,36,36,-49,36,-83,-81,-43,-45,-47,-84,-50,-48,36,36,-83,-46,36,-83,-44,]),'minus_minus':([13,16,19,22,23,24,25,27,46,53,61,62,63,66,71,72,73,74,83,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,122,133,138,141,142,152,153,163,164,167,170,171,173,174,176,178,179,180,181,183,187,188,192,194,196,198,199,],[37,37,37,37,37,37,37,37,37,37,37,-78,37,37,-74,-74,-74,-74,37,37,37,37,37,37,37,-74,-35,-36,-37,-38,-39,-40,-41,-42,37,37,37,-63,-64,-65,37,37,37,37,37,-49,37,-83,-81,-43,-45,-47,-84,-50,-48,37,37,-83,-46,37,-83,-44,]),'open_parenthesis':([16,30,31,33,46,61,62,66,71,72,73,74,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,122,133,135,152,185,187,],[46,61,62,64,46,46,-78,46,-74,-74,-74,-74,46,46,46,46,46,46,-74,-35,-36,-37,-38,-39,-40,-41,-42,46,46,46,152,46,187,46,]),'int_number':([16,18,46,61,62,66,71,72,73,74,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,122,133,152,187,],[47,47,47,47,-78,47,-74,-74,-74,-74,47,47,47,47,47,47,-74,-35,-36,-37,-38,-39,-40,-41,-42,47,47,47,47,47,]),'double_number':([16,18,46,61,62,66,71,72,73,74,84,89,98,99,100,101,108,109,110,111,112,113,114,115,116,119,122,133,152,187,],[48,48,48,48,-78,48,-74,-74,-74,-74,48,48,48,48,48,48,-74,-35,-36,-37,-38,-39,-40,-41,-42,48,48,48,48,48,]),'true':([61,62,89,108,109,110,111,112,113,114,115,116,119,133,152,187,],[86,-78,86,-74,-35,-36,-37,-38,-39,-40,-41,-42,86,86,86,86,]),'false':([61,62,89,108,109,110,111,112,113,114,115,116,119,133,152,187,],[87,-78,87,-74,-35,-36,-37,-38,-39,-40,-41,-42,87,87,87,87,]),'string':([66,122,],[94,140,]),'elseif':([173,177,182,184,198,],[-81,-78,-80,185,-81,]),'else':([173,177,182,184,198,],[-81,-78,-80,186,-81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ProgramFlow':([0,],[1,]),'VariablesDeclaration':([0,14,],[2,38,]),'type':([0,14,],[3,3,]),'SubroutinesDeclaration':([2,52,],[6,81,]),'RecVariableDeclaration':([3,15,64,70,],[8,39,91,97,]),'variable':([3,13,15,16,18,19,22,23,24,25,27,46,53,61,63,64,65,66,67,68,70,83,84,89,98,99,100,101,119,120,122,133,152,153,163,164,167,171,187,188,196,],[9,28,9,40,49,28,28,28,28,28,28,40,28,40,28,9,92,40,95,96,9,28,40,40,40,40,40,40,40,137,40,40,40,28,28,28,28,28,40,28,28,]),'Main':([6,],[11,]),'dimensions':([10,78,79,],[17,103,104,]),'Routine':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[20,51,54,55,56,57,59,82,90,105,168,169,175,190,197,]),'AssignmentStatement':([13,19,22,23,24,25,27,53,63,83,153,163,164,167,171,188,196,],[21,21,21,21,21,21,21,21,21,21,162,21,21,162,21,21,21,]),'ifCondition':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'whileLoop':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'doWhileLoop':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'forLoop':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'InOut':([13,19,22,23,24,25,27,53,63,83,163,164,171,188,196,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'UnaryOperation':([13,16,19,22,23,24,25,27,46,53,61,63,66,83,84,89,98,99,100,101,119,122,133,152,153,163,164,167,171,187,188,196,],[29,45,29,29,29,29,29,29,45,29,45,29,45,29,45,45,45,45,45,45,45,45,45,45,29,29,29,29,29,45,29,29,]),'ArithmeticExpression':([16,46,61,66,84,89,119,122,133,152,187,],[41,75,88,93,106,88,88,139,88,88,88,]),'term':([16,46,61,66,84,89,98,99,119,122,133,152,187,],[42,42,42,42,42,42,127,128,42,42,42,42,42,]),'factor':([16,46,61,66,84,89,98,99,100,101,119,122,133,152,187,],[43,43,43,43,43,43,43,43,129,130,43,43,43,43,43,]),'Number':([16,18,46,61,66,84,89,98,99,100,101,119,122,133,152,187,],[44,50,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'action_insert_variable_as_operand':([28,40,95,96,],[60,69,125,126,]),'action_insert_operator':([36,37,71,72,73,74,108,],[67,68,98,99,100,101,133,]),'action_insert_int_operand':([47,],[76,]),'action_insert_double_operand':([48,],[77,]),'BooleanExpression':([61,89,119,133,152,187,],[85,117,136,150,160,189,]),'action_pushToJumpStack':([62,107,117,177,189,],[89,132,134,182,191,]),'action_pushToIfStack':([85,],[107,]),'LogicOperator':([88,],[108,]),'RecursiveIn':([92,137,],[121,154,]),'RecursiveOut':([93,94,139,140,],[123,124,155,156,]),'action_assignation':([106,],[131,]),'action_generate_unary_operation_quadruplet':([125,126,],[143,144,]),'action_generate_quadruplet':([127,128,129,130,150,],[145,146,147,148,158,]),'action_generateEmptyGotoFalse_quadruplet':([132,134,191,],[149,151,193,]),'UpdateVariables':([153,167,],[161,172,]),'elseIfCondition':([173,198,],[176,199,]),'action_fillPreviousGotoFalse':([173,174,198,],[177,180,177,]),'elseCondition':([173,198,],[178,178,]),'action_fillUnconditionalGotosWithEnd':([173,192,198,],[179,194,179,]),'action_generateGotoBooleanExpression':([180,],[183,]),'action_generateUnconditionalGoto':([182,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramFlow","S'",1,None,None,None),
  ('ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main','ProgramFlow',3,'p_ProgramFlow','omega.py',194),
  ('Main -> main open_brace Routine close_brace','Main',4,'p_Main','omega.py',206),
  ('Number -> int_number action_insert_int_operand','Number',2,'p_Number','omega.py',212),
  ('Number -> double_number action_insert_double_operand','Number',2,'p_Number','omega.py',213),
  ('variable -> identifier dimensions','variable',2,'p_variable','omega.py',218),
  ('dimensions -> open_bracket variable close_bracket dimensions','dimensions',4,'p_dimensions','omega.py',224),
  ('dimensions -> open_bracket Number close_bracket dimensions','dimensions',4,'p_dimensions','omega.py',225),
  ('dimensions -> <empty>','dimensions',0,'p_dimensions','omega.py',226),
  ('VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration','VariablesDeclaration',4,'p_VariablesDeclaration','omega.py',231),
  ('VariablesDeclaration -> <empty>','VariablesDeclaration',0,'p_VariablesDeclaration','omega.py',232),
  ('RecVariableDeclaration -> variable','RecVariableDeclaration',1,'p_RecVariableDeclaration','omega.py',240),
  ('RecVariableDeclaration -> variable comma RecVariableDeclaration','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',241),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',242),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration','RecVariableDeclaration',5,'p_RecVariableDeclaration','omega.py',243),
  ('type -> int','type',1,'p_type','omega.py',252),
  ('type -> double','type',1,'p_type','omega.py',253),
  ('ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',262),
  ('ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',263),
  ('ArithmeticExpression -> term','ArithmeticExpression',1,'p_expression_plus_minus','omega.py',264),
  ('term -> factor','term',1,'p_term_times_div','omega.py',269),
  ('term -> term star action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',270),
  ('term -> term slash action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',271),
  ('factor -> Number','factor',1,'p_factor','omega.py',276),
  ('factor -> variable action_insert_variable_as_operand','factor',2,'p_factor','omega.py',277),
  ('factor -> UnaryOperation','factor',1,'p_factor','omega.py',278),
  ('factor -> open_parenthesis ArithmeticExpression close_parenthesis','factor',3,'p_factor','omega.py',279),
  ('BooleanExpression -> true','BooleanExpression',1,'p_BooleanExpression','omega.py',284),
  ('BooleanExpression -> false','BooleanExpression',1,'p_BooleanExpression','omega.py',285),
  ('BooleanExpression -> ArithmeticExpression','BooleanExpression',1,'p_BooleanExpression','omega.py',286),
  ('BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet','BooleanExpression',5,'p_BooleanExpression','omega.py',287),
  ('AssignmentStatement -> variable action_insert_variable_as_operand equal ArithmeticExpression action_assignation','AssignmentStatement',5,'p_AssignmentStatement','omega.py',292),
  ('AssignmentStatement -> UnaryOperation','AssignmentStatement',1,'p_AssignmentStatement','omega.py',293),
  ('UnaryOperation -> plus_plus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet','UnaryOperation',5,'p_UnaryOperation','omega.py',298),
  ('UnaryOperation -> minus_minus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet','UnaryOperation',5,'p_UnaryOperation','omega.py',299),
  ('LogicOperator -> is_equal','LogicOperator',1,'p_LogicOperator','omega.py',304),
  ('LogicOperator -> not_equal','LogicOperator',1,'p_LogicOperator','omega.py',305),
  ('LogicOperator -> less_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',306),
  ('LogicOperator -> greater_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',307),
  ('LogicOperator -> less_than','LogicOperator',1,'p_LogicOperator','omega.py',308),
  ('LogicOperator -> greater_than','LogicOperator',1,'p_LogicOperator','omega.py',309),
  ('LogicOperator -> and','LogicOperator',1,'p_LogicOperator','omega.py',310),
  ('LogicOperator -> or','LogicOperator',1,'p_LogicOperator','omega.py',311),
  ('ifCondition -> if open_parenthesis BooleanExpression action_pushToIfStack action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition','ifCondition',11,'p_ifCondition','omega.py',319),
  ('elseIfCondition -> action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto elseif open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition','elseIfCondition',13,'p_elseIfCondition','omega.py',324),
  ('elseIfCondition -> elseCondition','elseIfCondition',1,'p_elseIfCondition','omega.py',325),
  ('elseCondition -> action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto else open_brace Routine close_brace action_fillUnconditionalGotosWithEnd','elseCondition',8,'p_elseCondition','omega.py',330),
  ('elseCondition -> action_fillUnconditionalGotosWithEnd','elseCondition',1,'p_elseCondition','omega.py',331),
  ('whileLoop -> while open_parenthesis action_pushToJumpStack BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace action_fillPreviousGotoFalse action_generateGotoBooleanExpression','whileLoop',12,'p_whileLoop','omega.py',338),
  ('doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon','doWhileLoop',9,'p_doWhileLoop','omega.py',343),
  ('forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace','forLoop',11,'p_forLoop','omega.py',348),
  ('UpdateVariables -> AssignmentStatement','UpdateVariables',1,'p_UpdateVariables','omega.py',352),
  ('UpdateVariables -> AssignmentStatement comma UpdateVariables','UpdateVariables',3,'p_UpdateVariables','omega.py',353),
  ('SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration','SubroutinesDeclaration',5,'p_SubroutinesDeclaration','omega.py',360),
  ('SubroutinesDeclaration -> <empty>','SubroutinesDeclaration',0,'p_SubroutinesDeclaration','omega.py',361),
  ('Routine -> AssignmentStatement semicolon Routine','Routine',3,'p_Routine','omega.py',366),
  ('Routine -> ifCondition Routine','Routine',2,'p_Routine','omega.py',367),
  ('Routine -> whileLoop Routine','Routine',2,'p_Routine','omega.py',368),
  ('Routine -> doWhileLoop Routine','Routine',2,'p_Routine','omega.py',369),
  ('Routine -> forLoop Routine','Routine',2,'p_Routine','omega.py',370),
  ('Routine -> call identifier semicolon Routine','Routine',4,'p_Routine','omega.py',371),
  ('Routine -> InOut Routine','Routine',2,'p_Routine','omega.py',372),
  ('Routine -> <empty>','Routine',0,'p_Routine','omega.py',373),
  ('InOut -> cin in variable RecursiveIn semicolon','InOut',5,'p_InOut','omega.py',380),
  ('InOut -> cout out ArithmeticExpression RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',381),
  ('InOut -> cout out string RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',382),
  ('RecursiveIn -> in variable RecursiveIn','RecursiveIn',3,'p_RecursiveIn','omega.py',387),
  ('RecursiveIn -> <empty>','RecursiveIn',0,'p_RecursiveIn','omega.py',388),
  ('RecursiveOut -> out ArithmeticExpression RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',393),
  ('RecursiveOut -> out string RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',394),
  ('RecursiveOut -> <empty>','RecursiveOut',0,'p_RecursiveOut','omega.py',395),
  ('action_insert_variable_as_operand -> <empty>','action_insert_variable_as_operand',0,'p_action_insert_variable_as_operand','omega.py',399),
  ('action_insert_int_operand -> <empty>','action_insert_int_operand',0,'p_action_insert_int_operand','omega.py',406),
  ('action_insert_double_operand -> <empty>','action_insert_double_operand',0,'p_action_insert_double_operand','omega.py',411),
  ('action_insert_operator -> <empty>','action_insert_operator',0,'p_action_insert_operator','omega.py',416),
  ('action_generate_quadruplet -> <empty>','action_generate_quadruplet',0,'p_action_generate_aquadruplet','omega.py',420),
  ('action_assignation -> <empty>','action_assignation',0,'p_action_assignation','omega.py',436),
  ('action_generate_unary_operation_quadruplet -> <empty>','action_generate_unary_operation_quadruplet',0,'p_action_generate_unary_operation_quadruplet','omega.py',448),
  ('action_pushToJumpStack -> <empty>','action_pushToJumpStack',0,'p_action_pushToJumpStack','omega.py',456),
  ('action_generateEmptyGotoFalse_quadruplet -> <empty>','action_generateEmptyGotoFalse_quadruplet',0,'p_action_generateEmptyGotoFalse_quadruplet','omega.py',462),
  ('action_generateUnconditionalGoto -> <empty>','action_generateUnconditionalGoto',0,'p_action_generateUnconditionalGoto','omega.py',474),
  ('action_fillPreviousGotoFalse -> <empty>','action_fillPreviousGotoFalse',0,'p_action_fillPreviousGotoFalse','omega.py',483),
  ('action_pushToIfStack -> <empty>','action_pushToIfStack',0,'p_action_pushToIfStack','omega.py',491),
  ('action_fillUnconditionalGotosWithEnd -> <empty>','action_fillUnconditionalGotosWithEnd',0,'p_action_fillUnconditionalGotosWithEnd','omega.py',497),
  ('action_generateGotoBooleanExpression -> <empty>','action_generateGotoBooleanExpression',0,'p_action_generateGotoBooleanExpression','omega.py',505),
]
