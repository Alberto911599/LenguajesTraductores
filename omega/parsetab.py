
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftis_equalnot_equalless_or_equalgreater_or_equalless_thangreater_thanandorleftplusminusleftstarslashand call cin close_brace close_bracket close_parenthesis comma cout do double double_number else elseif equal false for greater_or_equal greater_than identifier if in int int_number is_equal less_or_equal less_than main minus minus_minus not_equal open_brace open_bracket open_parenthesis or out plus plus_plus semicolon slash star string true while\n\t\tProgramFlow : VariablesDeclaration SubroutinesDeclaration Main\n\t\n\t\tMain : main open_brace Routine close_brace\n\t\n\t\tNumber : int_number action_insert_int_operand\n\t\t\t   | double_number action_insert_double_operand\n\t\n\t\tvariable : identifier dimensions\n\t\n\t\tdimensions : open_bracket variable close_bracket dimensions\n\t\t\t\t   | open_bracket Number close_bracket dimensions\n\t\t\t\t   |\n\t\t\n\t\tVariablesDeclaration : type RecVariableDeclaration semicolon VariablesDeclaration\n\t\t\t\t\t\t\t |\n\t\n\t\tRecVariableDeclaration  :\tvariable \n\t\t\t\t\t\t\t\t|\tvariable comma RecVariableDeclaration\n\t\t\t\t\t\t\t\t|   variable equal ArithmeticExpression\n\t\t\t\t\t\t\t\t|\tvariable equal ArithmeticExpression comma RecVariableDeclaration\n\t\n\t\ttype : int\t\n\t\t\t | double\n\t\n\tArithmeticExpression  : ArithmeticExpression plus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | ArithmeticExpression minus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | term\n\t\n    term\t\t: factor\n\t\t\t\t| term star action_insert_operator factor action_generate_quadruplet\n\t\t\t\t| term slash action_insert_operator factor action_generate_quadruplet\n\n\t\n    factor : Number\n\t\t   | variable action_insert_variable\n\t\t   | UnaryOperation\n\t\t   | open_parenthesis ArithmeticExpression close_parenthesis\n\t\n\t\tBooleanExpression : true \n\t\t\t\t\t\t  | false \n\t\t\t\t\t\t  | ArithmeticExpression\n\t\t\t\t\t\t  | ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet\n\t\n\t\tAssignmentStatement : variable action_insert_variable equal ArithmeticExpression action_assignation\n\t\n\t\tUnaryOperation : plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet\n\t\t\t\t\t   | minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet\n\t\n\t\tLogicOperator : is_equal\n\t\t\t\t\t  |\tnot_equal\n\t\t\t\t\t  |\tless_or_equal\n\t\t\t\t\t  |\tgreater_or_equal\n\t\t\t\t\t  |\tless_than\n\t\t\t\t\t  |\tgreater_than\n\t\t\t\t\t  | and\n\t\t\t\t\t  | or\n\t\n\t\tifCondition : if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\n\t\telseIfCondition : elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\t\t\t\t\t| elseCondition\n\t\n\t\telseCondition : else open_brace Routine close_brace\n\t\t\t\t\t  |\n\t\n\t\twhileLoop : while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace\n\t\n\t\tdoWhileLoop : do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon\n\t\n\t\tforLoop : for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace\n\t\n\tUpdateVariables : AssignmentStatement\n\t\t\t\t\t| AssignmentStatement comma UpdateVariables\n\t\t\t\t\t| UnaryOperation\n\t\t\t\t\t| UnaryOperation comma UpdateVariables\n \t\n\t\tSubroutinesDeclaration : identifier open_brace Routine close_brace SubroutinesDeclaration\n\t\t\t\t\t\t\t   |\n\t\n\t\tRoutine : AssignmentStatement semicolon Routine\n\t\t\t\t| UnaryOperation semicolon Routine\n\t\t\t\t| ifCondition Routine\n\t\t\t\t| whileLoop Routine\n\t\t\t\t| doWhileLoop Routine\n\t\t\t\t| forLoop Routine\n\t\t\t\t| call identifier semicolon Routine\n\t\t\t\t| InOut Routine\n\t\t\t\t|\n\t\n\t\tInOut : cin in variable RecursiveIn semicolon\n\t\t\t  | cout out ArithmeticExpression RecursiveOut semicolon\n\t\t\t  | cout out string RecursiveOut semicolon\n\t\n\t\tRecursiveIn : in variable RecursiveIn\n\t\t\t\t\t|\n\t\n\t\tRecursiveOut : out ArithmeticExpression RecursiveOut\n\t\t\t\t\t | out string RecursiveOut\n\t\t\t\t\t |\n\taction_insert_variable :action_insert_int_operand :action_insert_double_operand :action_insert_operator : action_generate_quadruplet :action_assignation :action_generate_unary_operation_quadruplet :'
    
_lr_action_items = {'identifier':([0,2,3,4,5,13,14,15,16,18,19,23,24,25,26,27,28,30,31,38,46,52,53,54,62,63,64,65,66,67,68,69,71,72,73,74,75,85,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,124,126,134,135,136,140,143,144,152,153,157,159,164,166,170,171,172,173,174,175,182,183,184,186,187,],[-10,7,10,-15,-16,10,-10,10,10,10,10,10,10,10,10,59,10,-76,-76,-9,10,7,10,10,10,10,10,10,10,10,10,10,10,-76,-76,-76,-76,10,10,10,10,10,10,-76,-34,-35,-36,-37,-38,-39,-40,-41,10,10,10,10,10,10,-65,-66,-67,10,10,-46,-47,-42,-44,10,10,10,10,-48,10,-45,-49,10,-46,-43,]),'main':([0,2,6,14,38,52,82,],[-10,-55,12,-10,-9,-55,-54,]),'int':([0,14,],[4,4,]),'double':([0,14,],[5,5,]),'$end':([1,11,81,],[0,-1,-2,]),'open_brace':([7,12,34,111,121,167,169,181,],[13,19,66,134,136,173,175,184,]),'semicolon':([8,9,10,17,21,22,39,40,41,42,43,44,45,47,48,59,70,77,78,79,80,87,88,90,91,92,95,96,97,98,99,104,105,106,108,109,110,125,127,128,129,130,131,132,133,138,139,141,142,145,146,147,148,150,154,155,156,158,168,],[14,-11,-8,-5,53,54,-12,-73,-13,-19,-20,-23,-25,-74,-75,85,-24,-3,-4,-8,-8,-79,-79,-27,-28,-29,123,-69,-72,-72,-14,-26,-6,-7,-78,-32,-33,140,143,144,-77,-77,-77,-77,-31,153,-69,-72,-72,-17,-18,-21,-22,-77,-68,-70,-71,-30,174,]),'comma':([9,10,17,40,41,42,43,44,45,47,48,70,77,78,79,80,87,88,104,105,106,108,109,110,129,130,131,132,133,145,146,147,148,162,163,],[15,-8,-5,-73,71,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,-26,-6,-7,-78,-32,-33,-77,-77,-77,-77,-31,-17,-18,-21,-22,170,171,]),'equal':([9,10,17,29,61,79,80,105,106,],[16,-8,-5,-73,86,-8,-8,-6,-7,]),'open_bracket':([10,79,80,],[18,18,18,]),'star':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,104,105,106,109,110,129,130,131,132,147,148,],[-8,-5,-73,74,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,-26,-6,-7,-32,-33,74,74,-77,-77,-21,-22,]),'slash':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,104,105,106,109,110,129,130,131,132,147,148,],[-8,-5,-73,75,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,-26,-6,-7,-32,-33,75,75,-77,-77,-21,-22,]),'plus':([10,17,40,41,42,43,44,45,47,48,70,76,77,78,79,80,87,88,92,97,104,105,106,108,109,110,129,130,131,132,141,145,146,147,148,],[-8,-5,-73,72,-19,-20,-23,-25,-74,-75,-24,72,-3,-4,-8,-8,-79,-79,72,72,-26,-6,-7,72,-32,-33,-77,-77,-77,-77,72,-17,-18,-21,-22,]),'minus':([10,17,40,41,42,43,44,45,47,48,70,76,77,78,79,80,87,88,92,97,104,105,106,108,109,110,129,130,131,132,141,145,146,147,148,],[-8,-5,-73,73,-19,-20,-23,-25,-74,-75,-24,73,-3,-4,-8,-8,-79,-79,73,73,-26,-6,-7,73,-32,-33,-77,-77,-77,-77,73,-17,-18,-21,-22,]),'close_bracket':([10,17,47,48,49,50,77,78,79,80,105,106,],[-8,-5,-74,-75,79,80,-3,-4,-8,-8,-6,-7,]),'close_parenthesis':([10,17,40,42,43,44,45,47,48,70,76,77,78,79,80,87,88,89,90,91,92,93,104,105,106,108,109,110,129,130,131,132,133,145,146,147,148,150,158,160,161,162,163,176,177,178,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,104,-3,-4,-8,-8,-79,-79,111,-27,-28,-29,121,-26,-6,-7,-78,-32,-33,-77,-77,-77,-77,-31,-17,-18,-21,-22,-77,-30,168,169,-50,-52,-51,-53,181,]),'is_equal':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,113,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'not_equal':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,114,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'less_or_equal':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,115,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'greater_or_equal':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,116,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'less_than':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,117,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'greater_than':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,118,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'and':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,119,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'or':([10,17,40,42,43,44,45,47,48,70,77,78,79,80,87,88,92,104,105,106,109,110,129,130,131,132,145,146,147,148,],[-8,-5,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,120,-26,-6,-7,-32,-33,-77,-77,-77,-77,-17,-18,-21,-22,]),'out':([10,17,37,40,42,43,44,45,47,48,70,77,78,79,80,87,88,97,98,104,105,106,109,110,129,130,131,132,141,142,145,146,147,148,],[-8,-5,69,-73,-19,-20,-23,-25,-74,-75,-24,-3,-4,-8,-8,-79,-79,126,126,-26,-6,-7,-32,-33,-77,-77,-77,-77,126,126,-17,-18,-21,-22,]),'in':([10,17,36,79,80,96,105,106,139,],[-8,-5,68,-8,-8,124,-6,-7,124,]),'call':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[27,27,27,27,27,27,27,27,27,27,27,27,27,-65,-66,-67,-46,-47,-42,-44,27,-48,27,-45,-49,27,-46,-43,]),'close_brace':([13,19,20,23,24,25,26,28,51,53,54,55,56,57,58,60,66,83,84,85,94,107,134,136,140,143,144,149,151,157,159,164,166,173,174,175,179,180,182,183,184,185,186,187,],[-64,-64,52,-64,-64,-64,-64,-64,81,-64,-64,-58,-59,-60,-61,-63,-64,-56,-57,-64,122,-62,-64,-64,-65,-66,-67,157,159,-46,-47,-42,-44,-64,-48,-64,182,183,-45,-49,-64,186,-46,-43,]),'plus_plus':([13,16,19,23,24,25,26,28,46,53,54,64,65,66,69,72,73,74,75,85,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,126,134,135,136,140,143,144,152,153,157,159,164,166,170,171,172,173,174,175,182,183,184,186,187,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-76,-76,-76,-76,30,30,30,30,30,30,-76,-34,-35,-36,-37,-38,-39,-40,-41,30,30,30,30,30,-65,-66,-67,30,30,-46,-47,-42,-44,30,30,30,30,-48,30,-45,-49,30,-46,-43,]),'minus_minus':([13,16,19,23,24,25,26,28,46,53,54,64,65,66,69,72,73,74,75,85,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,126,134,135,136,140,143,144,152,153,157,159,164,166,170,171,172,173,174,175,182,183,184,186,187,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-76,-76,-76,-76,31,31,31,31,31,31,-76,-34,-35,-36,-37,-38,-39,-40,-41,31,31,31,31,31,-65,-66,-67,31,31,-46,-47,-42,-44,31,31,31,31,-48,31,-45,-49,31,-46,-43,]),'if':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[32,32,32,32,32,32,32,32,32,32,32,32,32,-65,-66,-67,-46,-47,-42,-44,32,-48,32,-45,-49,32,-46,-43,]),'while':([13,19,23,24,25,26,28,53,54,66,85,122,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[33,33,33,33,33,33,33,33,33,33,33,137,33,33,-65,-66,-67,-46,-47,-42,-44,33,-48,33,-45,-49,33,-46,-43,]),'do':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[34,34,34,34,34,34,34,34,34,34,34,34,34,-65,-66,-67,-46,-47,-42,-44,34,-48,34,-45,-49,34,-46,-43,]),'for':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[35,35,35,35,35,35,35,35,35,35,35,35,35,-65,-66,-67,-46,-47,-42,-44,35,-48,35,-45,-49,35,-46,-43,]),'cin':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[36,36,36,36,36,36,36,36,36,36,36,36,36,-65,-66,-67,-46,-47,-42,-44,36,-48,36,-45,-49,36,-46,-43,]),'cout':([13,19,23,24,25,26,28,53,54,66,85,134,136,140,143,144,157,159,164,166,173,174,175,182,183,184,186,187,],[37,37,37,37,37,37,37,37,37,37,37,37,37,-65,-66,-67,-46,-47,-42,-44,37,-48,37,-45,-49,37,-46,-43,]),'open_parenthesis':([16,32,33,35,46,64,65,69,72,73,74,75,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,126,135,137,152,165,172,],[46,64,65,67,46,46,46,46,-76,-76,-76,-76,46,46,46,46,46,-76,-34,-35,-36,-37,-38,-39,-40,-41,46,46,46,152,46,172,46,]),'int_number':([16,18,46,64,65,69,72,73,74,75,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,126,135,152,172,],[47,47,47,47,47,47,-76,-76,-76,-76,47,47,47,47,47,-76,-34,-35,-36,-37,-38,-39,-40,-41,47,47,47,47,47,]),'double_number':([16,18,46,64,65,69,72,73,74,75,86,100,101,102,103,112,113,114,115,116,117,118,119,120,123,126,135,152,172,],[48,48,48,48,48,48,-76,-76,-76,-76,48,48,48,48,48,-76,-34,-35,-36,-37,-38,-39,-40,-41,48,48,48,48,48,]),'true':([64,65,112,113,114,115,116,117,118,119,120,123,135,152,172,],[90,90,-76,-34,-35,-36,-37,-38,-39,-40,-41,90,90,90,90,]),'false':([64,65,112,113,114,115,116,117,118,119,120,123,135,152,172,],[91,91,-76,-34,-35,-36,-37,-38,-39,-40,-41,91,91,91,91,]),'string':([69,126,],[98,142,]),'elseif':([157,186,],[165,165,]),'else':([157,186,],[167,167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ProgramFlow':([0,],[1,]),'VariablesDeclaration':([0,14,],[2,38,]),'type':([0,14,],[3,3,]),'SubroutinesDeclaration':([2,52,],[6,82,]),'RecVariableDeclaration':([3,15,67,71,],[8,39,95,99,]),'variable':([3,13,15,16,18,19,23,24,25,26,28,46,53,54,62,63,64,65,66,67,68,69,71,85,86,100,101,102,103,123,124,126,134,135,136,152,153,170,171,172,173,175,184,],[9,29,9,40,49,29,29,29,29,29,29,40,29,29,87,88,40,40,29,9,96,40,9,29,40,40,40,40,40,40,139,40,29,40,29,40,29,29,29,40,29,29,29,]),'Main':([6,],[11,]),'dimensions':([10,79,80,],[17,105,106,]),'Routine':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[20,51,55,56,57,58,60,83,84,94,107,149,151,179,180,185,]),'AssignmentStatement':([13,19,23,24,25,26,28,53,54,66,85,134,136,153,170,171,173,175,184,],[21,21,21,21,21,21,21,21,21,21,21,21,21,162,162,162,21,21,21,]),'UnaryOperation':([13,16,19,23,24,25,26,28,46,53,54,64,65,66,69,85,86,100,101,102,103,123,126,134,135,136,152,153,170,171,172,173,175,184,],[22,45,22,22,22,22,22,22,45,22,22,45,45,22,45,22,45,45,45,45,45,45,45,22,45,22,45,163,163,163,45,22,22,22,]),'ifCondition':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'whileLoop':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'doWhileLoop':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'forLoop':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'InOut':([13,19,23,24,25,26,28,53,54,66,85,134,136,173,175,184,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ArithmeticExpression':([16,46,64,65,69,86,123,126,135,152,172,],[41,76,92,92,97,108,92,141,92,92,92,]),'term':([16,46,64,65,69,86,100,101,123,126,135,152,172,],[42,42,42,42,42,42,129,130,42,42,42,42,42,]),'factor':([16,46,64,65,69,86,100,101,102,103,123,126,135,152,172,],[43,43,43,43,43,43,43,43,131,132,43,43,43,43,43,]),'Number':([16,18,46,64,65,69,86,100,101,102,103,123,126,135,152,172,],[44,50,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'action_insert_variable':([29,40,],[61,70,]),'action_insert_operator':([30,31,72,73,74,75,112,],[62,63,100,101,102,103,135,]),'action_insert_int_operand':([47,],[77,]),'action_insert_double_operand':([48,],[78,]),'BooleanExpression':([64,65,123,135,152,172,],[89,93,138,150,160,178,]),'action_generate_unary_operation_quadruplet':([87,88,],[109,110,]),'LogicOperator':([92,],[112,]),'RecursiveIn':([96,139,],[125,154,]),'RecursiveOut':([97,98,141,142,],[127,128,155,156,]),'action_assignation':([108,],[133,]),'action_generate_quadruplet':([129,130,131,132,150,],[145,146,147,148,158,]),'UpdateVariables':([153,170,171,],[161,176,177,]),'elseIfCondition':([157,186,],[164,187,]),'elseCondition':([157,186,],[166,166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramFlow","S'",1,None,None,None),
  ('ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main','ProgramFlow',3,'p_ProgramFlow','omega.py',189),
  ('Main -> main open_brace Routine close_brace','Main',4,'p_Main','omega.py',201),
  ('Number -> int_number action_insert_int_operand','Number',2,'p_Number','omega.py',207),
  ('Number -> double_number action_insert_double_operand','Number',2,'p_Number','omega.py',208),
  ('variable -> identifier dimensions','variable',2,'p_variable','omega.py',213),
  ('dimensions -> open_bracket variable close_bracket dimensions','dimensions',4,'p_dimensions','omega.py',219),
  ('dimensions -> open_bracket Number close_bracket dimensions','dimensions',4,'p_dimensions','omega.py',220),
  ('dimensions -> <empty>','dimensions',0,'p_dimensions','omega.py',221),
  ('VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration','VariablesDeclaration',4,'p_VariablesDeclaration','omega.py',226),
  ('VariablesDeclaration -> <empty>','VariablesDeclaration',0,'p_VariablesDeclaration','omega.py',227),
  ('RecVariableDeclaration -> variable','RecVariableDeclaration',1,'p_RecVariableDeclaration','omega.py',235),
  ('RecVariableDeclaration -> variable comma RecVariableDeclaration','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',236),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',237),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration','RecVariableDeclaration',5,'p_RecVariableDeclaration','omega.py',238),
  ('type -> int','type',1,'p_type','omega.py',247),
  ('type -> double','type',1,'p_type','omega.py',248),
  ('ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',257),
  ('ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',258),
  ('ArithmeticExpression -> term','ArithmeticExpression',1,'p_expression_plus_minus','omega.py',259),
  ('term -> factor','term',1,'p_term_times_div','omega.py',264),
  ('term -> term star action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',265),
  ('term -> term slash action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',266),
  ('factor -> Number','factor',1,'p_factor','omega.py',271),
  ('factor -> variable action_insert_variable','factor',2,'p_factor','omega.py',272),
  ('factor -> UnaryOperation','factor',1,'p_factor','omega.py',273),
  ('factor -> open_parenthesis ArithmeticExpression close_parenthesis','factor',3,'p_factor','omega.py',274),
  ('BooleanExpression -> true','BooleanExpression',1,'p_BooleanExpression','omega.py',279),
  ('BooleanExpression -> false','BooleanExpression',1,'p_BooleanExpression','omega.py',280),
  ('BooleanExpression -> ArithmeticExpression','BooleanExpression',1,'p_BooleanExpression','omega.py',281),
  ('BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet','BooleanExpression',5,'p_BooleanExpression','omega.py',282),
  ('AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation','AssignmentStatement',5,'p_AssignmentStatement','omega.py',287),
  ('UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet','UnaryOperation',4,'p_UnaryOperation','omega.py',292),
  ('UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet','UnaryOperation',4,'p_UnaryOperation','omega.py',293),
  ('LogicOperator -> is_equal','LogicOperator',1,'p_LogicOperator','omega.py',298),
  ('LogicOperator -> not_equal','LogicOperator',1,'p_LogicOperator','omega.py',299),
  ('LogicOperator -> less_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',300),
  ('LogicOperator -> greater_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',301),
  ('LogicOperator -> less_than','LogicOperator',1,'p_LogicOperator','omega.py',302),
  ('LogicOperator -> greater_than','LogicOperator',1,'p_LogicOperator','omega.py',303),
  ('LogicOperator -> and','LogicOperator',1,'p_LogicOperator','omega.py',304),
  ('LogicOperator -> or','LogicOperator',1,'p_LogicOperator','omega.py',305),
  ('ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition','ifCondition',8,'p_ifCondition','omega.py',313),
  ('elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition','elseIfCondition',8,'p_elseIfCondition','omega.py',318),
  ('elseIfCondition -> elseCondition','elseIfCondition',1,'p_elseIfCondition','omega.py',319),
  ('elseCondition -> else open_brace Routine close_brace','elseCondition',4,'p_elseCondition','omega.py',324),
  ('elseCondition -> <empty>','elseCondition',0,'p_elseCondition','omega.py',325),
  ('whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace','whileLoop',7,'p_whileLoop','omega.py',332),
  ('doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon','doWhileLoop',9,'p_doWhileLoop','omega.py',337),
  ('forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace','forLoop',11,'p_forLoop','omega.py',342),
  ('UpdateVariables -> AssignmentStatement','UpdateVariables',1,'p_UpdateVariables','omega.py',346),
  ('UpdateVariables -> AssignmentStatement comma UpdateVariables','UpdateVariables',3,'p_UpdateVariables','omega.py',347),
  ('UpdateVariables -> UnaryOperation','UpdateVariables',1,'p_UpdateVariables','omega.py',348),
  ('UpdateVariables -> UnaryOperation comma UpdateVariables','UpdateVariables',3,'p_UpdateVariables','omega.py',349),
  ('SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration','SubroutinesDeclaration',5,'p_SubroutinesDeclaration','omega.py',356),
  ('SubroutinesDeclaration -> <empty>','SubroutinesDeclaration',0,'p_SubroutinesDeclaration','omega.py',357),
  ('Routine -> AssignmentStatement semicolon Routine','Routine',3,'p_Routine','omega.py',362),
  ('Routine -> UnaryOperation semicolon Routine','Routine',3,'p_Routine','omega.py',363),
  ('Routine -> ifCondition Routine','Routine',2,'p_Routine','omega.py',364),
  ('Routine -> whileLoop Routine','Routine',2,'p_Routine','omega.py',365),
  ('Routine -> doWhileLoop Routine','Routine',2,'p_Routine','omega.py',366),
  ('Routine -> forLoop Routine','Routine',2,'p_Routine','omega.py',367),
  ('Routine -> call identifier semicolon Routine','Routine',4,'p_Routine','omega.py',368),
  ('Routine -> InOut Routine','Routine',2,'p_Routine','omega.py',369),
  ('Routine -> <empty>','Routine',0,'p_Routine','omega.py',370),
  ('InOut -> cin in variable RecursiveIn semicolon','InOut',5,'p_InOut','omega.py',377),
  ('InOut -> cout out ArithmeticExpression RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',378),
  ('InOut -> cout out string RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',379),
  ('RecursiveIn -> in variable RecursiveIn','RecursiveIn',3,'p_RecursiveIn','omega.py',384),
  ('RecursiveIn -> <empty>','RecursiveIn',0,'p_RecursiveIn','omega.py',385),
  ('RecursiveOut -> out ArithmeticExpression RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',390),
  ('RecursiveOut -> out string RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',391),
  ('RecursiveOut -> <empty>','RecursiveOut',0,'p_RecursiveOut','omega.py',392),
  ('action_insert_variable -> <empty>','action_insert_variable',0,'p_action_insert_variable','omega.py',396),
  ('action_insert_int_operand -> <empty>','action_insert_int_operand',0,'p_action_insert_int_operand','omega.py',403),
  ('action_insert_double_operand -> <empty>','action_insert_double_operand',0,'p_action_insert_double_operand','omega.py',408),
  ('action_insert_operator -> <empty>','action_insert_operator',0,'p_action_insert_operator','omega.py',413),
  ('action_generate_quadruplet -> <empty>','action_generate_quadruplet',0,'p_action_generate_aquadruplet','omega.py',417),
  ('action_assignation -> <empty>','action_assignation',0,'p_action_assignation','omega.py',429),
  ('action_generate_unary_operation_quadruplet -> <empty>','action_generate_unary_operation_quadruplet',0,'p_action_generate_unary_operation_quadruplet','omega.py',435),
]
