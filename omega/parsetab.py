
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftis_equalnot_equalless_or_equalgreater_or_equalless_thangreater_thanandorleftplusminusleftstarslashand call cin close_brace close_bracket close_parenthesis comma cout do double double_number else elseif equal false for greater_or_equal greater_than identifier if in int int_number is_equal less_or_equal less_than main minus minus_minus not_equal open_brace open_bracket open_parenthesis or out plus plus_plus semicolon slash star string true while\n\t\tProgramFlow : VariablesDeclaration SubroutinesDeclaration Main\n\t\n\t\tMain : main open_brace Routine close_brace\n\t\n\t\tNumber : int_number action_insert_int_operand\n\t\t\t   | double_number action_insert_double_operand\n\t\n\t\tvariable : identifier dimensions\n\t\n\t\tdimensions : open_bracket int_number close_bracket dimensions\n\t\t\t\t   |\n\t\t\n\t\tVariablesDeclaration : type RecVariableDeclaration semicolon VariablesDeclaration\n\t\t\t\t\t\t\t |\n\t\n\t\tRecVariableDeclaration  :\tvariable \n\t\t\t\t\t\t\t\t|\tvariable comma RecVariableDeclaration\n\t\t\t\t\t\t\t\t|   variable equal ArithmeticExpression\n\t\t\t\t\t\t\t\t|\tvariable equal ArithmeticExpression comma RecVariableDeclaration\n\t\n\t\ttype : int\t\n\t\t\t | double\n\t\n\tArithmeticExpression  : ArithmeticExpression plus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | ArithmeticExpression minus action_insert_operator term action_generate_quadruplet\n\t\t\t\t\t\t  | term\n\t\n    term\t\t: factor\n\t\t\t\t| term star action_insert_operator factor action_generate_quadruplet\n\t\t\t\t| term slash action_insert_operator factor action_generate_quadruplet\n\n\t\n    factor : Number\n\t\t   | variable action_insert_variable_as_operand\n\t\t   | UnaryOperation\n\t\t   | open_parenthesis ArithmeticExpression close_parenthesis\n\t\n\t\tBooleanExpression : true \n\t\t\t\t\t\t  | false \n\t\t\t\t\t\t  | ArithmeticExpression\n\t\t\t\t\t\t  | ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet\n\t\n\t\tAssignmentStatement : variable action_insert_variable_as_operand equal ArithmeticExpression action_assignation\n\t\t\t\t\t\t\t| UnaryOperation\n\t\n\t\tUnaryOperation : plus_plus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet\n\t\t\t\t\t   | minus_minus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet\n\t\n\t\tLogicOperator : is_equal\n\t\t\t\t\t  |\tnot_equal\n\t\t\t\t\t  |\tless_or_equal\n\t\t\t\t\t  |\tgreater_or_equal\n\t\t\t\t\t  |\tless_than\n\t\t\t\t\t  |\tgreater_than\n\t\t\t\t\t  | and\n\t\t\t\t\t  | or\n\t\n\t\tifCondition : if open_parenthesis BooleanExpression action_pushToIfStack action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\n\t\telseIfCondition : action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto elseif open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition\n\t\t\t\t\t\t| elseCondition\n\t\n\t\telseCondition : action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto  else open_brace Routine close_brace action_fillUnconditionalGotosWithEnd\n\t\t\t\t\t  | action_fillUnconditionalGotosWithEnd\n\t\n\t\twhileLoop : while open_parenthesis action_pushToJumpStack BooleanExpression  action_pushToJumpStack  action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace action_fillPreviousGotoFalse action_generateGotoBooleanExpression\n\t\n\t\tdoWhileLoop : do open_brace action_pushToJumpStack Routine close_brace while open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet action_fillPreviousGotoFalse  action_generateUnconditionalGoto action_fillWithStartUpdateDirection close_parenthesis semicolon\n\t\n\t\tforLoop : for open_parenthesis initializeForLoop semicolon action_pushToJumpStack BooleanExpression semicolon action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet action_pushToJumpStack action_generateUnconditionalGoto action_pushToJumpStack UpdateVariables action_generateUnconditionalGoto action_fillWithTestingDirection close_parenthesis open_brace action_fillWithStartDirectionForRoutine Routine action_generateUnconditionalGoto action_fillWithStartUpdateDirection close_brace action_fillWithEndLoop\n\t\n\tUpdateVariables : AssignmentStatement\n\t\t\t\t\t| AssignmentStatement comma UpdateVariables\n \t\n\t\tinitializeForLoop : UpdateVariables\n\t\t\t\t\t\t  |\n\t\n\t\tSubroutinesDeclaration : identifier open_brace Routine close_brace SubroutinesDeclaration\n\t\t\t\t\t\t\t   |\n\t\n\t\tRoutine : AssignmentStatement semicolon Routine\n\t\t\t\t| ifCondition Routine\n\t\t\t\t| whileLoop Routine\n\t\t\t\t| doWhileLoop Routine\n\t\t\t\t| forLoop Routine\n\t\t\t\t| call identifier semicolon Routine\n\t\t\t\t| InOut Routine\n\t\t\t\t|\n\t\n\t\tInOut : cin in variable RecursiveIn semicolon\n\t\t\t  | cout out ArithmeticExpression RecursiveOut semicolon\n\t\t\t  | cout out string RecursiveOut semicolon\n\t\n\t\tRecursiveIn : in variable RecursiveIn\n\t\t\t\t\t|\n\t\n\t\tRecursiveOut : out ArithmeticExpression RecursiveOut\n\t\t\t\t\t | out string RecursiveOut\n\t\t\t\t\t |\n\taction_insert_variable_as_operand :action_insert_int_operand :action_insert_double_operand :action_insert_operator : action_generate_quadruplet :action_assignation :action_generate_unary_operation_quadruplet :action_pushToJumpStack :action_generateEmptyGotoFalse_quadruplet :action_generateUnconditionalGoto :action_fillPreviousGotoFalse :action_fillWithStartDirectionForRoutine : action_fillWithTestingDirection : action_fillWithStartUpdateDirection : action_fillUnconditionalGotosWithEnd :action_fillWithEndLoop : action_pushToIfStack :action_generateGotoBooleanExpression :'
    
_lr_action_items = {'identifier':([0,2,3,4,5,13,14,15,16,19,22,23,24,25,26,27,36,37,38,46,51,52,60,61,62,63,64,65,66,67,69,70,71,72,73,81,82,87,88,98,99,100,101,107,108,109,110,111,112,113,114,115,118,119,120,122,133,136,139,142,143,161,162,163,164,166,170,171,172,174,175,177,178,179,181,183,185,193,194,195,201,202,204,205,208,212,213,214,215,],[-9,7,10,-14,-15,10,-9,10,10,10,10,10,10,10,57,10,-75,-75,-8,10,7,10,10,-79,-79,10,10,10,10,10,10,-75,-75,-75,-75,10,10,10,10,10,10,10,10,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,10,10,10,10,10,-64,-65,-66,10,-79,10,10,-80,-79,-86,-82,-81,-42,-44,-46,-89,-79,-47,10,10,10,-48,-86,-83,-45,10,10,-86,-87,-43,-49,]),'main':([0,2,6,14,38,51,79,],[-9,-55,12,-9,-8,-55,-54,]),'int':([0,14,],[4,4,]),'double':([0,14,],[5,5,]),'$end':([1,11,78,],[0,-1,-2,]),'open_brace':([7,12,32,158,160,190,199,206,],[13,19,62,163,164,194,202,208,]),'semicolon':([8,9,10,17,21,29,39,40,41,42,43,44,45,47,48,57,63,68,75,76,77,84,85,86,89,90,91,92,93,94,95,96,97,102,103,105,121,123,124,125,126,127,128,129,130,131,137,138,140,141,144,145,146,147,148,149,151,154,155,156,157,159,191,],[14,-10,-7,-5,52,-31,-11,-72,-12,-18,-19,-22,-24,-73,-74,81,-53,-23,-3,-4,-7,-26,-27,-28,118,-52,-50,-68,-71,-71,-72,-72,-13,-25,-6,-77,139,142,143,-78,-78,-76,-76,-76,-76,-30,-51,-68,-71,-71,-32,-33,-16,-17,-20,-21,-76,162,-67,-69,-70,-29,195,]),'comma':([9,10,17,29,40,41,42,43,44,45,47,48,68,75,76,77,91,95,96,102,103,105,125,126,127,128,129,130,131,144,145,146,147,148,149,],[15,-7,-5,-31,-72,69,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,119,-72,-72,-25,-6,-77,-78,-78,-76,-76,-76,-76,-30,-32,-33,-16,-17,-20,-21,]),'equal':([9,10,17,28,59,77,103,],[16,-7,-5,-72,82,-7,-6,]),'open_bracket':([10,77,],[18,18,]),'star':([10,17,40,42,43,44,45,47,48,68,75,76,77,95,96,102,103,125,126,127,128,129,130,144,145,148,149,],[-7,-5,-72,72,-19,-22,-24,-73,-74,-23,-3,-4,-7,-72,-72,-25,-6,-78,-78,72,72,-76,-76,-32,-33,-20,-21,]),'slash':([10,17,40,42,43,44,45,47,48,68,75,76,77,95,96,102,103,125,126,127,128,129,130,144,145,148,149,],[-7,-5,-72,73,-19,-22,-24,-73,-74,-23,-3,-4,-7,-72,-72,-25,-6,-78,-78,73,73,-76,-76,-32,-33,-20,-21,]),'plus':([10,17,40,41,42,43,44,45,47,48,68,74,75,76,77,86,93,95,96,102,103,105,125,126,127,128,129,130,140,144,145,146,147,148,149,],[-7,-5,-72,70,-18,-19,-22,-24,-73,-74,-23,70,-3,-4,-7,70,70,-72,-72,-25,-6,70,-78,-78,-76,-76,-76,-76,70,-32,-33,-16,-17,-20,-21,]),'minus':([10,17,40,41,42,43,44,45,47,48,68,74,75,76,77,86,93,95,96,102,103,105,125,126,127,128,129,130,140,144,145,146,147,148,149,],[-7,-5,-72,71,-18,-19,-22,-24,-73,-74,-23,71,-3,-4,-7,71,71,-72,-72,-25,-6,71,-78,-78,-76,-76,-76,-76,71,-32,-33,-16,-17,-20,-21,]),'close_parenthesis':([10,17,29,40,42,43,44,45,47,48,68,74,75,76,77,83,84,85,86,91,95,96,102,103,105,106,116,125,126,127,128,129,130,131,132,134,137,144,145,146,147,148,149,150,151,152,159,165,169,173,180,184,187,188,192,196,197,200,203,],[-7,-5,-31,-72,-18,-19,-22,-24,-73,-74,-23,102,-3,-4,-7,-88,-26,-27,-28,-50,-72,-72,-25,-6,-77,-79,-79,-78,-78,-76,-76,-76,-76,-30,-80,-80,-51,-32,-33,-16,-17,-20,-21,158,-76,160,-29,-79,-80,-82,-81,-85,191,-81,-84,199,-79,-80,206,]),'is_equal':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,108,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'not_equal':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,109,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'less_or_equal':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,110,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'greater_or_equal':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,111,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'less_than':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,112,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'greater_than':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,113,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'and':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,114,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'or':([10,17,40,42,43,44,45,47,48,68,75,76,77,86,95,96,102,103,125,126,127,128,129,130,144,145,146,147,148,149,],[-7,-5,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,115,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,-32,-33,-16,-17,-20,-21,]),'in':([10,17,34,77,92,103,138,],[-7,-5,64,-7,120,-6,120,]),'out':([10,17,35,40,42,43,44,45,47,48,68,75,76,77,93,94,95,96,102,103,125,126,127,128,129,130,140,141,144,145,146,147,148,149,],[-7,-5,65,-72,-18,-19,-22,-24,-73,-74,-23,-3,-4,-7,122,122,-72,-72,-25,-6,-78,-78,-76,-76,-76,-76,122,122,-32,-33,-16,-17,-20,-21,]),'call':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[26,26,26,26,26,26,26,26,-79,26,26,-64,-65,-66,26,26,-86,-82,-42,-44,-46,-89,-47,26,-48,-86,-83,-45,26,26,-86,-87,-43,-49,]),'close_brace':([13,19,20,22,23,24,25,27,50,52,53,54,55,56,58,62,80,81,88,104,117,139,142,143,163,164,167,168,171,172,175,177,178,179,183,194,195,198,201,202,204,205,207,208,209,210,211,212,213,214,215,],[-63,-63,51,-63,-63,-63,-63,-63,78,-63,-57,-58,-59,-60,-62,-79,-56,-63,-63,-61,135,-64,-65,-66,-63,-63,171,172,-86,-82,-42,-44,-46,-89,-47,-63,-48,201,-86,-83,-45,-63,-81,-63,-85,212,213,-86,-87,-43,-49,]),'if':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[30,30,30,30,30,30,30,30,-79,30,30,-64,-65,-66,30,30,-86,-82,-42,-44,-46,-89,-47,30,-48,-86,-83,-45,30,30,-86,-87,-43,-49,]),'while':([13,19,22,23,24,25,27,52,62,81,88,135,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[31,31,31,31,31,31,31,31,-79,31,31,153,-64,-65,-66,31,31,-86,-82,-42,-44,-46,-89,-47,31,-48,-86,-83,-45,31,31,-86,-87,-43,-49,]),'do':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[32,32,32,32,32,32,32,32,-79,32,32,-64,-65,-66,32,32,-86,-82,-42,-44,-46,-89,-47,32,-48,-86,-83,-45,32,32,-86,-87,-43,-49,]),'for':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[33,33,33,33,33,33,33,33,-79,33,33,-64,-65,-66,33,33,-86,-82,-42,-44,-46,-89,-47,33,-48,-86,-83,-45,33,33,-86,-87,-43,-49,]),'cin':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[34,34,34,34,34,34,34,34,-79,34,34,-64,-65,-66,34,34,-86,-82,-42,-44,-46,-89,-47,34,-48,-86,-83,-45,34,34,-86,-87,-43,-49,]),'cout':([13,19,22,23,24,25,27,52,62,81,88,139,142,143,163,164,171,172,175,177,178,179,183,194,195,201,202,204,205,208,212,213,214,215,],[35,35,35,35,35,35,35,35,-79,35,35,-64,-65,-66,35,35,-86,-82,-42,-44,-46,-89,-47,35,-48,-86,-83,-45,35,35,-86,-87,-43,-49,]),'plus_plus':([13,16,19,22,23,24,25,27,46,52,60,61,62,63,65,70,71,72,73,81,82,87,88,98,99,100,101,107,108,109,110,111,112,113,114,115,118,119,122,133,136,139,142,143,161,162,163,164,166,170,171,172,174,175,177,178,179,181,183,185,193,194,195,201,202,204,205,208,212,213,214,215,],[36,36,36,36,36,36,36,36,36,36,36,-79,-79,36,36,-75,-75,-75,-75,36,36,36,36,36,36,36,36,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,36,36,36,36,-64,-65,-66,36,-79,36,36,-80,-79,-86,-82,-81,-42,-44,-46,-89,-79,-47,36,36,36,-48,-86,-83,-45,36,36,-86,-87,-43,-49,]),'minus_minus':([13,16,19,22,23,24,25,27,46,52,60,61,62,63,65,70,71,72,73,81,82,87,88,98,99,100,101,107,108,109,110,111,112,113,114,115,118,119,122,133,136,139,142,143,161,162,163,164,166,170,171,172,174,175,177,178,179,181,183,185,193,194,195,201,202,204,205,208,212,213,214,215,],[37,37,37,37,37,37,37,37,37,37,37,-79,-79,37,37,-75,-75,-75,-75,37,37,37,37,37,37,37,37,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,37,37,37,37,-64,-65,-66,37,-79,37,37,-80,-79,-86,-82,-81,-42,-44,-46,-89,-79,-47,37,37,37,-48,-86,-83,-45,37,37,-86,-87,-43,-49,]),'open_parenthesis':([16,30,31,33,46,60,61,65,70,71,72,73,82,87,98,99,100,101,107,108,109,110,111,112,113,114,115,118,122,133,136,153,161,189,193,],[46,60,61,63,46,46,-79,46,-75,-75,-75,-75,46,46,46,46,46,46,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,46,46,46,161,46,193,46,]),'int_number':([16,18,46,60,61,65,70,71,72,73,82,87,98,99,100,101,107,108,109,110,111,112,113,114,115,118,122,133,136,161,193,],[47,49,47,47,-79,47,-75,-75,-75,-75,47,47,47,47,47,47,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,47,47,47,47,47,]),'double_number':([16,46,60,61,65,70,71,72,73,82,87,98,99,100,101,107,108,109,110,111,112,113,114,115,118,122,133,136,161,193,],[48,48,48,-79,48,-75,-75,-75,-75,48,48,48,48,48,48,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,48,48,48,48,48,]),'close_bracket':([49,],[77,]),'true':([60,61,87,107,108,109,110,111,112,113,114,115,118,133,136,161,193,],[84,-79,84,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,84,84,84,84,]),'false':([60,61,87,107,108,109,110,111,112,113,114,115,118,133,136,161,193,],[85,-79,85,-75,-34,-35,-36,-37,-38,-39,-40,-41,-79,85,85,85,85,]),'string':([65,122,],[94,141,]),'elseif':([171,176,182,186,212,],[-82,-79,-81,189,-82,]),'else':([171,176,182,186,212,],[-82,-79,-81,190,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ProgramFlow':([0,],[1,]),'VariablesDeclaration':([0,14,],[2,38,]),'type':([0,14,],[3,3,]),'SubroutinesDeclaration':([2,51,],[6,79,]),'RecVariableDeclaration':([3,15,69,],[8,39,97,]),'variable':([3,13,15,16,19,22,23,24,25,27,46,52,60,63,64,65,66,67,69,81,82,87,88,98,99,100,101,119,120,122,133,136,161,163,164,185,193,194,205,208,],[9,28,9,40,28,28,28,28,28,28,40,28,40,28,92,40,95,96,9,28,40,40,28,40,40,40,40,28,138,40,40,40,40,28,28,28,40,28,28,28,]),'Main':([6,],[11,]),'dimensions':([10,77,],[17,103,]),'Routine':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[20,50,53,54,55,56,58,80,104,117,167,168,198,207,210,]),'AssignmentStatement':([13,19,22,23,24,25,27,52,63,81,88,119,163,164,185,194,205,208,],[21,21,21,21,21,21,21,21,91,21,21,91,21,21,91,21,21,21,]),'ifCondition':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'whileLoop':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'doWhileLoop':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'forLoop':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'InOut':([13,19,22,23,24,25,27,52,81,88,163,164,194,205,208,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'UnaryOperation':([13,16,19,22,23,24,25,27,46,52,60,63,65,81,82,87,88,98,99,100,101,119,122,133,136,161,163,164,185,193,194,205,208,],[29,45,29,29,29,29,29,29,45,29,45,29,45,29,45,45,29,45,45,45,45,29,45,45,45,45,29,29,29,45,29,29,29,]),'ArithmeticExpression':([16,46,60,65,82,87,122,133,136,161,193,],[41,74,86,93,105,86,140,86,86,86,86,]),'term':([16,46,60,65,82,87,98,99,122,133,136,161,193,],[42,42,42,42,42,42,127,128,42,42,42,42,42,]),'factor':([16,46,60,65,82,87,98,99,100,101,122,133,136,161,193,],[43,43,43,43,43,43,43,43,129,130,43,43,43,43,43,]),'Number':([16,46,60,65,82,87,98,99,100,101,122,133,136,161,193,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'action_insert_variable_as_operand':([28,40,95,96,],[59,68,125,126,]),'action_insert_operator':([36,37,70,71,72,73,107,],[66,67,98,99,100,101,133,]),'action_insert_int_operand':([47,],[75,]),'action_insert_double_operand':([48,],[76,]),'BooleanExpression':([60,87,133,136,161,193,],[83,116,151,154,165,197,]),'action_pushToJumpStack':([61,62,106,116,118,162,165,170,176,181,197,],[87,88,132,134,136,166,169,174,182,185,200,]),'initializeForLoop':([63,],[89,]),'UpdateVariables':([63,119,185,],[90,137,188,]),'action_pushToIfStack':([83,],[106,]),'LogicOperator':([86,],[107,]),'RecursiveIn':([92,138,],[121,155,]),'RecursiveOut':([93,94,140,141,],[123,124,156,157,]),'action_assignation':([105,],[131,]),'action_generate_unary_operation_quadruplet':([125,126,],[144,145,]),'action_generate_quadruplet':([127,128,129,130,151,],[146,147,148,149,159,]),'action_generateEmptyGotoFalse_quadruplet':([132,134,166,169,200,],[150,152,170,173,203,]),'elseIfCondition':([171,212,],[175,214,]),'action_fillPreviousGotoFalse':([171,172,173,212,],[176,179,180,176,]),'elseCondition':([171,212,],[177,177,]),'action_fillUnconditionalGotosWithEnd':([171,201,212,],[178,204,178,]),'action_generateUnconditionalGoto':([174,180,182,188,207,],[181,184,186,192,209,]),'action_generateGotoBooleanExpression':([179,],[183,]),'action_fillWithStartUpdateDirection':([184,209,],[187,211,]),'action_fillWithTestingDirection':([192,],[196,]),'action_fillWithStartDirectionForRoutine':([202,],[205,]),'action_fillWithEndLoop':([213,],[215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramFlow","S'",1,None,None,None),
  ('ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main','ProgramFlow',3,'p_ProgramFlow','omega.py',198),
  ('Main -> main open_brace Routine close_brace','Main',4,'p_Main','omega.py',210),
  ('Number -> int_number action_insert_int_operand','Number',2,'p_Number','omega.py',216),
  ('Number -> double_number action_insert_double_operand','Number',2,'p_Number','omega.py',217),
  ('variable -> identifier dimensions','variable',2,'p_variable','omega.py',222),
  ('dimensions -> open_bracket int_number close_bracket dimensions','dimensions',4,'p_dimensions','omega.py',228),
  ('dimensions -> <empty>','dimensions',0,'p_dimensions','omega.py',229),
  ('VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration','VariablesDeclaration',4,'p_VariablesDeclaration','omega.py',234),
  ('VariablesDeclaration -> <empty>','VariablesDeclaration',0,'p_VariablesDeclaration','omega.py',235),
  ('RecVariableDeclaration -> variable','RecVariableDeclaration',1,'p_RecVariableDeclaration','omega.py',243),
  ('RecVariableDeclaration -> variable comma RecVariableDeclaration','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',244),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression','RecVariableDeclaration',3,'p_RecVariableDeclaration','omega.py',245),
  ('RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration','RecVariableDeclaration',5,'p_RecVariableDeclaration','omega.py',246),
  ('type -> int','type',1,'p_type','omega.py',255),
  ('type -> double','type',1,'p_type','omega.py',256),
  ('ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',265),
  ('ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet','ArithmeticExpression',5,'p_expression_plus_minus','omega.py',266),
  ('ArithmeticExpression -> term','ArithmeticExpression',1,'p_expression_plus_minus','omega.py',267),
  ('term -> factor','term',1,'p_term_times_div','omega.py',272),
  ('term -> term star action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',273),
  ('term -> term slash action_insert_operator factor action_generate_quadruplet','term',5,'p_term_times_div','omega.py',274),
  ('factor -> Number','factor',1,'p_factor','omega.py',279),
  ('factor -> variable action_insert_variable_as_operand','factor',2,'p_factor','omega.py',280),
  ('factor -> UnaryOperation','factor',1,'p_factor','omega.py',281),
  ('factor -> open_parenthesis ArithmeticExpression close_parenthesis','factor',3,'p_factor','omega.py',282),
  ('BooleanExpression -> true','BooleanExpression',1,'p_BooleanExpression','omega.py',287),
  ('BooleanExpression -> false','BooleanExpression',1,'p_BooleanExpression','omega.py',288),
  ('BooleanExpression -> ArithmeticExpression','BooleanExpression',1,'p_BooleanExpression','omega.py',289),
  ('BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet','BooleanExpression',5,'p_BooleanExpression','omega.py',290),
  ('AssignmentStatement -> variable action_insert_variable_as_operand equal ArithmeticExpression action_assignation','AssignmentStatement',5,'p_AssignmentStatement','omega.py',295),
  ('AssignmentStatement -> UnaryOperation','AssignmentStatement',1,'p_AssignmentStatement','omega.py',296),
  ('UnaryOperation -> plus_plus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet','UnaryOperation',5,'p_UnaryOperation','omega.py',301),
  ('UnaryOperation -> minus_minus action_insert_operator variable action_insert_variable_as_operand action_generate_unary_operation_quadruplet','UnaryOperation',5,'p_UnaryOperation','omega.py',302),
  ('LogicOperator -> is_equal','LogicOperator',1,'p_LogicOperator','omega.py',307),
  ('LogicOperator -> not_equal','LogicOperator',1,'p_LogicOperator','omega.py',308),
  ('LogicOperator -> less_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',309),
  ('LogicOperator -> greater_or_equal','LogicOperator',1,'p_LogicOperator','omega.py',310),
  ('LogicOperator -> less_than','LogicOperator',1,'p_LogicOperator','omega.py',311),
  ('LogicOperator -> greater_than','LogicOperator',1,'p_LogicOperator','omega.py',312),
  ('LogicOperator -> and','LogicOperator',1,'p_LogicOperator','omega.py',313),
  ('LogicOperator -> or','LogicOperator',1,'p_LogicOperator','omega.py',314),
  ('ifCondition -> if open_parenthesis BooleanExpression action_pushToIfStack action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition','ifCondition',11,'p_ifCondition','omega.py',322),
  ('elseIfCondition -> action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto elseif open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace elseIfCondition','elseIfCondition',13,'p_elseIfCondition','omega.py',327),
  ('elseIfCondition -> elseCondition','elseIfCondition',1,'p_elseIfCondition','omega.py',328),
  ('elseCondition -> action_fillPreviousGotoFalse action_pushToJumpStack action_generateUnconditionalGoto else open_brace Routine close_brace action_fillUnconditionalGotosWithEnd','elseCondition',8,'p_elseCondition','omega.py',333),
  ('elseCondition -> action_fillUnconditionalGotosWithEnd','elseCondition',1,'p_elseCondition','omega.py',334),
  ('whileLoop -> while open_parenthesis action_pushToJumpStack BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet close_parenthesis open_brace Routine close_brace action_fillPreviousGotoFalse action_generateGotoBooleanExpression','whileLoop',12,'p_whileLoop','omega.py',341),
  ('doWhileLoop -> do open_brace action_pushToJumpStack Routine close_brace while open_parenthesis BooleanExpression action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet action_fillPreviousGotoFalse action_generateUnconditionalGoto action_fillWithStartUpdateDirection close_parenthesis semicolon','doWhileLoop',15,'p_doWhileLoop','omega.py',346),
  ('forLoop -> for open_parenthesis initializeForLoop semicolon action_pushToJumpStack BooleanExpression semicolon action_pushToJumpStack action_generateEmptyGotoFalse_quadruplet action_pushToJumpStack action_generateUnconditionalGoto action_pushToJumpStack UpdateVariables action_generateUnconditionalGoto action_fillWithTestingDirection close_parenthesis open_brace action_fillWithStartDirectionForRoutine Routine action_generateUnconditionalGoto action_fillWithStartUpdateDirection close_brace action_fillWithEndLoop','forLoop',23,'p_forLoop','omega.py',351),
  ('UpdateVariables -> AssignmentStatement','UpdateVariables',1,'p_UpdateVariables','omega.py',355),
  ('UpdateVariables -> AssignmentStatement comma UpdateVariables','UpdateVariables',3,'p_UpdateVariables','omega.py',356),
  ('initializeForLoop -> UpdateVariables','initializeForLoop',1,'p_initializeForLoop','omega.py',361),
  ('initializeForLoop -> <empty>','initializeForLoop',0,'p_initializeForLoop','omega.py',362),
  ('SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration','SubroutinesDeclaration',5,'p_SubroutinesDeclaration','omega.py',369),
  ('SubroutinesDeclaration -> <empty>','SubroutinesDeclaration',0,'p_SubroutinesDeclaration','omega.py',370),
  ('Routine -> AssignmentStatement semicolon Routine','Routine',3,'p_Routine','omega.py',375),
  ('Routine -> ifCondition Routine','Routine',2,'p_Routine','omega.py',376),
  ('Routine -> whileLoop Routine','Routine',2,'p_Routine','omega.py',377),
  ('Routine -> doWhileLoop Routine','Routine',2,'p_Routine','omega.py',378),
  ('Routine -> forLoop Routine','Routine',2,'p_Routine','omega.py',379),
  ('Routine -> call identifier semicolon Routine','Routine',4,'p_Routine','omega.py',380),
  ('Routine -> InOut Routine','Routine',2,'p_Routine','omega.py',381),
  ('Routine -> <empty>','Routine',0,'p_Routine','omega.py',382),
  ('InOut -> cin in variable RecursiveIn semicolon','InOut',5,'p_InOut','omega.py',389),
  ('InOut -> cout out ArithmeticExpression RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',390),
  ('InOut -> cout out string RecursiveOut semicolon','InOut',5,'p_InOut','omega.py',391),
  ('RecursiveIn -> in variable RecursiveIn','RecursiveIn',3,'p_RecursiveIn','omega.py',396),
  ('RecursiveIn -> <empty>','RecursiveIn',0,'p_RecursiveIn','omega.py',397),
  ('RecursiveOut -> out ArithmeticExpression RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',402),
  ('RecursiveOut -> out string RecursiveOut','RecursiveOut',3,'p_RecursiveOut','omega.py',403),
  ('RecursiveOut -> <empty>','RecursiveOut',0,'p_RecursiveOut','omega.py',404),
  ('action_insert_variable_as_operand -> <empty>','action_insert_variable_as_operand',0,'p_action_insert_variable_as_operand','omega.py',408),
  ('action_insert_int_operand -> <empty>','action_insert_int_operand',0,'p_action_insert_int_operand','omega.py',415),
  ('action_insert_double_operand -> <empty>','action_insert_double_operand',0,'p_action_insert_double_operand','omega.py',420),
  ('action_insert_operator -> <empty>','action_insert_operator',0,'p_action_insert_operator','omega.py',425),
  ('action_generate_quadruplet -> <empty>','action_generate_quadruplet',0,'p_action_generate_aquadruplet','omega.py',429),
  ('action_assignation -> <empty>','action_assignation',0,'p_action_assignation','omega.py',445),
  ('action_generate_unary_operation_quadruplet -> <empty>','action_generate_unary_operation_quadruplet',0,'p_action_generate_unary_operation_quadruplet','omega.py',457),
  ('action_pushToJumpStack -> <empty>','action_pushToJumpStack',0,'p_action_pushToJumpStack','omega.py',465),
  ('action_generateEmptyGotoFalse_quadruplet -> <empty>','action_generateEmptyGotoFalse_quadruplet',0,'p_action_generateEmptyGotoFalse_quadruplet','omega.py',471),
  ('action_generateUnconditionalGoto -> <empty>','action_generateUnconditionalGoto',0,'p_action_generateUnconditionalGoto','omega.py',483),
  ('action_fillPreviousGotoFalse -> <empty>','action_fillPreviousGotoFalse',0,'p_action_fillPreviousGotoFalse','omega.py',490),
  ('action_fillWithStartDirectionForRoutine -> <empty>','action_fillWithStartDirectionForRoutine',0,'p_action_fillWithStartDirectionForRoutine','omega.py',498),
  ('action_fillWithTestingDirection -> <empty>','action_fillWithTestingDirection',0,'p_action_fillWithTestingDirection','omega.py',504),
  ('action_fillWithStartUpdateDirection -> <empty>','action_fillWithStartUpdateDirection',0,'p_action_fillWithStartUpdateDirection','omega.py',510),
  ('action_fillUnconditionalGotosWithEnd -> <empty>','action_fillUnconditionalGotosWithEnd',0,'p_action_fillUnconditionalGotosWithEnd','omega.py',515),
  ('action_fillWithEndLoop -> <empty>','action_fillWithEndLoop',0,'p_action_fillWithEndLoop','omega.py',523),
  ('action_pushToIfStack -> <empty>','action_pushToIfStack',0,'p_action_pushToIfStack','omega.py',531),
  ('action_generateGotoBooleanExpression -> <empty>','action_generateGotoBooleanExpression',0,'p_action_generateGotoBooleanExpression','omega.py',538),
]
