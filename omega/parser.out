Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ProgramFlow
Rule 1     ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main
Rule 2     Main -> main open_brace Routine close_brace
Rule 3     Number -> int_number
Rule 4     Number -> double_number
Rule 5     variable -> identifier dimensions
Rule 6     dimensions -> open_bracket variable close_bracket dimensions
Rule 7     dimensions -> <empty>
Rule 8     VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration
Rule 9     VariablesDeclaration -> <empty>
Rule 10    RecVariableDeclaration -> variable
Rule 11    RecVariableDeclaration -> variable comma RecVariableDeclaration
Rule 12    RecVariableDeclaration -> variable equal ArithmeticExpression
Rule 13    RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration
Rule 14    type -> int
Rule 15    type -> double
Rule 16    ArithmeticExpression -> Number
Rule 17    ArithmeticExpression -> variable
Rule 18    ArithmeticExpression -> UnaryOperation
Rule 19    ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression
Rule 20    ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression
Rule 21    ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression
Rule 22    ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression
Rule 23    ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis
Rule 24    BooleanExpression -> true
Rule 25    BooleanExpression -> false
Rule 26    BooleanExpression -> ArithmeticExpression
Rule 27    BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression
Rule 28    AssignmentStatement -> variable equal ArithmeticExpression
Rule 29    UnaryOperation -> plus_plus variable
Rule 30    UnaryOperation -> minus_minus variable
Rule 31    UnaryOperation -> variable plus_plus
Rule 32    UnaryOperation -> variable minus_minus
Rule 33    LogicOperator -> is_equal
Rule 34    LogicOperator -> not_equal
Rule 35    LogicOperator -> less_or_equal
Rule 36    LogicOperator -> greater_or_equal
Rule 37    LogicOperator -> less_than
Rule 38    LogicOperator -> greater_than
Rule 39    LogicOperator -> and
Rule 40    LogicOperator -> or
Rule 41    ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 42    elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 43    elseIfCondition -> elseCondition
Rule 44    elseCondition -> else open_brace Routine close_brace
Rule 45    elseCondition -> <empty>
Rule 46    whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
Rule 47    doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
Rule 48    forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
Rule 49    UpdateVariables -> AssignmentStatement
Rule 50    UpdateVariables -> AssignmentStatement comma UpdateVariables
Rule 51    UpdateVariables -> UnaryOperation
Rule 52    UpdateVariables -> UnaryOperation comma UpdateVariables
Rule 53    SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration
Rule 54    SubroutinesDeclaration -> <empty>
Rule 55    Routine -> AssignmentStatement semicolon Routine
Rule 56    Routine -> UnaryOperation semicolon Routine
Rule 57    Routine -> ifCondition Routine
Rule 58    Routine -> whileLoop Routine
Rule 59    Routine -> doWhileLoop Routine
Rule 60    Routine -> forLoop Routine
Rule 61    Routine -> call identifier semicolon Routine
Rule 62    Routine -> InOut Routine
Rule 63    Routine -> <empty>
Rule 64    InOut -> cin in variable RecursiveIn semicolon
Rule 65    InOut -> cout out ArithmeticExpression RecursiveOut semicolon
Rule 66    InOut -> cout out string RecursiveOut semicolon
Rule 67    RecursiveIn -> in variable RecursiveIn
Rule 68    RecursiveIn -> <empty>
Rule 69    RecursiveOut -> out ArithmeticExpression RecursiveOut
Rule 70    RecursiveOut -> out string RecursiveOut
Rule 71    RecursiveOut -> <empty>

Terminals, with rules where they appear

and                  : 39
call                 : 61
cin                  : 64
close_brace          : 2 41 42 44 46 47 48 53
close_bracket        : 6
close_parenthesis    : 23 41 42 46 47 48
comma                : 11 13 50 52
cout                 : 65 66
do                   : 47
double               : 15
double_number        : 4
else                 : 44
elseif               : 42
equal                : 12 13 28
error                : 
false                : 25
for                  : 48
greater_or_equal     : 36
greater_than         : 38
identifier           : 5 53 61
if                   : 41
in                   : 64 67
int                  : 14
int_number           : 3
is_equal             : 33
less_or_equal        : 35
less_than            : 37
main                 : 2
minus                : 20
minus_minus          : 30 32
not_equal            : 34
open_brace           : 2 41 42 44 46 47 48 53
open_bracket         : 6
open_parenthesis     : 23 41 42 46 47 48
or                   : 40
out                  : 65 66 69 70
plus                 : 19
plus_plus            : 29 31
semicolon            : 8 47 48 48 55 56 61 64 65 66
slash                : 22
star                 : 21
string               : 66 70
true                 : 24
while                : 46 47

Nonterminals, with rules where they appear

ArithmeticExpression : 12 13 19 19 20 20 21 21 22 22 23 26 27 28 65 69
AssignmentStatement  : 49 50 55
BooleanExpression    : 27 41 42 46 47 48
InOut                : 62
LogicOperator        : 27
Main                 : 1
Number               : 16
ProgramFlow          : 0
RecVariableDeclaration : 8 11 13 48
RecursiveIn          : 64 67
RecursiveOut         : 65 66 69 70
Routine              : 2 41 42 44 46 47 48 53 55 56 57 58 59 60 61 62
SubroutinesDeclaration : 1 53
UnaryOperation       : 18 51 52 56
UpdateVariables      : 48 50 52
VariablesDeclaration : 1 8
dimensions           : 5 6
doWhileLoop          : 59
elseCondition        : 43
elseIfCondition      : 41 42
forLoop              : 60
ifCondition          : 57
type                 : 8
variable             : 6 10 11 12 13 17 28 29 30 31 32 64 67
whileLoop            : 58

Parsing method: LALR

state 0

    (0) S' -> . ProgramFlow
    (1) ProgramFlow -> . VariablesDeclaration SubroutinesDeclaration Main
    (8) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (9) VariablesDeclaration -> .
    (14) type -> . int
    (15) type -> . double

    identifier      reduce using rule 9 (VariablesDeclaration -> .)
    main            reduce using rule 9 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    ProgramFlow                    shift and go to state 1
    VariablesDeclaration           shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> ProgramFlow .



state 2

    (1) ProgramFlow -> VariablesDeclaration . SubroutinesDeclaration Main
    (53) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (54) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 54 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 6

state 3

    (8) VariablesDeclaration -> type . RecVariableDeclaration semicolon VariablesDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 8
    variable                       shift and go to state 9

state 4

    (14) type -> int .

    identifier      reduce using rule 14 (type -> int .)


state 5

    (15) type -> double .

    identifier      reduce using rule 15 (type -> double .)


state 6

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration . Main
    (2) Main -> . main open_brace Routine close_brace

    main            shift and go to state 12

    Main                           shift and go to state 11

state 7

    (53) SubroutinesDeclaration -> identifier . open_brace Routine close_brace SubroutinesDeclaration

    open_brace      shift and go to state 13


state 8

    (8) VariablesDeclaration -> type RecVariableDeclaration . semicolon VariablesDeclaration

    semicolon       shift and go to state 14


state 9

    (10) RecVariableDeclaration -> variable .
    (11) RecVariableDeclaration -> variable . comma RecVariableDeclaration
    (12) RecVariableDeclaration -> variable . equal ArithmeticExpression
    (13) RecVariableDeclaration -> variable . equal ArithmeticExpression comma RecVariableDeclaration

    semicolon       reduce using rule 10 (RecVariableDeclaration -> variable .)
    comma           shift and go to state 15
    equal           shift and go to state 16


state 10

    (5) variable -> identifier . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 7 (dimensions -> .)
    equal           reduce using rule 7 (dimensions -> .)
    semicolon       reduce using rule 7 (dimensions -> .)
    plus_plus       reduce using rule 7 (dimensions -> .)
    minus_minus     reduce using rule 7 (dimensions -> .)
    plus            reduce using rule 7 (dimensions -> .)
    minus           reduce using rule 7 (dimensions -> .)
    star            reduce using rule 7 (dimensions -> .)
    slash           reduce using rule 7 (dimensions -> .)
    close_bracket   reduce using rule 7 (dimensions -> .)
    close_parenthesis reduce using rule 7 (dimensions -> .)
    is_equal        reduce using rule 7 (dimensions -> .)
    not_equal       reduce using rule 7 (dimensions -> .)
    less_or_equal   reduce using rule 7 (dimensions -> .)
    greater_or_equal reduce using rule 7 (dimensions -> .)
    less_than       reduce using rule 7 (dimensions -> .)
    greater_than    reduce using rule 7 (dimensions -> .)
    and             reduce using rule 7 (dimensions -> .)
    or              reduce using rule 7 (dimensions -> .)
    out             reduce using rule 7 (dimensions -> .)
    in              reduce using rule 7 (dimensions -> .)

    dimensions                     shift and go to state 17

state 11

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .

    $end            reduce using rule 1 (ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .)


state 12

    (2) Main -> main . open_brace Routine close_brace

    open_brace      shift and go to state 19


state 13

    (53) SubroutinesDeclaration -> identifier open_brace . Routine close_brace SubroutinesDeclaration
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 20
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 14

    (8) VariablesDeclaration -> type RecVariableDeclaration semicolon . VariablesDeclaration
    (8) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (9) VariablesDeclaration -> .
    (14) type -> . int
    (15) type -> . double

    identifier      reduce using rule 9 (VariablesDeclaration -> .)
    main            reduce using rule 9 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    type                           shift and go to state 3
    VariablesDeclaration           shift and go to state 38

state 15

    (11) RecVariableDeclaration -> variable comma . RecVariableDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 39

state 16

    (12) RecVariableDeclaration -> variable equal . ArithmeticExpression
    (13) RecVariableDeclaration -> variable equal . ArithmeticExpression comma RecVariableDeclaration
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 41
    Number                         shift and go to state 42
    UnaryOperation                 shift and go to state 43

state 17

    (5) variable -> identifier dimensions .

    comma           reduce using rule 5 (variable -> identifier dimensions .)
    equal           reduce using rule 5 (variable -> identifier dimensions .)
    semicolon       reduce using rule 5 (variable -> identifier dimensions .)
    plus_plus       reduce using rule 5 (variable -> identifier dimensions .)
    minus_minus     reduce using rule 5 (variable -> identifier dimensions .)
    plus            reduce using rule 5 (variable -> identifier dimensions .)
    minus           reduce using rule 5 (variable -> identifier dimensions .)
    star            reduce using rule 5 (variable -> identifier dimensions .)
    slash           reduce using rule 5 (variable -> identifier dimensions .)
    close_bracket   reduce using rule 5 (variable -> identifier dimensions .)
    close_parenthesis reduce using rule 5 (variable -> identifier dimensions .)
    is_equal        reduce using rule 5 (variable -> identifier dimensions .)
    not_equal       reduce using rule 5 (variable -> identifier dimensions .)
    less_or_equal   reduce using rule 5 (variable -> identifier dimensions .)
    greater_or_equal reduce using rule 5 (variable -> identifier dimensions .)
    less_than       reduce using rule 5 (variable -> identifier dimensions .)
    greater_than    reduce using rule 5 (variable -> identifier dimensions .)
    and             reduce using rule 5 (variable -> identifier dimensions .)
    or              reduce using rule 5 (variable -> identifier dimensions .)
    out             reduce using rule 5 (variable -> identifier dimensions .)
    in              reduce using rule 5 (variable -> identifier dimensions .)


state 18

    (6) dimensions -> open_bracket . variable close_bracket dimensions
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 47

state 19

    (2) Main -> main open_brace . Routine close_brace
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 48
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 20

    (53) SubroutinesDeclaration -> identifier open_brace Routine . close_brace SubroutinesDeclaration

    close_brace     shift and go to state 49


state 21

    (55) Routine -> AssignmentStatement . semicolon Routine

    semicolon       shift and go to state 50


state 22

    (56) Routine -> UnaryOperation . semicolon Routine

    semicolon       shift and go to state 51


state 23

    (57) Routine -> ifCondition . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    ifCondition                    shift and go to state 23
    Routine                        shift and go to state 52
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 24

    (58) Routine -> whileLoop . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    whileLoop                      shift and go to state 24
    Routine                        shift and go to state 53
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 25

    (59) Routine -> doWhileLoop . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    doWhileLoop                    shift and go to state 25
    Routine                        shift and go to state 54
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 26

    (60) Routine -> forLoop . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    forLoop                        shift and go to state 26
    Routine                        shift and go to state 55
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 27

    (61) Routine -> call . identifier semicolon Routine

    identifier      shift and go to state 56


state 28

    (62) Routine -> InOut . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    InOut                          shift and go to state 28
    Routine                        shift and go to state 57
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    variable                       shift and go to state 29

state 29

    (28) AssignmentStatement -> variable . equal ArithmeticExpression
    (31) UnaryOperation -> variable . plus_plus
    (32) UnaryOperation -> variable . minus_minus

    equal           shift and go to state 58
    plus_plus       shift and go to state 59
    minus_minus     shift and go to state 60


state 30

    (29) UnaryOperation -> plus_plus . variable
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 61

state 31

    (30) UnaryOperation -> minus_minus . variable
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 62

state 32

    (41) ifCondition -> if . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 63


state 33

    (46) whileLoop -> while . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 64


state 34

    (47) doWhileLoop -> do . open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    open_brace      shift and go to state 65


state 35

    (48) forLoop -> for . open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 66


state 36

    (64) InOut -> cin . in variable RecursiveIn semicolon

    in              shift and go to state 67


state 37

    (65) InOut -> cout . out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> cout . out string RecursiveOut semicolon

    out             shift and go to state 68


state 38

    (8) VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .

    identifier      reduce using rule 8 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)
    main            reduce using rule 8 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)


state 39

    (11) RecVariableDeclaration -> variable comma RecVariableDeclaration .

    semicolon       reduce using rule 11 (RecVariableDeclaration -> variable comma RecVariableDeclaration .)


state 40

    (17) ArithmeticExpression -> variable .
    (31) UnaryOperation -> variable . plus_plus
    (32) UnaryOperation -> variable . minus_minus

    comma           reduce using rule 17 (ArithmeticExpression -> variable .)
    plus            reduce using rule 17 (ArithmeticExpression -> variable .)
    minus           reduce using rule 17 (ArithmeticExpression -> variable .)
    star            reduce using rule 17 (ArithmeticExpression -> variable .)
    slash           reduce using rule 17 (ArithmeticExpression -> variable .)
    semicolon       reduce using rule 17 (ArithmeticExpression -> variable .)
    close_parenthesis reduce using rule 17 (ArithmeticExpression -> variable .)
    is_equal        reduce using rule 17 (ArithmeticExpression -> variable .)
    not_equal       reduce using rule 17 (ArithmeticExpression -> variable .)
    less_or_equal   reduce using rule 17 (ArithmeticExpression -> variable .)
    greater_or_equal reduce using rule 17 (ArithmeticExpression -> variable .)
    less_than       reduce using rule 17 (ArithmeticExpression -> variable .)
    greater_than    reduce using rule 17 (ArithmeticExpression -> variable .)
    and             reduce using rule 17 (ArithmeticExpression -> variable .)
    or              reduce using rule 17 (ArithmeticExpression -> variable .)
    out             reduce using rule 17 (ArithmeticExpression -> variable .)
    plus_plus       shift and go to state 59
    minus_minus     shift and go to state 60


state 41

    (12) RecVariableDeclaration -> variable equal ArithmeticExpression .
    (13) RecVariableDeclaration -> variable equal ArithmeticExpression . comma RecVariableDeclaration
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    semicolon       reduce using rule 12 (RecVariableDeclaration -> variable equal ArithmeticExpression .)
    comma           shift and go to state 69
    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73


state 42

    (16) ArithmeticExpression -> Number .

    comma           reduce using rule 16 (ArithmeticExpression -> Number .)
    plus            reduce using rule 16 (ArithmeticExpression -> Number .)
    minus           reduce using rule 16 (ArithmeticExpression -> Number .)
    star            reduce using rule 16 (ArithmeticExpression -> Number .)
    slash           reduce using rule 16 (ArithmeticExpression -> Number .)
    semicolon       reduce using rule 16 (ArithmeticExpression -> Number .)
    close_parenthesis reduce using rule 16 (ArithmeticExpression -> Number .)
    is_equal        reduce using rule 16 (ArithmeticExpression -> Number .)
    not_equal       reduce using rule 16 (ArithmeticExpression -> Number .)
    less_or_equal   reduce using rule 16 (ArithmeticExpression -> Number .)
    greater_or_equal reduce using rule 16 (ArithmeticExpression -> Number .)
    less_than       reduce using rule 16 (ArithmeticExpression -> Number .)
    greater_than    reduce using rule 16 (ArithmeticExpression -> Number .)
    and             reduce using rule 16 (ArithmeticExpression -> Number .)
    or              reduce using rule 16 (ArithmeticExpression -> Number .)
    out             reduce using rule 16 (ArithmeticExpression -> Number .)


state 43

    (18) ArithmeticExpression -> UnaryOperation .

    comma           reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    plus            reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    minus           reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    star            reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    slash           reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    semicolon       reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    close_parenthesis reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    is_equal        reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    not_equal       reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    less_or_equal   reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    greater_or_equal reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    less_than       reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    greater_than    reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    and             reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    or              reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)
    out             reduce using rule 18 (ArithmeticExpression -> UnaryOperation .)


state 44

    (23) ArithmeticExpression -> open_parenthesis . ArithmeticExpression close_parenthesis
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 74
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 45

    (3) Number -> int_number .

    comma           reduce using rule 3 (Number -> int_number .)
    plus            reduce using rule 3 (Number -> int_number .)
    minus           reduce using rule 3 (Number -> int_number .)
    star            reduce using rule 3 (Number -> int_number .)
    slash           reduce using rule 3 (Number -> int_number .)
    semicolon       reduce using rule 3 (Number -> int_number .)
    close_parenthesis reduce using rule 3 (Number -> int_number .)
    is_equal        reduce using rule 3 (Number -> int_number .)
    not_equal       reduce using rule 3 (Number -> int_number .)
    less_or_equal   reduce using rule 3 (Number -> int_number .)
    greater_or_equal reduce using rule 3 (Number -> int_number .)
    less_than       reduce using rule 3 (Number -> int_number .)
    greater_than    reduce using rule 3 (Number -> int_number .)
    and             reduce using rule 3 (Number -> int_number .)
    or              reduce using rule 3 (Number -> int_number .)
    out             reduce using rule 3 (Number -> int_number .)


state 46

    (4) Number -> double_number .

    comma           reduce using rule 4 (Number -> double_number .)
    plus            reduce using rule 4 (Number -> double_number .)
    minus           reduce using rule 4 (Number -> double_number .)
    star            reduce using rule 4 (Number -> double_number .)
    slash           reduce using rule 4 (Number -> double_number .)
    semicolon       reduce using rule 4 (Number -> double_number .)
    close_parenthesis reduce using rule 4 (Number -> double_number .)
    is_equal        reduce using rule 4 (Number -> double_number .)
    not_equal       reduce using rule 4 (Number -> double_number .)
    less_or_equal   reduce using rule 4 (Number -> double_number .)
    greater_or_equal reduce using rule 4 (Number -> double_number .)
    less_than       reduce using rule 4 (Number -> double_number .)
    greater_than    reduce using rule 4 (Number -> double_number .)
    and             reduce using rule 4 (Number -> double_number .)
    or              reduce using rule 4 (Number -> double_number .)
    out             reduce using rule 4 (Number -> double_number .)


state 47

    (6) dimensions -> open_bracket variable . close_bracket dimensions

    close_bracket   shift and go to state 75


state 48

    (2) Main -> main open_brace Routine . close_brace

    close_brace     shift and go to state 76


state 49

    (53) SubroutinesDeclaration -> identifier open_brace Routine close_brace . SubroutinesDeclaration
    (53) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (54) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 54 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 77

state 50

    (55) Routine -> AssignmentStatement semicolon . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 21
    Routine                        shift and go to state 78
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 51

    (56) Routine -> UnaryOperation semicolon . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 22
    Routine                        shift and go to state 79
    AssignmentStatement            shift and go to state 21
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 52

    (57) Routine -> ifCondition Routine .

    close_brace     reduce using rule 57 (Routine -> ifCondition Routine .)


state 53

    (58) Routine -> whileLoop Routine .

    close_brace     reduce using rule 58 (Routine -> whileLoop Routine .)


state 54

    (59) Routine -> doWhileLoop Routine .

    close_brace     reduce using rule 59 (Routine -> doWhileLoop Routine .)


state 55

    (60) Routine -> forLoop Routine .

    close_brace     reduce using rule 60 (Routine -> forLoop Routine .)


state 56

    (61) Routine -> call identifier . semicolon Routine

    semicolon       shift and go to state 80


state 57

    (62) Routine -> InOut Routine .

    close_brace     reduce using rule 62 (Routine -> InOut Routine .)


state 58

    (28) AssignmentStatement -> variable equal . ArithmeticExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 81
    Number                         shift and go to state 42
    UnaryOperation                 shift and go to state 43

state 59

    (31) UnaryOperation -> variable plus_plus .

    semicolon       reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    comma           reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    plus            reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    minus           reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    star            reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    slash           reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    close_parenthesis reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    is_equal        reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    not_equal       reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    less_or_equal   reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    greater_or_equal reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    less_than       reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    greater_than    reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    and             reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    or              reduce using rule 31 (UnaryOperation -> variable plus_plus .)
    out             reduce using rule 31 (UnaryOperation -> variable plus_plus .)


state 60

    (32) UnaryOperation -> variable minus_minus .

    semicolon       reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    comma           reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    plus            reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    minus           reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    star            reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    slash           reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    close_parenthesis reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    is_equal        reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    not_equal       reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    less_or_equal   reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    greater_or_equal reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    less_than       reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    greater_than    reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    and             reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    or              reduce using rule 32 (UnaryOperation -> variable minus_minus .)
    out             reduce using rule 32 (UnaryOperation -> variable minus_minus .)


state 61

    (29) UnaryOperation -> plus_plus variable .

    semicolon       reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    comma           reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    plus            reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    minus           reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    star            reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    slash           reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    close_parenthesis reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    is_equal        reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    not_equal       reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    less_or_equal   reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    greater_or_equal reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    less_than       reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    greater_than    reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    and             reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    or              reduce using rule 29 (UnaryOperation -> plus_plus variable .)
    out             reduce using rule 29 (UnaryOperation -> plus_plus variable .)


state 62

    (30) UnaryOperation -> minus_minus variable .

    semicolon       reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    comma           reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    plus            reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    minus           reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    star            reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    slash           reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    close_parenthesis reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    is_equal        reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    not_equal       reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    less_or_equal   reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    greater_or_equal reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    less_than       reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    greater_than    reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    and             reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    or              reduce using rule 30 (UnaryOperation -> minus_minus variable .)
    out             reduce using rule 30 (UnaryOperation -> minus_minus variable .)


state 63

    (41) ifCondition -> if open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 82
    ArithmeticExpression           shift and go to state 85
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 64

    (46) whileLoop -> while open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 86
    ArithmeticExpression           shift and go to state 85
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 65

    (47) doWhileLoop -> do open_brace . Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 87
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 66

    (48) forLoop -> for open_parenthesis . RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 88
    variable                       shift and go to state 9

state 67

    (64) InOut -> cin in . variable RecursiveIn semicolon
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 89

state 68

    (65) InOut -> cout out . ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> cout out . string RecursiveOut semicolon
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    string          shift and go to state 91
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 90
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 69

    (13) RecVariableDeclaration -> variable equal ArithmeticExpression comma . RecVariableDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 92

state 70

    (19) ArithmeticExpression -> ArithmeticExpression plus . ArithmeticExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 93
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 71

    (20) ArithmeticExpression -> ArithmeticExpression minus . ArithmeticExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 94
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 72

    (21) ArithmeticExpression -> ArithmeticExpression star . ArithmeticExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 95
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 73

    (22) ArithmeticExpression -> ArithmeticExpression slash . ArithmeticExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 96
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 74

    (23) ArithmeticExpression -> open_parenthesis ArithmeticExpression . close_parenthesis
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    close_parenthesis shift and go to state 97
    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73


state 75

    (6) dimensions -> open_bracket variable close_bracket . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 7 (dimensions -> .)
    equal           reduce using rule 7 (dimensions -> .)
    semicolon       reduce using rule 7 (dimensions -> .)
    plus_plus       reduce using rule 7 (dimensions -> .)
    minus_minus     reduce using rule 7 (dimensions -> .)
    plus            reduce using rule 7 (dimensions -> .)
    minus           reduce using rule 7 (dimensions -> .)
    star            reduce using rule 7 (dimensions -> .)
    slash           reduce using rule 7 (dimensions -> .)
    close_bracket   reduce using rule 7 (dimensions -> .)
    close_parenthesis reduce using rule 7 (dimensions -> .)
    is_equal        reduce using rule 7 (dimensions -> .)
    not_equal       reduce using rule 7 (dimensions -> .)
    less_or_equal   reduce using rule 7 (dimensions -> .)
    greater_or_equal reduce using rule 7 (dimensions -> .)
    less_than       reduce using rule 7 (dimensions -> .)
    greater_than    reduce using rule 7 (dimensions -> .)
    and             reduce using rule 7 (dimensions -> .)
    or              reduce using rule 7 (dimensions -> .)
    out             reduce using rule 7 (dimensions -> .)
    in              reduce using rule 7 (dimensions -> .)

    dimensions                     shift and go to state 98

state 76

    (2) Main -> main open_brace Routine close_brace .

    $end            reduce using rule 2 (Main -> main open_brace Routine close_brace .)


state 77

    (53) SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .

    main            reduce using rule 53 (SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .)


state 78

    (55) Routine -> AssignmentStatement semicolon Routine .

    close_brace     reduce using rule 55 (Routine -> AssignmentStatement semicolon Routine .)


state 79

    (56) Routine -> UnaryOperation semicolon Routine .

    close_brace     reduce using rule 56 (Routine -> UnaryOperation semicolon Routine .)


state 80

    (61) Routine -> call identifier semicolon . Routine
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 99
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 81

    (28) AssignmentStatement -> variable equal ArithmeticExpression .
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    semicolon       reduce using rule 28 (AssignmentStatement -> variable equal ArithmeticExpression .)
    comma           reduce using rule 28 (AssignmentStatement -> variable equal ArithmeticExpression .)
    close_parenthesis reduce using rule 28 (AssignmentStatement -> variable equal ArithmeticExpression .)
    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73


state 82

    (41) ifCondition -> if open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 100


state 83

    (24) BooleanExpression -> true .

    close_parenthesis reduce using rule 24 (BooleanExpression -> true .)
    semicolon       reduce using rule 24 (BooleanExpression -> true .)


state 84

    (25) BooleanExpression -> false .

    close_parenthesis reduce using rule 25 (BooleanExpression -> false .)
    semicolon       reduce using rule 25 (BooleanExpression -> false .)


state 85

    (26) BooleanExpression -> ArithmeticExpression .
    (27) BooleanExpression -> ArithmeticExpression . LogicOperator BooleanExpression
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression
    (33) LogicOperator -> . is_equal
    (34) LogicOperator -> . not_equal
    (35) LogicOperator -> . less_or_equal
    (36) LogicOperator -> . greater_or_equal
    (37) LogicOperator -> . less_than
    (38) LogicOperator -> . greater_than
    (39) LogicOperator -> . and
    (40) LogicOperator -> . or

    close_parenthesis reduce using rule 26 (BooleanExpression -> ArithmeticExpression .)
    semicolon       reduce using rule 26 (BooleanExpression -> ArithmeticExpression .)
    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73
    is_equal        shift and go to state 102
    not_equal       shift and go to state 103
    less_or_equal   shift and go to state 104
    greater_or_equal shift and go to state 105
    less_than       shift and go to state 106
    greater_than    shift and go to state 107
    and             shift and go to state 108
    or              shift and go to state 109

    LogicOperator                  shift and go to state 101

state 86

    (46) whileLoop -> while open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 110


state 87

    (47) doWhileLoop -> do open_brace Routine . close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    close_brace     shift and go to state 111


state 88

    (48) forLoop -> for open_parenthesis RecVariableDeclaration . semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 112


state 89

    (64) InOut -> cin in variable . RecursiveIn semicolon
    (67) RecursiveIn -> . in variable RecursiveIn
    (68) RecursiveIn -> .

    in              shift and go to state 113
    semicolon       reduce using rule 68 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 114

state 90

    (65) InOut -> cout out ArithmeticExpression . RecursiveOut semicolon
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression
    (69) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (70) RecursiveOut -> . out string RecursiveOut
    (71) RecursiveOut -> .

    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73
    out             shift and go to state 115
    semicolon       reduce using rule 71 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 116

state 91

    (66) InOut -> cout out string . RecursiveOut semicolon
    (69) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (70) RecursiveOut -> . out string RecursiveOut
    (71) RecursiveOut -> .

    out             shift and go to state 115
    semicolon       reduce using rule 71 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 117

state 92

    (13) RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .

    semicolon       reduce using rule 13 (RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .)


state 93

    (19) ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    comma           reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    plus            reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    minus           reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    semicolon       reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    close_parenthesis reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    is_equal        reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    not_equal       reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    less_or_equal   reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    greater_or_equal reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    less_than       reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    greater_than    reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    and             reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    or              reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    out             reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .)
    star            shift and go to state 72
    slash           shift and go to state 73

  ! star            [ reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .) ]
  ! slash           [ reduce using rule 19 (ArithmeticExpression -> ArithmeticExpression plus ArithmeticExpression .) ]
  ! plus            [ shift and go to state 70 ]
  ! minus           [ shift and go to state 71 ]


state 94

    (20) ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    comma           reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    plus            reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    minus           reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    semicolon       reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    close_parenthesis reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    is_equal        reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    not_equal       reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    less_or_equal   reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    greater_or_equal reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    less_than       reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    greater_than    reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    and             reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    or              reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    out             reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .)
    star            shift and go to state 72
    slash           shift and go to state 73

  ! star            [ reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .) ]
  ! slash           [ reduce using rule 20 (ArithmeticExpression -> ArithmeticExpression minus ArithmeticExpression .) ]
  ! plus            [ shift and go to state 70 ]
  ! minus           [ shift and go to state 71 ]


state 95

    (21) ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    comma           reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    plus            reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    minus           reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    star            reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    slash           reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    semicolon       reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    close_parenthesis reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    is_equal        reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    not_equal       reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    less_or_equal   reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    greater_or_equal reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    less_than       reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    greater_than    reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    and             reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    or              reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)
    out             reduce using rule 21 (ArithmeticExpression -> ArithmeticExpression star ArithmeticExpression .)

  ! plus            [ shift and go to state 70 ]
  ! minus           [ shift and go to state 71 ]
  ! star            [ shift and go to state 72 ]
  ! slash           [ shift and go to state 73 ]


state 96

    (22) ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression

    comma           reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    plus            reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    minus           reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    star            reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    slash           reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    semicolon       reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    close_parenthesis reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    is_equal        reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    not_equal       reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    less_or_equal   reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    greater_or_equal reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    less_than       reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    greater_than    reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    and             reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    or              reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)
    out             reduce using rule 22 (ArithmeticExpression -> ArithmeticExpression slash ArithmeticExpression .)

  ! plus            [ shift and go to state 70 ]
  ! minus           [ shift and go to state 71 ]
  ! star            [ shift and go to state 72 ]
  ! slash           [ shift and go to state 73 ]


state 97

    (23) ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .

    comma           reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    plus            reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    minus           reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    star            reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    slash           reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    semicolon       reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    close_parenthesis reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    is_equal        reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    not_equal       reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_or_equal   reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_or_equal reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_than       reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_than    reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    and             reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    or              reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)
    out             reduce using rule 23 (ArithmeticExpression -> open_parenthesis ArithmeticExpression close_parenthesis .)


state 98

    (6) dimensions -> open_bracket variable close_bracket dimensions .

    comma           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    equal           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    semicolon       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    plus_plus       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    minus_minus     reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    plus            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    minus           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    star            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    slash           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_bracket   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_parenthesis reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    is_equal        reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    not_equal       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_or_equal   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_or_equal reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_than       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_than    reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    and             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    or              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    out             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    in              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)


state 99

    (61) Routine -> call identifier semicolon Routine .

    close_brace     reduce using rule 61 (Routine -> call identifier semicolon Routine .)


state 100

    (41) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 118


state 101

    (27) BooleanExpression -> ArithmeticExpression LogicOperator . BooleanExpression
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 85
    BooleanExpression              shift and go to state 119
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 102

    (33) LogicOperator -> is_equal .

    true            reduce using rule 33 (LogicOperator -> is_equal .)
    false           reduce using rule 33 (LogicOperator -> is_equal .)
    open_parenthesis reduce using rule 33 (LogicOperator -> is_equal .)
    int_number      reduce using rule 33 (LogicOperator -> is_equal .)
    double_number   reduce using rule 33 (LogicOperator -> is_equal .)
    identifier      reduce using rule 33 (LogicOperator -> is_equal .)
    plus_plus       reduce using rule 33 (LogicOperator -> is_equal .)
    minus_minus     reduce using rule 33 (LogicOperator -> is_equal .)


state 103

    (34) LogicOperator -> not_equal .

    true            reduce using rule 34 (LogicOperator -> not_equal .)
    false           reduce using rule 34 (LogicOperator -> not_equal .)
    open_parenthesis reduce using rule 34 (LogicOperator -> not_equal .)
    int_number      reduce using rule 34 (LogicOperator -> not_equal .)
    double_number   reduce using rule 34 (LogicOperator -> not_equal .)
    identifier      reduce using rule 34 (LogicOperator -> not_equal .)
    plus_plus       reduce using rule 34 (LogicOperator -> not_equal .)
    minus_minus     reduce using rule 34 (LogicOperator -> not_equal .)


state 104

    (35) LogicOperator -> less_or_equal .

    true            reduce using rule 35 (LogicOperator -> less_or_equal .)
    false           reduce using rule 35 (LogicOperator -> less_or_equal .)
    open_parenthesis reduce using rule 35 (LogicOperator -> less_or_equal .)
    int_number      reduce using rule 35 (LogicOperator -> less_or_equal .)
    double_number   reduce using rule 35 (LogicOperator -> less_or_equal .)
    identifier      reduce using rule 35 (LogicOperator -> less_or_equal .)
    plus_plus       reduce using rule 35 (LogicOperator -> less_or_equal .)
    minus_minus     reduce using rule 35 (LogicOperator -> less_or_equal .)


state 105

    (36) LogicOperator -> greater_or_equal .

    true            reduce using rule 36 (LogicOperator -> greater_or_equal .)
    false           reduce using rule 36 (LogicOperator -> greater_or_equal .)
    open_parenthesis reduce using rule 36 (LogicOperator -> greater_or_equal .)
    int_number      reduce using rule 36 (LogicOperator -> greater_or_equal .)
    double_number   reduce using rule 36 (LogicOperator -> greater_or_equal .)
    identifier      reduce using rule 36 (LogicOperator -> greater_or_equal .)
    plus_plus       reduce using rule 36 (LogicOperator -> greater_or_equal .)
    minus_minus     reduce using rule 36 (LogicOperator -> greater_or_equal .)


state 106

    (37) LogicOperator -> less_than .

    true            reduce using rule 37 (LogicOperator -> less_than .)
    false           reduce using rule 37 (LogicOperator -> less_than .)
    open_parenthesis reduce using rule 37 (LogicOperator -> less_than .)
    int_number      reduce using rule 37 (LogicOperator -> less_than .)
    double_number   reduce using rule 37 (LogicOperator -> less_than .)
    identifier      reduce using rule 37 (LogicOperator -> less_than .)
    plus_plus       reduce using rule 37 (LogicOperator -> less_than .)
    minus_minus     reduce using rule 37 (LogicOperator -> less_than .)


state 107

    (38) LogicOperator -> greater_than .

    true            reduce using rule 38 (LogicOperator -> greater_than .)
    false           reduce using rule 38 (LogicOperator -> greater_than .)
    open_parenthesis reduce using rule 38 (LogicOperator -> greater_than .)
    int_number      reduce using rule 38 (LogicOperator -> greater_than .)
    double_number   reduce using rule 38 (LogicOperator -> greater_than .)
    identifier      reduce using rule 38 (LogicOperator -> greater_than .)
    plus_plus       reduce using rule 38 (LogicOperator -> greater_than .)
    minus_minus     reduce using rule 38 (LogicOperator -> greater_than .)


state 108

    (39) LogicOperator -> and .

    true            reduce using rule 39 (LogicOperator -> and .)
    false           reduce using rule 39 (LogicOperator -> and .)
    open_parenthesis reduce using rule 39 (LogicOperator -> and .)
    int_number      reduce using rule 39 (LogicOperator -> and .)
    double_number   reduce using rule 39 (LogicOperator -> and .)
    identifier      reduce using rule 39 (LogicOperator -> and .)
    plus_plus       reduce using rule 39 (LogicOperator -> and .)
    minus_minus     reduce using rule 39 (LogicOperator -> and .)


state 109

    (40) LogicOperator -> or .

    true            reduce using rule 40 (LogicOperator -> or .)
    false           reduce using rule 40 (LogicOperator -> or .)
    open_parenthesis reduce using rule 40 (LogicOperator -> or .)
    int_number      reduce using rule 40 (LogicOperator -> or .)
    double_number   reduce using rule 40 (LogicOperator -> or .)
    identifier      reduce using rule 40 (LogicOperator -> or .)
    plus_plus       reduce using rule 40 (LogicOperator -> or .)
    minus_minus     reduce using rule 40 (LogicOperator -> or .)


state 110

    (46) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 120


state 111

    (47) doWhileLoop -> do open_brace Routine close_brace . while open_parenthesis BooleanExpression close_parenthesis semicolon

    while           shift and go to state 121


state 112

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon . BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 122
    ArithmeticExpression           shift and go to state 85
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 113

    (67) RecursiveIn -> in . variable RecursiveIn
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 123

state 114

    (64) InOut -> cin in variable RecursiveIn . semicolon

    semicolon       shift and go to state 124


state 115

    (69) RecursiveOut -> out . ArithmeticExpression RecursiveOut
    (70) RecursiveOut -> out . string RecursiveOut
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    string          shift and go to state 126
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 125
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 116

    (65) InOut -> cout out ArithmeticExpression RecursiveOut . semicolon

    semicolon       shift and go to state 127


state 117

    (66) InOut -> cout out string RecursiveOut . semicolon

    semicolon       shift and go to state 128


state 118

    (41) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 129
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 119

    (27) BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .

    close_parenthesis reduce using rule 27 (BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .)
    semicolon       reduce using rule 27 (BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .)


state 120

    (46) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 130
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 121

    (47) doWhileLoop -> do open_brace Routine close_brace while . open_parenthesis BooleanExpression close_parenthesis semicolon

    open_parenthesis shift and go to state 131


state 122

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression . semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 132


state 123

    (67) RecursiveIn -> in variable . RecursiveIn
    (67) RecursiveIn -> . in variable RecursiveIn
    (68) RecursiveIn -> .

    in              shift and go to state 113
    semicolon       reduce using rule 68 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 133

state 124

    (64) InOut -> cin in variable RecursiveIn semicolon .

    call            reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    plus_plus       reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    minus_minus     reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    if              reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    while           reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    do              reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    for             reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    cin             reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    cout            reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    identifier      reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)
    close_brace     reduce using rule 64 (InOut -> cin in variable RecursiveIn semicolon .)


state 125

    (69) RecursiveOut -> out ArithmeticExpression . RecursiveOut
    (19) ArithmeticExpression -> ArithmeticExpression . plus ArithmeticExpression
    (20) ArithmeticExpression -> ArithmeticExpression . minus ArithmeticExpression
    (21) ArithmeticExpression -> ArithmeticExpression . star ArithmeticExpression
    (22) ArithmeticExpression -> ArithmeticExpression . slash ArithmeticExpression
    (69) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (70) RecursiveOut -> . out string RecursiveOut
    (71) RecursiveOut -> .

    plus            shift and go to state 70
    minus           shift and go to state 71
    star            shift and go to state 72
    slash           shift and go to state 73
    out             shift and go to state 115
    semicolon       reduce using rule 71 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 134

state 126

    (70) RecursiveOut -> out string . RecursiveOut
    (69) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (70) RecursiveOut -> . out string RecursiveOut
    (71) RecursiveOut -> .

    out             shift and go to state 115
    semicolon       reduce using rule 71 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 135

state 127

    (65) InOut -> cout out ArithmeticExpression RecursiveOut semicolon .

    call            reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    plus_plus       reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    minus_minus     reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    if              reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    while           reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    do              reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    for             reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cin             reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cout            reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    identifier      reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    close_brace     reduce using rule 65 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)


state 128

    (66) InOut -> cout out string RecursiveOut semicolon .

    call            reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    plus_plus       reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    minus_minus     reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    if              reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    while           reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    do              reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    for             reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    cin             reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    cout            reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    identifier      reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)
    close_brace     reduce using rule 66 (InOut -> cout out string RecursiveOut semicolon .)


state 129

    (41) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 136


state 130

    (46) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 137


state 131

    (47) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis . BooleanExpression close_parenthesis semicolon
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 138
    ArithmeticExpression           shift and go to state 85
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 132

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon . UpdateVariables close_parenthesis open_brace Routine close_brace
    (49) UpdateVariables -> . AssignmentStatement
    (50) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (51) UpdateVariables -> . UnaryOperation
    (52) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UpdateVariables                shift and go to state 139
    AssignmentStatement            shift and go to state 140
    UnaryOperation                 shift and go to state 141
    variable                       shift and go to state 29

state 133

    (67) RecursiveIn -> in variable RecursiveIn .

    semicolon       reduce using rule 67 (RecursiveIn -> in variable RecursiveIn .)


state 134

    (69) RecursiveOut -> out ArithmeticExpression RecursiveOut .

    semicolon       reduce using rule 69 (RecursiveOut -> out ArithmeticExpression RecursiveOut .)


state 135

    (70) RecursiveOut -> out string RecursiveOut .

    semicolon       reduce using rule 70 (RecursiveOut -> out string RecursiveOut .)


state 136

    (41) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (42) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (43) elseIfCondition -> . elseCondition
    (44) elseCondition -> . else open_brace Routine close_brace
    (45) elseCondition -> .

    elseif          shift and go to state 143
    else            shift and go to state 145
    call            reduce using rule 45 (elseCondition -> .)
    plus_plus       reduce using rule 45 (elseCondition -> .)
    minus_minus     reduce using rule 45 (elseCondition -> .)
    if              reduce using rule 45 (elseCondition -> .)
    while           reduce using rule 45 (elseCondition -> .)
    do              reduce using rule 45 (elseCondition -> .)
    for             reduce using rule 45 (elseCondition -> .)
    cin             reduce using rule 45 (elseCondition -> .)
    cout            reduce using rule 45 (elseCondition -> .)
    identifier      reduce using rule 45 (elseCondition -> .)
    close_brace     reduce using rule 45 (elseCondition -> .)

    elseIfCondition                shift and go to state 142
    elseCondition                  shift and go to state 144

state 137

    (46) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 46 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)


state 138

    (47) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression . close_parenthesis semicolon

    close_parenthesis shift and go to state 146


state 139

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 147


state 140

    (49) UpdateVariables -> AssignmentStatement .
    (50) UpdateVariables -> AssignmentStatement . comma UpdateVariables

    close_parenthesis reduce using rule 49 (UpdateVariables -> AssignmentStatement .)
    comma           shift and go to state 148


state 141

    (51) UpdateVariables -> UnaryOperation .
    (52) UpdateVariables -> UnaryOperation . comma UpdateVariables

    close_parenthesis reduce using rule 51 (UpdateVariables -> UnaryOperation .)
    comma           shift and go to state 149


state 142

    (41) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 41 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)


state 143

    (42) elseIfCondition -> elseif . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 150


state 144

    (43) elseIfCondition -> elseCondition .

    call            reduce using rule 43 (elseIfCondition -> elseCondition .)
    plus_plus       reduce using rule 43 (elseIfCondition -> elseCondition .)
    minus_minus     reduce using rule 43 (elseIfCondition -> elseCondition .)
    if              reduce using rule 43 (elseIfCondition -> elseCondition .)
    while           reduce using rule 43 (elseIfCondition -> elseCondition .)
    do              reduce using rule 43 (elseIfCondition -> elseCondition .)
    for             reduce using rule 43 (elseIfCondition -> elseCondition .)
    cin             reduce using rule 43 (elseIfCondition -> elseCondition .)
    cout            reduce using rule 43 (elseIfCondition -> elseCondition .)
    identifier      reduce using rule 43 (elseIfCondition -> elseCondition .)
    close_brace     reduce using rule 43 (elseIfCondition -> elseCondition .)


state 145

    (44) elseCondition -> else . open_brace Routine close_brace

    open_brace      shift and go to state 151


state 146

    (47) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis . semicolon

    semicolon       shift and go to state 152


state 147

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 153


state 148

    (50) UpdateVariables -> AssignmentStatement comma . UpdateVariables
    (49) UpdateVariables -> . AssignmentStatement
    (50) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (51) UpdateVariables -> . UnaryOperation
    (52) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 140
    UpdateVariables                shift and go to state 154
    UnaryOperation                 shift and go to state 141
    variable                       shift and go to state 29

state 149

    (52) UpdateVariables -> UnaryOperation comma . UpdateVariables
    (49) UpdateVariables -> . AssignmentStatement
    (50) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (51) UpdateVariables -> . UnaryOperation
    (52) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 141
    UpdateVariables                shift and go to state 155
    AssignmentStatement            shift and go to state 140
    variable                       shift and go to state 29

state 150

    (42) elseIfCondition -> elseif open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (24) BooleanExpression -> . true
    (25) BooleanExpression -> . false
    (26) BooleanExpression -> . ArithmeticExpression
    (27) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . Number
    (17) ArithmeticExpression -> . variable
    (18) ArithmeticExpression -> . UnaryOperation
    (19) ArithmeticExpression -> . ArithmeticExpression plus ArithmeticExpression
    (20) ArithmeticExpression -> . ArithmeticExpression minus ArithmeticExpression
    (21) ArithmeticExpression -> . ArithmeticExpression star ArithmeticExpression
    (22) ArithmeticExpression -> . ArithmeticExpression slash ArithmeticExpression
    (23) ArithmeticExpression -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number
    (4) Number -> . double_number
    (5) variable -> . identifier dimensions
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus

    true            shift and go to state 83
    false           shift and go to state 84
    open_parenthesis shift and go to state 44
    int_number      shift and go to state 45
    double_number   shift and go to state 46
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 156
    ArithmeticExpression           shift and go to state 85
    Number                         shift and go to state 42
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 43

state 151

    (44) elseCondition -> else open_brace . Routine close_brace
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 157
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 152

    (47) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .

    call            reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    plus_plus       reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    minus_minus     reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    if              reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    while           reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    do              reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    for             reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cin             reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cout            reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    identifier      reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    close_brace     reduce using rule 47 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)


state 153

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace . Routine close_brace
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 158
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 154

    (50) UpdateVariables -> AssignmentStatement comma UpdateVariables .

    close_parenthesis reduce using rule 50 (UpdateVariables -> AssignmentStatement comma UpdateVariables .)


state 155

    (52) UpdateVariables -> UnaryOperation comma UpdateVariables .

    close_parenthesis reduce using rule 52 (UpdateVariables -> UnaryOperation comma UpdateVariables .)


state 156

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 159


state 157

    (44) elseCondition -> else open_brace Routine . close_brace

    close_brace     shift and go to state 160


state 158

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 161


state 159

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 162


state 160

    (44) elseCondition -> else open_brace Routine close_brace .

    call            reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    plus_plus       reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    minus_minus     reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    if              reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    while           reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    do              reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    for             reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    cin             reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    cout            reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    identifier      reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)
    close_brace     reduce using rule 44 (elseCondition -> else open_brace Routine close_brace .)


state 161

    (48) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 48 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)


state 162

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (55) Routine -> . AssignmentStatement semicolon Routine
    (56) Routine -> . UnaryOperation semicolon Routine
    (57) Routine -> . ifCondition Routine
    (58) Routine -> . whileLoop Routine
    (59) Routine -> . doWhileLoop Routine
    (60) Routine -> . forLoop Routine
    (61) Routine -> . call identifier semicolon Routine
    (62) Routine -> . InOut Routine
    (63) Routine -> .
    (28) AssignmentStatement -> . variable equal ArithmeticExpression
    (29) UnaryOperation -> . plus_plus variable
    (30) UnaryOperation -> . minus_minus variable
    (31) UnaryOperation -> . variable plus_plus
    (32) UnaryOperation -> . variable minus_minus
    (41) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (46) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (47) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (48) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (64) InOut -> . cin in variable RecursiveIn semicolon
    (65) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (66) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 63 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 163
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 163

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 164


state 164

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (42) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (43) elseIfCondition -> . elseCondition
    (44) elseCondition -> . else open_brace Routine close_brace
    (45) elseCondition -> .

    elseif          shift and go to state 143
    else            shift and go to state 145
    call            reduce using rule 45 (elseCondition -> .)
    plus_plus       reduce using rule 45 (elseCondition -> .)
    minus_minus     reduce using rule 45 (elseCondition -> .)
    if              reduce using rule 45 (elseCondition -> .)
    while           reduce using rule 45 (elseCondition -> .)
    do              reduce using rule 45 (elseCondition -> .)
    for             reduce using rule 45 (elseCondition -> .)
    cin             reduce using rule 45 (elseCondition -> .)
    cout            reduce using rule 45 (elseCondition -> .)
    identifier      reduce using rule 45 (elseCondition -> .)
    close_brace     reduce using rule 45 (elseCondition -> .)

    elseIfCondition                shift and go to state 165
    elseCondition                  shift and go to state 144

state 165

    (42) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 42 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)

