Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ProgramFlow
Rule 1     ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main
Rule 2     Main -> main open_brace Routine close_brace
Rule 3     Number -> int_number action_insert_int_operand
Rule 4     Number -> double_number action_insert_double_operand
Rule 5     variable -> identifier dimensions
Rule 6     dimensions -> open_bracket variable close_bracket dimensions
Rule 7     dimensions -> <empty>
Rule 8     VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration
Rule 9     VariablesDeclaration -> <empty>
Rule 10    RecVariableDeclaration -> variable
Rule 11    RecVariableDeclaration -> variable comma RecVariableDeclaration
Rule 12    RecVariableDeclaration -> variable equal ArithmeticExpression
Rule 13    RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration
Rule 14    type -> int
Rule 15    type -> double
Rule 16    ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
Rule 17    ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
Rule 18    ArithmeticExpression -> term
Rule 19    term -> factor
Rule 20    term -> term star action_insert_operator factor action_generate_arith_quadruplet
Rule 21    term -> term slash action_insert_operator factor action_generate_arith_quadruplet
Rule 22    factor -> Number
Rule 23    factor -> variable action_insert_variable
Rule 24    factor -> UnaryOperation
Rule 25    factor -> open_parenthesis ArithmeticExpression close_parenthesis
Rule 26    BooleanExpression -> true
Rule 27    BooleanExpression -> false
Rule 28    BooleanExpression -> ArithmeticExpression
Rule 29    BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression
Rule 30    AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation
Rule 31    UnaryOperation -> plus_plus variable
Rule 32    UnaryOperation -> minus_minus variable
Rule 33    UnaryOperation -> variable plus_plus
Rule 34    UnaryOperation -> variable minus_minus
Rule 35    LogicOperator -> is_equal
Rule 36    LogicOperator -> not_equal
Rule 37    LogicOperator -> less_or_equal
Rule 38    LogicOperator -> greater_or_equal
Rule 39    LogicOperator -> less_than
Rule 40    LogicOperator -> greater_than
Rule 41    LogicOperator -> and
Rule 42    LogicOperator -> or
Rule 43    ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 44    elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 45    elseIfCondition -> elseCondition
Rule 46    elseCondition -> else open_brace Routine close_brace
Rule 47    elseCondition -> <empty>
Rule 48    whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
Rule 49    doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
Rule 50    forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
Rule 51    UpdateVariables -> AssignmentStatement
Rule 52    UpdateVariables -> AssignmentStatement comma UpdateVariables
Rule 53    UpdateVariables -> UnaryOperation
Rule 54    UpdateVariables -> UnaryOperation comma UpdateVariables
Rule 55    SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration
Rule 56    SubroutinesDeclaration -> <empty>
Rule 57    Routine -> AssignmentStatement semicolon Routine
Rule 58    Routine -> UnaryOperation semicolon Routine
Rule 59    Routine -> ifCondition Routine
Rule 60    Routine -> whileLoop Routine
Rule 61    Routine -> doWhileLoop Routine
Rule 62    Routine -> forLoop Routine
Rule 63    Routine -> call identifier semicolon Routine
Rule 64    Routine -> InOut Routine
Rule 65    Routine -> <empty>
Rule 66    InOut -> cin in variable RecursiveIn semicolon
Rule 67    InOut -> cout out ArithmeticExpression RecursiveOut semicolon
Rule 68    InOut -> cout out string RecursiveOut semicolon
Rule 69    RecursiveIn -> in variable RecursiveIn
Rule 70    RecursiveIn -> <empty>
Rule 71    RecursiveOut -> out ArithmeticExpression RecursiveOut
Rule 72    RecursiveOut -> out string RecursiveOut
Rule 73    RecursiveOut -> <empty>
Rule 74    action_insert_variable -> <empty>
Rule 75    action_insert_int_operand -> <empty>
Rule 76    action_insert_double_operand -> <empty>
Rule 77    action_insert_operator -> <empty>
Rule 78    action_generate_arith_quadruplet -> <empty>
Rule 79    action_assignation -> <empty>

Terminals, with rules where they appear

and                  : 41
call                 : 63
cin                  : 66
close_brace          : 2 43 44 46 48 49 50 55
close_bracket        : 6
close_parenthesis    : 25 43 44 48 49 50
comma                : 11 13 52 54
cout                 : 67 68
do                   : 49
double               : 15
double_number        : 4
else                 : 46
elseif               : 44
equal                : 12 13 30
error                : 
false                : 27
for                  : 50
greater_or_equal     : 38
greater_than         : 40
identifier           : 5 55 63
if                   : 43
in                   : 66 69
int                  : 14
int_number           : 3
is_equal             : 35
less_or_equal        : 37
less_than            : 39
main                 : 2
minus                : 17
minus_minus          : 32 34
not_equal            : 36
open_brace           : 2 43 44 46 48 49 50 55
open_bracket         : 6
open_parenthesis     : 25 43 44 48 49 50
or                   : 42
out                  : 67 68 71 72
plus                 : 16
plus_plus            : 31 33
semicolon            : 8 49 50 50 57 58 63 66 67 68
slash                : 21
star                 : 20
string               : 68 72
true                 : 26
while                : 48 49

Nonterminals, with rules where they appear

ArithmeticExpression : 12 13 16 17 25 28 29 30 67 71
AssignmentStatement  : 51 52 57
BooleanExpression    : 29 43 44 48 49 50
InOut                : 64
LogicOperator        : 29
Main                 : 1
Number               : 22
ProgramFlow          : 0
RecVariableDeclaration : 8 11 13 50
RecursiveIn          : 66 69
RecursiveOut         : 67 68 71 72
Routine              : 2 43 44 46 48 49 50 55 57 58 59 60 61 62 63 64
SubroutinesDeclaration : 1 55
UnaryOperation       : 24 53 54 58
UpdateVariables      : 50 52 54
VariablesDeclaration : 1 8
action_assignation   : 30
action_generate_arith_quadruplet : 16 17 20 21
action_insert_double_operand : 4
action_insert_int_operand : 3
action_insert_operator : 16 17 20 21
action_insert_variable : 23 30
dimensions           : 5 6
doWhileLoop          : 61
elseCondition        : 45
elseIfCondition      : 43 44
factor               : 19 20 21
forLoop              : 62
ifCondition          : 59
term                 : 16 17 18 20 21
type                 : 8
variable             : 6 10 11 12 13 23 30 31 32 33 34 66 69
whileLoop            : 60

Parsing method: LALR

state 0

    (0) S' -> . ProgramFlow
    (1) ProgramFlow -> . VariablesDeclaration SubroutinesDeclaration Main
    (8) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (9) VariablesDeclaration -> .
    (14) type -> . int
    (15) type -> . double

    identifier      reduce using rule 9 (VariablesDeclaration -> .)
    main            reduce using rule 9 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    ProgramFlow                    shift and go to state 1
    VariablesDeclaration           shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> ProgramFlow .



state 2

    (1) ProgramFlow -> VariablesDeclaration . SubroutinesDeclaration Main
    (55) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (56) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 56 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 6

state 3

    (8) VariablesDeclaration -> type . RecVariableDeclaration semicolon VariablesDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 8
    variable                       shift and go to state 9

state 4

    (14) type -> int .

    identifier      reduce using rule 14 (type -> int .)


state 5

    (15) type -> double .

    identifier      reduce using rule 15 (type -> double .)


state 6

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration . Main
    (2) Main -> . main open_brace Routine close_brace

    main            shift and go to state 12

    Main                           shift and go to state 11

state 7

    (55) SubroutinesDeclaration -> identifier . open_brace Routine close_brace SubroutinesDeclaration

    open_brace      shift and go to state 13


state 8

    (8) VariablesDeclaration -> type RecVariableDeclaration . semicolon VariablesDeclaration

    semicolon       shift and go to state 14


state 9

    (10) RecVariableDeclaration -> variable .
    (11) RecVariableDeclaration -> variable . comma RecVariableDeclaration
    (12) RecVariableDeclaration -> variable . equal ArithmeticExpression
    (13) RecVariableDeclaration -> variable . equal ArithmeticExpression comma RecVariableDeclaration

    semicolon       reduce using rule 10 (RecVariableDeclaration -> variable .)
    comma           shift and go to state 15
    equal           shift and go to state 16


state 10

    (5) variable -> identifier . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 7 (dimensions -> .)
    equal           reduce using rule 7 (dimensions -> .)
    semicolon       reduce using rule 7 (dimensions -> .)
    plus_plus       reduce using rule 7 (dimensions -> .)
    minus_minus     reduce using rule 7 (dimensions -> .)
    star            reduce using rule 7 (dimensions -> .)
    slash           reduce using rule 7 (dimensions -> .)
    plus            reduce using rule 7 (dimensions -> .)
    minus           reduce using rule 7 (dimensions -> .)
    close_bracket   reduce using rule 7 (dimensions -> .)
    close_parenthesis reduce using rule 7 (dimensions -> .)
    is_equal        reduce using rule 7 (dimensions -> .)
    not_equal       reduce using rule 7 (dimensions -> .)
    less_or_equal   reduce using rule 7 (dimensions -> .)
    greater_or_equal reduce using rule 7 (dimensions -> .)
    less_than       reduce using rule 7 (dimensions -> .)
    greater_than    reduce using rule 7 (dimensions -> .)
    and             reduce using rule 7 (dimensions -> .)
    or              reduce using rule 7 (dimensions -> .)
    out             reduce using rule 7 (dimensions -> .)
    in              reduce using rule 7 (dimensions -> .)

    dimensions                     shift and go to state 17

state 11

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .

    $end            reduce using rule 1 (ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .)


state 12

    (2) Main -> main . open_brace Routine close_brace

    open_brace      shift and go to state 19


state 13

    (55) SubroutinesDeclaration -> identifier open_brace . Routine close_brace SubroutinesDeclaration
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 20
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 14

    (8) VariablesDeclaration -> type RecVariableDeclaration semicolon . VariablesDeclaration
    (8) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (9) VariablesDeclaration -> .
    (14) type -> . int
    (15) type -> . double

    identifier      reduce using rule 9 (VariablesDeclaration -> .)
    main            reduce using rule 9 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    type                           shift and go to state 3
    VariablesDeclaration           shift and go to state 38

state 15

    (11) RecVariableDeclaration -> variable comma . RecVariableDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 39

state 16

    (12) RecVariableDeclaration -> variable equal . ArithmeticExpression
    (13) RecVariableDeclaration -> variable equal . ArithmeticExpression comma RecVariableDeclaration
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 41
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    UnaryOperation                 shift and go to state 45

state 17

    (5) variable -> identifier dimensions .

    comma           reduce using rule 5 (variable -> identifier dimensions .)
    equal           reduce using rule 5 (variable -> identifier dimensions .)
    semicolon       reduce using rule 5 (variable -> identifier dimensions .)
    plus_plus       reduce using rule 5 (variable -> identifier dimensions .)
    minus_minus     reduce using rule 5 (variable -> identifier dimensions .)
    star            reduce using rule 5 (variable -> identifier dimensions .)
    slash           reduce using rule 5 (variable -> identifier dimensions .)
    plus            reduce using rule 5 (variable -> identifier dimensions .)
    minus           reduce using rule 5 (variable -> identifier dimensions .)
    close_bracket   reduce using rule 5 (variable -> identifier dimensions .)
    close_parenthesis reduce using rule 5 (variable -> identifier dimensions .)
    is_equal        reduce using rule 5 (variable -> identifier dimensions .)
    not_equal       reduce using rule 5 (variable -> identifier dimensions .)
    less_or_equal   reduce using rule 5 (variable -> identifier dimensions .)
    greater_or_equal reduce using rule 5 (variable -> identifier dimensions .)
    less_than       reduce using rule 5 (variable -> identifier dimensions .)
    greater_than    reduce using rule 5 (variable -> identifier dimensions .)
    and             reduce using rule 5 (variable -> identifier dimensions .)
    or              reduce using rule 5 (variable -> identifier dimensions .)
    out             reduce using rule 5 (variable -> identifier dimensions .)
    in              reduce using rule 5 (variable -> identifier dimensions .)


state 18

    (6) dimensions -> open_bracket . variable close_bracket dimensions
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 49

state 19

    (2) Main -> main open_brace . Routine close_brace
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 50
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 20

    (55) SubroutinesDeclaration -> identifier open_brace Routine . close_brace SubroutinesDeclaration

    close_brace     shift and go to state 51


state 21

    (57) Routine -> AssignmentStatement . semicolon Routine

    semicolon       shift and go to state 52


state 22

    (58) Routine -> UnaryOperation . semicolon Routine

    semicolon       shift and go to state 53


state 23

    (59) Routine -> ifCondition . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    ifCondition                    shift and go to state 23
    Routine                        shift and go to state 54
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 24

    (60) Routine -> whileLoop . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    whileLoop                      shift and go to state 24
    Routine                        shift and go to state 55
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 25

    (61) Routine -> doWhileLoop . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    doWhileLoop                    shift and go to state 25
    Routine                        shift and go to state 56
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 26

    (62) Routine -> forLoop . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    forLoop                        shift and go to state 26
    Routine                        shift and go to state 57
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 27

    (63) Routine -> call . identifier semicolon Routine

    identifier      shift and go to state 58


state 28

    (64) Routine -> InOut . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    InOut                          shift and go to state 28
    Routine                        shift and go to state 59
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    variable                       shift and go to state 29

state 29

    (30) AssignmentStatement -> variable . action_insert_variable equal ArithmeticExpression action_assignation
    (33) UnaryOperation -> variable . plus_plus
    (34) UnaryOperation -> variable . minus_minus
    (74) action_insert_variable -> .

    plus_plus       shift and go to state 61
    minus_minus     shift and go to state 62
    equal           reduce using rule 74 (action_insert_variable -> .)

    action_insert_variable         shift and go to state 60

state 30

    (31) UnaryOperation -> plus_plus . variable
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 63

state 31

    (32) UnaryOperation -> minus_minus . variable
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 64

state 32

    (43) ifCondition -> if . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 65


state 33

    (48) whileLoop -> while . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 66


state 34

    (49) doWhileLoop -> do . open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    open_brace      shift and go to state 67


state 35

    (50) forLoop -> for . open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 68


state 36

    (66) InOut -> cin . in variable RecursiveIn semicolon

    in              shift and go to state 69


state 37

    (67) InOut -> cout . out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> cout . out string RecursiveOut semicolon

    out             shift and go to state 70


state 38

    (8) VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .

    identifier      reduce using rule 8 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)
    main            reduce using rule 8 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)


state 39

    (11) RecVariableDeclaration -> variable comma RecVariableDeclaration .

    semicolon       reduce using rule 11 (RecVariableDeclaration -> variable comma RecVariableDeclaration .)


state 40

    (23) factor -> variable . action_insert_variable
    (33) UnaryOperation -> variable . plus_plus
    (34) UnaryOperation -> variable . minus_minus
    (74) action_insert_variable -> .

    plus_plus       shift and go to state 61
    minus_minus     shift and go to state 62
    star            reduce using rule 74 (action_insert_variable -> .)
    slash           reduce using rule 74 (action_insert_variable -> .)
    comma           reduce using rule 74 (action_insert_variable -> .)
    plus            reduce using rule 74 (action_insert_variable -> .)
    minus           reduce using rule 74 (action_insert_variable -> .)
    semicolon       reduce using rule 74 (action_insert_variable -> .)
    close_parenthesis reduce using rule 74 (action_insert_variable -> .)
    is_equal        reduce using rule 74 (action_insert_variable -> .)
    not_equal       reduce using rule 74 (action_insert_variable -> .)
    less_or_equal   reduce using rule 74 (action_insert_variable -> .)
    greater_or_equal reduce using rule 74 (action_insert_variable -> .)
    less_than       reduce using rule 74 (action_insert_variable -> .)
    greater_than    reduce using rule 74 (action_insert_variable -> .)
    and             reduce using rule 74 (action_insert_variable -> .)
    or              reduce using rule 74 (action_insert_variable -> .)
    out             reduce using rule 74 (action_insert_variable -> .)

    action_insert_variable         shift and go to state 71

state 41

    (12) RecVariableDeclaration -> variable equal ArithmeticExpression .
    (13) RecVariableDeclaration -> variable equal ArithmeticExpression . comma RecVariableDeclaration
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet

    semicolon       reduce using rule 12 (RecVariableDeclaration -> variable equal ArithmeticExpression .)
    comma           shift and go to state 72
    plus            shift and go to state 73
    minus           shift and go to state 74


state 42

    (18) ArithmeticExpression -> term .
    (20) term -> term . star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> term . slash action_insert_operator factor action_generate_arith_quadruplet

    comma           reduce using rule 18 (ArithmeticExpression -> term .)
    plus            reduce using rule 18 (ArithmeticExpression -> term .)
    minus           reduce using rule 18 (ArithmeticExpression -> term .)
    semicolon       reduce using rule 18 (ArithmeticExpression -> term .)
    close_parenthesis reduce using rule 18 (ArithmeticExpression -> term .)
    is_equal        reduce using rule 18 (ArithmeticExpression -> term .)
    not_equal       reduce using rule 18 (ArithmeticExpression -> term .)
    less_or_equal   reduce using rule 18 (ArithmeticExpression -> term .)
    greater_or_equal reduce using rule 18 (ArithmeticExpression -> term .)
    less_than       reduce using rule 18 (ArithmeticExpression -> term .)
    greater_than    reduce using rule 18 (ArithmeticExpression -> term .)
    and             reduce using rule 18 (ArithmeticExpression -> term .)
    or              reduce using rule 18 (ArithmeticExpression -> term .)
    out             reduce using rule 18 (ArithmeticExpression -> term .)
    star            shift and go to state 75
    slash           shift and go to state 76


state 43

    (19) term -> factor .

    star            reduce using rule 19 (term -> factor .)
    slash           reduce using rule 19 (term -> factor .)
    comma           reduce using rule 19 (term -> factor .)
    plus            reduce using rule 19 (term -> factor .)
    minus           reduce using rule 19 (term -> factor .)
    semicolon       reduce using rule 19 (term -> factor .)
    close_parenthesis reduce using rule 19 (term -> factor .)
    is_equal        reduce using rule 19 (term -> factor .)
    not_equal       reduce using rule 19 (term -> factor .)
    less_or_equal   reduce using rule 19 (term -> factor .)
    greater_or_equal reduce using rule 19 (term -> factor .)
    less_than       reduce using rule 19 (term -> factor .)
    greater_than    reduce using rule 19 (term -> factor .)
    and             reduce using rule 19 (term -> factor .)
    or              reduce using rule 19 (term -> factor .)
    out             reduce using rule 19 (term -> factor .)


state 44

    (22) factor -> Number .

    star            reduce using rule 22 (factor -> Number .)
    slash           reduce using rule 22 (factor -> Number .)
    comma           reduce using rule 22 (factor -> Number .)
    plus            reduce using rule 22 (factor -> Number .)
    minus           reduce using rule 22 (factor -> Number .)
    semicolon       reduce using rule 22 (factor -> Number .)
    close_parenthesis reduce using rule 22 (factor -> Number .)
    is_equal        reduce using rule 22 (factor -> Number .)
    not_equal       reduce using rule 22 (factor -> Number .)
    less_or_equal   reduce using rule 22 (factor -> Number .)
    greater_or_equal reduce using rule 22 (factor -> Number .)
    less_than       reduce using rule 22 (factor -> Number .)
    greater_than    reduce using rule 22 (factor -> Number .)
    and             reduce using rule 22 (factor -> Number .)
    or              reduce using rule 22 (factor -> Number .)
    out             reduce using rule 22 (factor -> Number .)


state 45

    (24) factor -> UnaryOperation .

    star            reduce using rule 24 (factor -> UnaryOperation .)
    slash           reduce using rule 24 (factor -> UnaryOperation .)
    comma           reduce using rule 24 (factor -> UnaryOperation .)
    plus            reduce using rule 24 (factor -> UnaryOperation .)
    minus           reduce using rule 24 (factor -> UnaryOperation .)
    semicolon       reduce using rule 24 (factor -> UnaryOperation .)
    close_parenthesis reduce using rule 24 (factor -> UnaryOperation .)
    is_equal        reduce using rule 24 (factor -> UnaryOperation .)
    not_equal       reduce using rule 24 (factor -> UnaryOperation .)
    less_or_equal   reduce using rule 24 (factor -> UnaryOperation .)
    greater_or_equal reduce using rule 24 (factor -> UnaryOperation .)
    less_than       reduce using rule 24 (factor -> UnaryOperation .)
    greater_than    reduce using rule 24 (factor -> UnaryOperation .)
    and             reduce using rule 24 (factor -> UnaryOperation .)
    or              reduce using rule 24 (factor -> UnaryOperation .)
    out             reduce using rule 24 (factor -> UnaryOperation .)


state 46

    (25) factor -> open_parenthesis . ArithmeticExpression close_parenthesis
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 77
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 47

    (3) Number -> int_number . action_insert_int_operand
    (75) action_insert_int_operand -> .

    star            reduce using rule 75 (action_insert_int_operand -> .)
    slash           reduce using rule 75 (action_insert_int_operand -> .)
    comma           reduce using rule 75 (action_insert_int_operand -> .)
    plus            reduce using rule 75 (action_insert_int_operand -> .)
    minus           reduce using rule 75 (action_insert_int_operand -> .)
    semicolon       reduce using rule 75 (action_insert_int_operand -> .)
    close_parenthesis reduce using rule 75 (action_insert_int_operand -> .)
    is_equal        reduce using rule 75 (action_insert_int_operand -> .)
    not_equal       reduce using rule 75 (action_insert_int_operand -> .)
    less_or_equal   reduce using rule 75 (action_insert_int_operand -> .)
    greater_or_equal reduce using rule 75 (action_insert_int_operand -> .)
    less_than       reduce using rule 75 (action_insert_int_operand -> .)
    greater_than    reduce using rule 75 (action_insert_int_operand -> .)
    and             reduce using rule 75 (action_insert_int_operand -> .)
    or              reduce using rule 75 (action_insert_int_operand -> .)
    out             reduce using rule 75 (action_insert_int_operand -> .)

    action_insert_int_operand      shift and go to state 78

state 48

    (4) Number -> double_number . action_insert_double_operand
    (76) action_insert_double_operand -> .

    star            reduce using rule 76 (action_insert_double_operand -> .)
    slash           reduce using rule 76 (action_insert_double_operand -> .)
    comma           reduce using rule 76 (action_insert_double_operand -> .)
    plus            reduce using rule 76 (action_insert_double_operand -> .)
    minus           reduce using rule 76 (action_insert_double_operand -> .)
    semicolon       reduce using rule 76 (action_insert_double_operand -> .)
    close_parenthesis reduce using rule 76 (action_insert_double_operand -> .)
    is_equal        reduce using rule 76 (action_insert_double_operand -> .)
    not_equal       reduce using rule 76 (action_insert_double_operand -> .)
    less_or_equal   reduce using rule 76 (action_insert_double_operand -> .)
    greater_or_equal reduce using rule 76 (action_insert_double_operand -> .)
    less_than       reduce using rule 76 (action_insert_double_operand -> .)
    greater_than    reduce using rule 76 (action_insert_double_operand -> .)
    and             reduce using rule 76 (action_insert_double_operand -> .)
    or              reduce using rule 76 (action_insert_double_operand -> .)
    out             reduce using rule 76 (action_insert_double_operand -> .)

    action_insert_double_operand   shift and go to state 79

state 49

    (6) dimensions -> open_bracket variable . close_bracket dimensions

    close_bracket   shift and go to state 80


state 50

    (2) Main -> main open_brace Routine . close_brace

    close_brace     shift and go to state 81


state 51

    (55) SubroutinesDeclaration -> identifier open_brace Routine close_brace . SubroutinesDeclaration
    (55) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (56) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 56 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 82

state 52

    (57) Routine -> AssignmentStatement semicolon . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 21
    Routine                        shift and go to state 83
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 53

    (58) Routine -> UnaryOperation semicolon . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 22
    Routine                        shift and go to state 84
    AssignmentStatement            shift and go to state 21
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 54

    (59) Routine -> ifCondition Routine .

    close_brace     reduce using rule 59 (Routine -> ifCondition Routine .)


state 55

    (60) Routine -> whileLoop Routine .

    close_brace     reduce using rule 60 (Routine -> whileLoop Routine .)


state 56

    (61) Routine -> doWhileLoop Routine .

    close_brace     reduce using rule 61 (Routine -> doWhileLoop Routine .)


state 57

    (62) Routine -> forLoop Routine .

    close_brace     reduce using rule 62 (Routine -> forLoop Routine .)


state 58

    (63) Routine -> call identifier . semicolon Routine

    semicolon       shift and go to state 85


state 59

    (64) Routine -> InOut Routine .

    close_brace     reduce using rule 64 (Routine -> InOut Routine .)


state 60

    (30) AssignmentStatement -> variable action_insert_variable . equal ArithmeticExpression action_assignation

    equal           shift and go to state 86


state 61

    (33) UnaryOperation -> variable plus_plus .

    semicolon       reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    star            reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    slash           reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    comma           reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    plus            reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    minus           reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    close_parenthesis reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    is_equal        reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    not_equal       reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    less_or_equal   reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    greater_or_equal reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    less_than       reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    greater_than    reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    and             reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    or              reduce using rule 33 (UnaryOperation -> variable plus_plus .)
    out             reduce using rule 33 (UnaryOperation -> variable plus_plus .)


state 62

    (34) UnaryOperation -> variable minus_minus .

    semicolon       reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    star            reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    slash           reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    comma           reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    plus            reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    minus           reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    close_parenthesis reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    is_equal        reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    not_equal       reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    less_or_equal   reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    greater_or_equal reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    less_than       reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    greater_than    reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    and             reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    or              reduce using rule 34 (UnaryOperation -> variable minus_minus .)
    out             reduce using rule 34 (UnaryOperation -> variable minus_minus .)


state 63

    (31) UnaryOperation -> plus_plus variable .

    semicolon       reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    star            reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    slash           reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    comma           reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    plus            reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    minus           reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    close_parenthesis reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    is_equal        reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    not_equal       reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    less_or_equal   reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    greater_or_equal reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    less_than       reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    greater_than    reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    and             reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    or              reduce using rule 31 (UnaryOperation -> plus_plus variable .)
    out             reduce using rule 31 (UnaryOperation -> plus_plus variable .)


state 64

    (32) UnaryOperation -> minus_minus variable .

    semicolon       reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    star            reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    slash           reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    comma           reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    plus            reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    minus           reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    close_parenthesis reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    is_equal        reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    not_equal       reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    less_or_equal   reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    greater_or_equal reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    less_than       reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    greater_than    reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    and             reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    or              reduce using rule 32 (UnaryOperation -> minus_minus variable .)
    out             reduce using rule 32 (UnaryOperation -> minus_minus variable .)


state 65

    (43) ifCondition -> if open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 87
    ArithmeticExpression           shift and go to state 90
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 66

    (48) whileLoop -> while open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 91
    ArithmeticExpression           shift and go to state 90
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 67

    (49) doWhileLoop -> do open_brace . Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 92
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 68

    (50) forLoop -> for open_parenthesis . RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 93
    variable                       shift and go to state 9

state 69

    (66) InOut -> cin in . variable RecursiveIn semicolon
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 94

state 70

    (67) InOut -> cout out . ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> cout out . string RecursiveOut semicolon
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    string          shift and go to state 96
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 95
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 71

    (23) factor -> variable action_insert_variable .

    star            reduce using rule 23 (factor -> variable action_insert_variable .)
    slash           reduce using rule 23 (factor -> variable action_insert_variable .)
    comma           reduce using rule 23 (factor -> variable action_insert_variable .)
    plus            reduce using rule 23 (factor -> variable action_insert_variable .)
    minus           reduce using rule 23 (factor -> variable action_insert_variable .)
    semicolon       reduce using rule 23 (factor -> variable action_insert_variable .)
    close_parenthesis reduce using rule 23 (factor -> variable action_insert_variable .)
    is_equal        reduce using rule 23 (factor -> variable action_insert_variable .)
    not_equal       reduce using rule 23 (factor -> variable action_insert_variable .)
    less_or_equal   reduce using rule 23 (factor -> variable action_insert_variable .)
    greater_or_equal reduce using rule 23 (factor -> variable action_insert_variable .)
    less_than       reduce using rule 23 (factor -> variable action_insert_variable .)
    greater_than    reduce using rule 23 (factor -> variable action_insert_variable .)
    and             reduce using rule 23 (factor -> variable action_insert_variable .)
    or              reduce using rule 23 (factor -> variable action_insert_variable .)
    out             reduce using rule 23 (factor -> variable action_insert_variable .)


state 72

    (13) RecVariableDeclaration -> variable equal ArithmeticExpression comma . RecVariableDeclaration
    (10) RecVariableDeclaration -> . variable
    (11) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (12) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 97

state 73

    (16) ArithmeticExpression -> ArithmeticExpression plus . action_insert_operator term action_generate_arith_quadruplet
    (77) action_insert_operator -> .

    open_parenthesis reduce using rule 77 (action_insert_operator -> .)
    int_number      reduce using rule 77 (action_insert_operator -> .)
    double_number   reduce using rule 77 (action_insert_operator -> .)
    identifier      reduce using rule 77 (action_insert_operator -> .)
    plus_plus       reduce using rule 77 (action_insert_operator -> .)
    minus_minus     reduce using rule 77 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 98

state 74

    (17) ArithmeticExpression -> ArithmeticExpression minus . action_insert_operator term action_generate_arith_quadruplet
    (77) action_insert_operator -> .

    open_parenthesis reduce using rule 77 (action_insert_operator -> .)
    int_number      reduce using rule 77 (action_insert_operator -> .)
    double_number   reduce using rule 77 (action_insert_operator -> .)
    identifier      reduce using rule 77 (action_insert_operator -> .)
    plus_plus       reduce using rule 77 (action_insert_operator -> .)
    minus_minus     reduce using rule 77 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 99

state 75

    (20) term -> term star . action_insert_operator factor action_generate_arith_quadruplet
    (77) action_insert_operator -> .

    open_parenthesis reduce using rule 77 (action_insert_operator -> .)
    int_number      reduce using rule 77 (action_insert_operator -> .)
    double_number   reduce using rule 77 (action_insert_operator -> .)
    identifier      reduce using rule 77 (action_insert_operator -> .)
    plus_plus       reduce using rule 77 (action_insert_operator -> .)
    minus_minus     reduce using rule 77 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 100

state 76

    (21) term -> term slash . action_insert_operator factor action_generate_arith_quadruplet
    (77) action_insert_operator -> .

    open_parenthesis reduce using rule 77 (action_insert_operator -> .)
    int_number      reduce using rule 77 (action_insert_operator -> .)
    double_number   reduce using rule 77 (action_insert_operator -> .)
    identifier      reduce using rule 77 (action_insert_operator -> .)
    plus_plus       reduce using rule 77 (action_insert_operator -> .)
    minus_minus     reduce using rule 77 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 101

state 77

    (25) factor -> open_parenthesis ArithmeticExpression . close_parenthesis
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet

    close_parenthesis shift and go to state 102
    plus            shift and go to state 73
    minus           shift and go to state 74


state 78

    (3) Number -> int_number action_insert_int_operand .

    star            reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    slash           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    comma           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    plus            reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    minus           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    semicolon       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    close_parenthesis reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    is_equal        reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    not_equal       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    less_or_equal   reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    greater_or_equal reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    less_than       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    greater_than    reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    and             reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    or              reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    out             reduce using rule 3 (Number -> int_number action_insert_int_operand .)


state 79

    (4) Number -> double_number action_insert_double_operand .

    star            reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    slash           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    comma           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    plus            reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    minus           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    semicolon       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    close_parenthesis reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    is_equal        reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    not_equal       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    less_or_equal   reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    greater_or_equal reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    less_than       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    greater_than    reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    and             reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    or              reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    out             reduce using rule 4 (Number -> double_number action_insert_double_operand .)


state 80

    (6) dimensions -> open_bracket variable close_bracket . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 7 (dimensions -> .)
    equal           reduce using rule 7 (dimensions -> .)
    semicolon       reduce using rule 7 (dimensions -> .)
    plus_plus       reduce using rule 7 (dimensions -> .)
    minus_minus     reduce using rule 7 (dimensions -> .)
    star            reduce using rule 7 (dimensions -> .)
    slash           reduce using rule 7 (dimensions -> .)
    plus            reduce using rule 7 (dimensions -> .)
    minus           reduce using rule 7 (dimensions -> .)
    close_bracket   reduce using rule 7 (dimensions -> .)
    close_parenthesis reduce using rule 7 (dimensions -> .)
    is_equal        reduce using rule 7 (dimensions -> .)
    not_equal       reduce using rule 7 (dimensions -> .)
    less_or_equal   reduce using rule 7 (dimensions -> .)
    greater_or_equal reduce using rule 7 (dimensions -> .)
    less_than       reduce using rule 7 (dimensions -> .)
    greater_than    reduce using rule 7 (dimensions -> .)
    and             reduce using rule 7 (dimensions -> .)
    or              reduce using rule 7 (dimensions -> .)
    out             reduce using rule 7 (dimensions -> .)
    in              reduce using rule 7 (dimensions -> .)

    dimensions                     shift and go to state 103

state 81

    (2) Main -> main open_brace Routine close_brace .

    $end            reduce using rule 2 (Main -> main open_brace Routine close_brace .)


state 82

    (55) SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .

    main            reduce using rule 55 (SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .)


state 83

    (57) Routine -> AssignmentStatement semicolon Routine .

    close_brace     reduce using rule 57 (Routine -> AssignmentStatement semicolon Routine .)


state 84

    (58) Routine -> UnaryOperation semicolon Routine .

    close_brace     reduce using rule 58 (Routine -> UnaryOperation semicolon Routine .)


state 85

    (63) Routine -> call identifier semicolon . Routine
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 104
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 86

    (30) AssignmentStatement -> variable action_insert_variable equal . ArithmeticExpression action_assignation
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 105
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    UnaryOperation                 shift and go to state 45

state 87

    (43) ifCondition -> if open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 106


state 88

    (26) BooleanExpression -> true .

    close_parenthesis reduce using rule 26 (BooleanExpression -> true .)
    semicolon       reduce using rule 26 (BooleanExpression -> true .)


state 89

    (27) BooleanExpression -> false .

    close_parenthesis reduce using rule 27 (BooleanExpression -> false .)
    semicolon       reduce using rule 27 (BooleanExpression -> false .)


state 90

    (28) BooleanExpression -> ArithmeticExpression .
    (29) BooleanExpression -> ArithmeticExpression . LogicOperator BooleanExpression
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet
    (35) LogicOperator -> . is_equal
    (36) LogicOperator -> . not_equal
    (37) LogicOperator -> . less_or_equal
    (38) LogicOperator -> . greater_or_equal
    (39) LogicOperator -> . less_than
    (40) LogicOperator -> . greater_than
    (41) LogicOperator -> . and
    (42) LogicOperator -> . or

    close_parenthesis reduce using rule 28 (BooleanExpression -> ArithmeticExpression .)
    semicolon       reduce using rule 28 (BooleanExpression -> ArithmeticExpression .)
    plus            shift and go to state 73
    minus           shift and go to state 74
    is_equal        shift and go to state 108
    not_equal       shift and go to state 109
    less_or_equal   shift and go to state 110
    greater_or_equal shift and go to state 111
    less_than       shift and go to state 112
    greater_than    shift and go to state 113
    and             shift and go to state 114
    or              shift and go to state 115

    LogicOperator                  shift and go to state 107

state 91

    (48) whileLoop -> while open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 116


state 92

    (49) doWhileLoop -> do open_brace Routine . close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    close_brace     shift and go to state 117


state 93

    (50) forLoop -> for open_parenthesis RecVariableDeclaration . semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 118


state 94

    (66) InOut -> cin in variable . RecursiveIn semicolon
    (69) RecursiveIn -> . in variable RecursiveIn
    (70) RecursiveIn -> .

    in              shift and go to state 119
    semicolon       reduce using rule 70 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 120

state 95

    (67) InOut -> cout out ArithmeticExpression . RecursiveOut semicolon
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet
    (71) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (72) RecursiveOut -> . out string RecursiveOut
    (73) RecursiveOut -> .

    plus            shift and go to state 73
    minus           shift and go to state 74
    out             shift and go to state 121
    semicolon       reduce using rule 73 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 122

state 96

    (68) InOut -> cout out string . RecursiveOut semicolon
    (71) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (72) RecursiveOut -> . out string RecursiveOut
    (73) RecursiveOut -> .

    out             shift and go to state 121
    semicolon       reduce using rule 73 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 123

state 97

    (13) RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .

    semicolon       reduce using rule 13 (RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .)


state 98

    (16) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator . term action_generate_arith_quadruplet
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    term                           shift and go to state 124
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 99

    (17) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator . term action_generate_arith_quadruplet
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    term                           shift and go to state 125
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 100

    (20) term -> term star action_insert_operator . factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    factor                         shift and go to state 126
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 101

    (21) term -> term slash action_insert_operator . factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    factor                         shift and go to state 127
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 102

    (25) factor -> open_parenthesis ArithmeticExpression close_parenthesis .

    star            reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    slash           reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    comma           reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    plus            reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    minus           reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    semicolon       reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    close_parenthesis reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    is_equal        reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    not_equal       reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_or_equal   reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_or_equal reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_than       reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_than    reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    and             reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    or              reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    out             reduce using rule 25 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)


state 103

    (6) dimensions -> open_bracket variable close_bracket dimensions .

    comma           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    equal           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    semicolon       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    plus_plus       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    minus_minus     reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    star            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    slash           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    plus            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    minus           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_bracket   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_parenthesis reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    is_equal        reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    not_equal       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_or_equal   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_or_equal reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_than       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_than    reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    and             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    or              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    out             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    in              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)


state 104

    (63) Routine -> call identifier semicolon Routine .

    close_brace     reduce using rule 63 (Routine -> call identifier semicolon Routine .)


state 105

    (30) AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression . action_assignation
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet
    (79) action_assignation -> .

    plus            shift and go to state 73
    minus           shift and go to state 74
    semicolon       reduce using rule 79 (action_assignation -> .)
    comma           reduce using rule 79 (action_assignation -> .)
    close_parenthesis reduce using rule 79 (action_assignation -> .)

    action_assignation             shift and go to state 128

state 106

    (43) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 129


state 107

    (29) BooleanExpression -> ArithmeticExpression LogicOperator . BooleanExpression
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 90
    BooleanExpression              shift and go to state 130
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 108

    (35) LogicOperator -> is_equal .

    true            reduce using rule 35 (LogicOperator -> is_equal .)
    false           reduce using rule 35 (LogicOperator -> is_equal .)
    open_parenthesis reduce using rule 35 (LogicOperator -> is_equal .)
    int_number      reduce using rule 35 (LogicOperator -> is_equal .)
    double_number   reduce using rule 35 (LogicOperator -> is_equal .)
    identifier      reduce using rule 35 (LogicOperator -> is_equal .)
    plus_plus       reduce using rule 35 (LogicOperator -> is_equal .)
    minus_minus     reduce using rule 35 (LogicOperator -> is_equal .)


state 109

    (36) LogicOperator -> not_equal .

    true            reduce using rule 36 (LogicOperator -> not_equal .)
    false           reduce using rule 36 (LogicOperator -> not_equal .)
    open_parenthesis reduce using rule 36 (LogicOperator -> not_equal .)
    int_number      reduce using rule 36 (LogicOperator -> not_equal .)
    double_number   reduce using rule 36 (LogicOperator -> not_equal .)
    identifier      reduce using rule 36 (LogicOperator -> not_equal .)
    plus_plus       reduce using rule 36 (LogicOperator -> not_equal .)
    minus_minus     reduce using rule 36 (LogicOperator -> not_equal .)


state 110

    (37) LogicOperator -> less_or_equal .

    true            reduce using rule 37 (LogicOperator -> less_or_equal .)
    false           reduce using rule 37 (LogicOperator -> less_or_equal .)
    open_parenthesis reduce using rule 37 (LogicOperator -> less_or_equal .)
    int_number      reduce using rule 37 (LogicOperator -> less_or_equal .)
    double_number   reduce using rule 37 (LogicOperator -> less_or_equal .)
    identifier      reduce using rule 37 (LogicOperator -> less_or_equal .)
    plus_plus       reduce using rule 37 (LogicOperator -> less_or_equal .)
    minus_minus     reduce using rule 37 (LogicOperator -> less_or_equal .)


state 111

    (38) LogicOperator -> greater_or_equal .

    true            reduce using rule 38 (LogicOperator -> greater_or_equal .)
    false           reduce using rule 38 (LogicOperator -> greater_or_equal .)
    open_parenthesis reduce using rule 38 (LogicOperator -> greater_or_equal .)
    int_number      reduce using rule 38 (LogicOperator -> greater_or_equal .)
    double_number   reduce using rule 38 (LogicOperator -> greater_or_equal .)
    identifier      reduce using rule 38 (LogicOperator -> greater_or_equal .)
    plus_plus       reduce using rule 38 (LogicOperator -> greater_or_equal .)
    minus_minus     reduce using rule 38 (LogicOperator -> greater_or_equal .)


state 112

    (39) LogicOperator -> less_than .

    true            reduce using rule 39 (LogicOperator -> less_than .)
    false           reduce using rule 39 (LogicOperator -> less_than .)
    open_parenthesis reduce using rule 39 (LogicOperator -> less_than .)
    int_number      reduce using rule 39 (LogicOperator -> less_than .)
    double_number   reduce using rule 39 (LogicOperator -> less_than .)
    identifier      reduce using rule 39 (LogicOperator -> less_than .)
    plus_plus       reduce using rule 39 (LogicOperator -> less_than .)
    minus_minus     reduce using rule 39 (LogicOperator -> less_than .)


state 113

    (40) LogicOperator -> greater_than .

    true            reduce using rule 40 (LogicOperator -> greater_than .)
    false           reduce using rule 40 (LogicOperator -> greater_than .)
    open_parenthesis reduce using rule 40 (LogicOperator -> greater_than .)
    int_number      reduce using rule 40 (LogicOperator -> greater_than .)
    double_number   reduce using rule 40 (LogicOperator -> greater_than .)
    identifier      reduce using rule 40 (LogicOperator -> greater_than .)
    plus_plus       reduce using rule 40 (LogicOperator -> greater_than .)
    minus_minus     reduce using rule 40 (LogicOperator -> greater_than .)


state 114

    (41) LogicOperator -> and .

    true            reduce using rule 41 (LogicOperator -> and .)
    false           reduce using rule 41 (LogicOperator -> and .)
    open_parenthesis reduce using rule 41 (LogicOperator -> and .)
    int_number      reduce using rule 41 (LogicOperator -> and .)
    double_number   reduce using rule 41 (LogicOperator -> and .)
    identifier      reduce using rule 41 (LogicOperator -> and .)
    plus_plus       reduce using rule 41 (LogicOperator -> and .)
    minus_minus     reduce using rule 41 (LogicOperator -> and .)


state 115

    (42) LogicOperator -> or .

    true            reduce using rule 42 (LogicOperator -> or .)
    false           reduce using rule 42 (LogicOperator -> or .)
    open_parenthesis reduce using rule 42 (LogicOperator -> or .)
    int_number      reduce using rule 42 (LogicOperator -> or .)
    double_number   reduce using rule 42 (LogicOperator -> or .)
    identifier      reduce using rule 42 (LogicOperator -> or .)
    plus_plus       reduce using rule 42 (LogicOperator -> or .)
    minus_minus     reduce using rule 42 (LogicOperator -> or .)


state 116

    (48) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 131


state 117

    (49) doWhileLoop -> do open_brace Routine close_brace . while open_parenthesis BooleanExpression close_parenthesis semicolon

    while           shift and go to state 132


state 118

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon . BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 133
    ArithmeticExpression           shift and go to state 90
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 119

    (69) RecursiveIn -> in . variable RecursiveIn
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 134

state 120

    (66) InOut -> cin in variable RecursiveIn . semicolon

    semicolon       shift and go to state 135


state 121

    (71) RecursiveOut -> out . ArithmeticExpression RecursiveOut
    (72) RecursiveOut -> out . string RecursiveOut
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    string          shift and go to state 137
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 136
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 122

    (67) InOut -> cout out ArithmeticExpression RecursiveOut . semicolon

    semicolon       shift and go to state 138


state 123

    (68) InOut -> cout out string RecursiveOut . semicolon

    semicolon       shift and go to state 139


state 124

    (16) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term . action_generate_arith_quadruplet
    (20) term -> term . star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> term . slash action_insert_operator factor action_generate_arith_quadruplet
    (78) action_generate_arith_quadruplet -> .

    star            shift and go to state 75
    slash           shift and go to state 76
    comma           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    plus            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    minus           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    semicolon       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    close_parenthesis reduce using rule 78 (action_generate_arith_quadruplet -> .)
    is_equal        reduce using rule 78 (action_generate_arith_quadruplet -> .)
    not_equal       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_or_equal   reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_or_equal reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_than       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_than    reduce using rule 78 (action_generate_arith_quadruplet -> .)
    and             reduce using rule 78 (action_generate_arith_quadruplet -> .)
    or              reduce using rule 78 (action_generate_arith_quadruplet -> .)
    out             reduce using rule 78 (action_generate_arith_quadruplet -> .)

    action_generate_arith_quadruplet shift and go to state 140

state 125

    (17) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term . action_generate_arith_quadruplet
    (20) term -> term . star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> term . slash action_insert_operator factor action_generate_arith_quadruplet
    (78) action_generate_arith_quadruplet -> .

    star            shift and go to state 75
    slash           shift and go to state 76
    comma           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    plus            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    minus           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    semicolon       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    close_parenthesis reduce using rule 78 (action_generate_arith_quadruplet -> .)
    is_equal        reduce using rule 78 (action_generate_arith_quadruplet -> .)
    not_equal       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_or_equal   reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_or_equal reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_than       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_than    reduce using rule 78 (action_generate_arith_quadruplet -> .)
    and             reduce using rule 78 (action_generate_arith_quadruplet -> .)
    or              reduce using rule 78 (action_generate_arith_quadruplet -> .)
    out             reduce using rule 78 (action_generate_arith_quadruplet -> .)

    action_generate_arith_quadruplet shift and go to state 141

state 126

    (20) term -> term star action_insert_operator factor . action_generate_arith_quadruplet
    (78) action_generate_arith_quadruplet -> .

    star            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    slash           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    comma           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    plus            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    minus           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    semicolon       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    close_parenthesis reduce using rule 78 (action_generate_arith_quadruplet -> .)
    is_equal        reduce using rule 78 (action_generate_arith_quadruplet -> .)
    not_equal       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_or_equal   reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_or_equal reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_than       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_than    reduce using rule 78 (action_generate_arith_quadruplet -> .)
    and             reduce using rule 78 (action_generate_arith_quadruplet -> .)
    or              reduce using rule 78 (action_generate_arith_quadruplet -> .)
    out             reduce using rule 78 (action_generate_arith_quadruplet -> .)

    action_generate_arith_quadruplet shift and go to state 142

state 127

    (21) term -> term slash action_insert_operator factor . action_generate_arith_quadruplet
    (78) action_generate_arith_quadruplet -> .

    star            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    slash           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    comma           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    plus            reduce using rule 78 (action_generate_arith_quadruplet -> .)
    minus           reduce using rule 78 (action_generate_arith_quadruplet -> .)
    semicolon       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    close_parenthesis reduce using rule 78 (action_generate_arith_quadruplet -> .)
    is_equal        reduce using rule 78 (action_generate_arith_quadruplet -> .)
    not_equal       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_or_equal   reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_or_equal reduce using rule 78 (action_generate_arith_quadruplet -> .)
    less_than       reduce using rule 78 (action_generate_arith_quadruplet -> .)
    greater_than    reduce using rule 78 (action_generate_arith_quadruplet -> .)
    and             reduce using rule 78 (action_generate_arith_quadruplet -> .)
    or              reduce using rule 78 (action_generate_arith_quadruplet -> .)
    out             reduce using rule 78 (action_generate_arith_quadruplet -> .)

    action_generate_arith_quadruplet shift and go to state 143

state 128

    (30) AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .

    semicolon       reduce using rule 30 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)
    comma           reduce using rule 30 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)
    close_parenthesis reduce using rule 30 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)


state 129

    (43) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 144
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 130

    (29) BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .

    close_parenthesis reduce using rule 29 (BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .)
    semicolon       reduce using rule 29 (BooleanExpression -> ArithmeticExpression LogicOperator BooleanExpression .)


state 131

    (48) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 145
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 132

    (49) doWhileLoop -> do open_brace Routine close_brace while . open_parenthesis BooleanExpression close_parenthesis semicolon

    open_parenthesis shift and go to state 146


state 133

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression . semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 147


state 134

    (69) RecursiveIn -> in variable . RecursiveIn
    (69) RecursiveIn -> . in variable RecursiveIn
    (70) RecursiveIn -> .

    in              shift and go to state 119
    semicolon       reduce using rule 70 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 148

state 135

    (66) InOut -> cin in variable RecursiveIn semicolon .

    call            reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    plus_plus       reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    minus_minus     reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    if              reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    while           reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    do              reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    for             reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    cin             reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    cout            reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    identifier      reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)
    close_brace     reduce using rule 66 (InOut -> cin in variable RecursiveIn semicolon .)


state 136

    (71) RecursiveOut -> out ArithmeticExpression . RecursiveOut
    (16) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_arith_quadruplet
    (71) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (72) RecursiveOut -> . out string RecursiveOut
    (73) RecursiveOut -> .

    plus            shift and go to state 73
    minus           shift and go to state 74
    out             shift and go to state 121
    semicolon       reduce using rule 73 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 149

state 137

    (72) RecursiveOut -> out string . RecursiveOut
    (71) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (72) RecursiveOut -> . out string RecursiveOut
    (73) RecursiveOut -> .

    out             shift and go to state 121
    semicolon       reduce using rule 73 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 150

state 138

    (67) InOut -> cout out ArithmeticExpression RecursiveOut semicolon .

    call            reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    plus_plus       reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    minus_minus     reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    if              reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    while           reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    do              reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    for             reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cin             reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cout            reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    identifier      reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    close_brace     reduce using rule 67 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)


state 139

    (68) InOut -> cout out string RecursiveOut semicolon .

    call            reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    plus_plus       reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    minus_minus     reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    if              reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    while           reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    do              reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    for             reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    cin             reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    cout            reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    identifier      reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)
    close_brace     reduce using rule 68 (InOut -> cout out string RecursiveOut semicolon .)


state 140

    (16) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .

    comma           reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    plus            reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    minus           reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    semicolon       reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    close_parenthesis reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    is_equal        reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    not_equal       reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    less_or_equal   reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    greater_or_equal reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    less_than       reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    greater_than    reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    and             reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    or              reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)
    out             reduce using rule 16 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet .)


state 141

    (17) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .

    comma           reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    plus            reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    minus           reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    semicolon       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    close_parenthesis reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    is_equal        reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    not_equal       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    less_or_equal   reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    greater_or_equal reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    less_than       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    greater_than    reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    and             reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    or              reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)
    out             reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet .)


state 142

    (20) term -> term star action_insert_operator factor action_generate_arith_quadruplet .

    star            reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    slash           reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    comma           reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    plus            reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    minus           reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    semicolon       reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    close_parenthesis reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    is_equal        reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    not_equal       reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    less_or_equal   reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    greater_or_equal reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    less_than       reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    greater_than    reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    and             reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    or              reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)
    out             reduce using rule 20 (term -> term star action_insert_operator factor action_generate_arith_quadruplet .)


state 143

    (21) term -> term slash action_insert_operator factor action_generate_arith_quadruplet .

    star            reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    slash           reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    comma           reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    plus            reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    minus           reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    semicolon       reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    close_parenthesis reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    is_equal        reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    not_equal       reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    less_or_equal   reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    greater_or_equal reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    less_than       reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    greater_than    reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    and             reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    or              reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)
    out             reduce using rule 21 (term -> term slash action_insert_operator factor action_generate_arith_quadruplet .)


state 144

    (43) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 151


state 145

    (48) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 152


state 146

    (49) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis . BooleanExpression close_parenthesis semicolon
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 153
    ArithmeticExpression           shift and go to state 90
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 147

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon . UpdateVariables close_parenthesis open_brace Routine close_brace
    (51) UpdateVariables -> . AssignmentStatement
    (52) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (53) UpdateVariables -> . UnaryOperation
    (54) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UpdateVariables                shift and go to state 154
    AssignmentStatement            shift and go to state 155
    UnaryOperation                 shift and go to state 156
    variable                       shift and go to state 29

state 148

    (69) RecursiveIn -> in variable RecursiveIn .

    semicolon       reduce using rule 69 (RecursiveIn -> in variable RecursiveIn .)


state 149

    (71) RecursiveOut -> out ArithmeticExpression RecursiveOut .

    semicolon       reduce using rule 71 (RecursiveOut -> out ArithmeticExpression RecursiveOut .)


state 150

    (72) RecursiveOut -> out string RecursiveOut .

    semicolon       reduce using rule 72 (RecursiveOut -> out string RecursiveOut .)


state 151

    (43) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (44) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (45) elseIfCondition -> . elseCondition
    (46) elseCondition -> . else open_brace Routine close_brace
    (47) elseCondition -> .

    elseif          shift and go to state 158
    else            shift and go to state 160
    call            reduce using rule 47 (elseCondition -> .)
    plus_plus       reduce using rule 47 (elseCondition -> .)
    minus_minus     reduce using rule 47 (elseCondition -> .)
    if              reduce using rule 47 (elseCondition -> .)
    while           reduce using rule 47 (elseCondition -> .)
    do              reduce using rule 47 (elseCondition -> .)
    for             reduce using rule 47 (elseCondition -> .)
    cin             reduce using rule 47 (elseCondition -> .)
    cout            reduce using rule 47 (elseCondition -> .)
    identifier      reduce using rule 47 (elseCondition -> .)
    close_brace     reduce using rule 47 (elseCondition -> .)

    elseIfCondition                shift and go to state 157
    elseCondition                  shift and go to state 159

state 152

    (48) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 48 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)


state 153

    (49) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression . close_parenthesis semicolon

    close_parenthesis shift and go to state 161


state 154

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 162


state 155

    (51) UpdateVariables -> AssignmentStatement .
    (52) UpdateVariables -> AssignmentStatement . comma UpdateVariables

    close_parenthesis reduce using rule 51 (UpdateVariables -> AssignmentStatement .)
    comma           shift and go to state 163


state 156

    (53) UpdateVariables -> UnaryOperation .
    (54) UpdateVariables -> UnaryOperation . comma UpdateVariables

    close_parenthesis reduce using rule 53 (UpdateVariables -> UnaryOperation .)
    comma           shift and go to state 164


state 157

    (43) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 43 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)


state 158

    (44) elseIfCondition -> elseif . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 165


state 159

    (45) elseIfCondition -> elseCondition .

    call            reduce using rule 45 (elseIfCondition -> elseCondition .)
    plus_plus       reduce using rule 45 (elseIfCondition -> elseCondition .)
    minus_minus     reduce using rule 45 (elseIfCondition -> elseCondition .)
    if              reduce using rule 45 (elseIfCondition -> elseCondition .)
    while           reduce using rule 45 (elseIfCondition -> elseCondition .)
    do              reduce using rule 45 (elseIfCondition -> elseCondition .)
    for             reduce using rule 45 (elseIfCondition -> elseCondition .)
    cin             reduce using rule 45 (elseIfCondition -> elseCondition .)
    cout            reduce using rule 45 (elseIfCondition -> elseCondition .)
    identifier      reduce using rule 45 (elseIfCondition -> elseCondition .)
    close_brace     reduce using rule 45 (elseIfCondition -> elseCondition .)


state 160

    (46) elseCondition -> else . open_brace Routine close_brace

    open_brace      shift and go to state 166


state 161

    (49) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis . semicolon

    semicolon       shift and go to state 167


state 162

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 168


state 163

    (52) UpdateVariables -> AssignmentStatement comma . UpdateVariables
    (51) UpdateVariables -> . AssignmentStatement
    (52) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (53) UpdateVariables -> . UnaryOperation
    (54) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 155
    UpdateVariables                shift and go to state 169
    UnaryOperation                 shift and go to state 156
    variable                       shift and go to state 29

state 164

    (54) UpdateVariables -> UnaryOperation comma . UpdateVariables
    (51) UpdateVariables -> . AssignmentStatement
    (52) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (53) UpdateVariables -> . UnaryOperation
    (54) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 156
    UpdateVariables                shift and go to state 170
    AssignmentStatement            shift and go to state 155
    variable                       shift and go to state 29

state 165

    (44) elseIfCondition -> elseif open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (26) BooleanExpression -> . true
    (27) BooleanExpression -> . false
    (28) BooleanExpression -> . ArithmeticExpression
    (29) BooleanExpression -> . ArithmeticExpression LogicOperator BooleanExpression
    (16) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_arith_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_arith_quadruplet
    (18) ArithmeticExpression -> . term
    (19) term -> . factor
    (20) term -> . term star action_insert_operator factor action_generate_arith_quadruplet
    (21) term -> . term slash action_insert_operator factor action_generate_arith_quadruplet
    (22) factor -> . Number
    (23) factor -> . variable action_insert_variable
    (24) factor -> . UnaryOperation
    (25) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus

    true            shift and go to state 88
    false           shift and go to state 89
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 171
    ArithmeticExpression           shift and go to state 90
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 166

    (46) elseCondition -> else open_brace . Routine close_brace
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 172
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 167

    (49) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .

    call            reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    plus_plus       reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    minus_minus     reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    if              reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    while           reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    do              reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    for             reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cin             reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cout            reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    identifier      reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    close_brace     reduce using rule 49 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)


state 168

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace . Routine close_brace
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 173
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 169

    (52) UpdateVariables -> AssignmentStatement comma UpdateVariables .

    close_parenthesis reduce using rule 52 (UpdateVariables -> AssignmentStatement comma UpdateVariables .)


state 170

    (54) UpdateVariables -> UnaryOperation comma UpdateVariables .

    close_parenthesis reduce using rule 54 (UpdateVariables -> UnaryOperation comma UpdateVariables .)


state 171

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 174


state 172

    (46) elseCondition -> else open_brace Routine . close_brace

    close_brace     shift and go to state 175


state 173

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 176


state 174

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 177


state 175

    (46) elseCondition -> else open_brace Routine close_brace .

    call            reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    plus_plus       reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    minus_minus     reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    if              reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    while           reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    do              reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    for             reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    cin             reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    cout            reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    identifier      reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)
    close_brace     reduce using rule 46 (elseCondition -> else open_brace Routine close_brace .)


state 176

    (50) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 50 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)


state 177

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (57) Routine -> . AssignmentStatement semicolon Routine
    (58) Routine -> . UnaryOperation semicolon Routine
    (59) Routine -> . ifCondition Routine
    (60) Routine -> . whileLoop Routine
    (61) Routine -> . doWhileLoop Routine
    (62) Routine -> . forLoop Routine
    (63) Routine -> . call identifier semicolon Routine
    (64) Routine -> . InOut Routine
    (65) Routine -> .
    (30) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (31) UnaryOperation -> . plus_plus variable
    (32) UnaryOperation -> . minus_minus variable
    (33) UnaryOperation -> . variable plus_plus
    (34) UnaryOperation -> . variable minus_minus
    (43) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (48) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (49) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (50) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (66) InOut -> . cin in variable RecursiveIn semicolon
    (67) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (68) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 65 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 178
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 178

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 179


state 179

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (44) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (45) elseIfCondition -> . elseCondition
    (46) elseCondition -> . else open_brace Routine close_brace
    (47) elseCondition -> .

    elseif          shift and go to state 158
    else            shift and go to state 160
    call            reduce using rule 47 (elseCondition -> .)
    plus_plus       reduce using rule 47 (elseCondition -> .)
    minus_minus     reduce using rule 47 (elseCondition -> .)
    if              reduce using rule 47 (elseCondition -> .)
    while           reduce using rule 47 (elseCondition -> .)
    do              reduce using rule 47 (elseCondition -> .)
    for             reduce using rule 47 (elseCondition -> .)
    cin             reduce using rule 47 (elseCondition -> .)
    cout            reduce using rule 47 (elseCondition -> .)
    identifier      reduce using rule 47 (elseCondition -> .)
    close_brace     reduce using rule 47 (elseCondition -> .)

    elseIfCondition                shift and go to state 180
    elseCondition                  shift and go to state 159

state 180

    (44) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 44 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)

