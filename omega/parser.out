Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ProgramFlow
Rule 1     ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main
Rule 2     Main -> main open_brace Routine close_brace
Rule 3     Number -> int_number action_insert_int_operand
Rule 4     Number -> double_number action_insert_double_operand
Rule 5     variable -> identifier dimensions
Rule 6     dimensions -> open_bracket variable close_bracket dimensions
Rule 7     dimensions -> open_bracket Number close_bracket dimensions
Rule 8     dimensions -> <empty>
Rule 9     VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration
Rule 10    VariablesDeclaration -> <empty>
Rule 11    RecVariableDeclaration -> variable
Rule 12    RecVariableDeclaration -> variable comma RecVariableDeclaration
Rule 13    RecVariableDeclaration -> variable equal ArithmeticExpression
Rule 14    RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration
Rule 15    type -> int
Rule 16    type -> double
Rule 17    ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
Rule 18    ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
Rule 19    ArithmeticExpression -> term
Rule 20    term -> factor
Rule 21    term -> term star action_insert_operator factor action_generate_quadruplet
Rule 22    term -> term slash action_insert_operator factor action_generate_quadruplet
Rule 23    factor -> Number
Rule 24    factor -> variable action_insert_variable
Rule 25    factor -> UnaryOperation
Rule 26    factor -> open_parenthesis ArithmeticExpression close_parenthesis
Rule 27    BooleanExpression -> true
Rule 28    BooleanExpression -> false
Rule 29    BooleanExpression -> ArithmeticExpression
Rule 30    BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
Rule 31    AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation
Rule 32    UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
Rule 33    UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
Rule 34    LogicOperator -> is_equal
Rule 35    LogicOperator -> not_equal
Rule 36    LogicOperator -> less_or_equal
Rule 37    LogicOperator -> greater_or_equal
Rule 38    LogicOperator -> less_than
Rule 39    LogicOperator -> greater_than
Rule 40    LogicOperator -> and
Rule 41    LogicOperator -> or
Rule 42    ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 43    elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
Rule 44    elseIfCondition -> elseCondition
Rule 45    elseCondition -> else open_brace Routine close_brace
Rule 46    elseCondition -> <empty>
Rule 47    whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
Rule 48    doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
Rule 49    forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
Rule 50    UpdateVariables -> AssignmentStatement
Rule 51    UpdateVariables -> AssignmentStatement comma UpdateVariables
Rule 52    UpdateVariables -> UnaryOperation
Rule 53    UpdateVariables -> UnaryOperation comma UpdateVariables
Rule 54    SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration
Rule 55    SubroutinesDeclaration -> <empty>
Rule 56    Routine -> AssignmentStatement semicolon Routine
Rule 57    Routine -> UnaryOperation semicolon Routine
Rule 58    Routine -> ifCondition Routine
Rule 59    Routine -> whileLoop Routine
Rule 60    Routine -> doWhileLoop Routine
Rule 61    Routine -> forLoop Routine
Rule 62    Routine -> call identifier semicolon Routine
Rule 63    Routine -> InOut Routine
Rule 64    Routine -> <empty>
Rule 65    InOut -> cin in variable RecursiveIn semicolon
Rule 66    InOut -> cout out ArithmeticExpression RecursiveOut semicolon
Rule 67    InOut -> cout out string RecursiveOut semicolon
Rule 68    RecursiveIn -> in variable RecursiveIn
Rule 69    RecursiveIn -> <empty>
Rule 70    RecursiveOut -> out ArithmeticExpression RecursiveOut
Rule 71    RecursiveOut -> out string RecursiveOut
Rule 72    RecursiveOut -> <empty>
Rule 73    action_insert_variable -> <empty>
Rule 74    action_insert_int_operand -> <empty>
Rule 75    action_insert_double_operand -> <empty>
Rule 76    action_insert_operator -> <empty>
Rule 77    action_generate_quadruplet -> <empty>
Rule 78    action_assignation -> <empty>
Rule 79    action_generate_unary_operation_quadruplet -> <empty>

Terminals, with rules where they appear

and                  : 40
call                 : 62
cin                  : 65
close_brace          : 2 42 43 45 47 48 49 54
close_bracket        : 6 7
close_parenthesis    : 26 42 43 47 48 49
comma                : 12 14 51 53
cout                 : 66 67
do                   : 48
double               : 16
double_number        : 4
else                 : 45
elseif               : 43
equal                : 13 14 31
error                : 
false                : 28
for                  : 49
greater_or_equal     : 37
greater_than         : 39
identifier           : 5 54 62
if                   : 42
in                   : 65 68
int                  : 15
int_number           : 3
is_equal             : 34
less_or_equal        : 36
less_than            : 38
main                 : 2
minus                : 18
minus_minus          : 33
not_equal            : 35
open_brace           : 2 42 43 45 47 48 49 54
open_bracket         : 6 7
open_parenthesis     : 26 42 43 47 48 49
or                   : 41
out                  : 66 67 70 71
plus                 : 17
plus_plus            : 32
semicolon            : 9 48 49 49 56 57 62 65 66 67
slash                : 22
star                 : 21
string               : 67 71
true                 : 27
while                : 47 48

Nonterminals, with rules where they appear

ArithmeticExpression : 13 14 17 18 26 29 30 31 66 70
AssignmentStatement  : 50 51 56
BooleanExpression    : 30 42 43 47 48 49
InOut                : 63
LogicOperator        : 30
Main                 : 1
Number               : 7 23
ProgramFlow          : 0
RecVariableDeclaration : 9 12 14 49
RecursiveIn          : 65 68
RecursiveOut         : 66 67 70 71
Routine              : 2 42 43 45 47 48 49 54 56 57 58 59 60 61 62 63
SubroutinesDeclaration : 1 54
UnaryOperation       : 25 52 53 57
UpdateVariables      : 49 51 53
VariablesDeclaration : 1 9
action_assignation   : 31
action_generate_quadruplet : 17 18 21 22 30
action_generate_unary_operation_quadruplet : 32 33
action_insert_double_operand : 4
action_insert_int_operand : 3
action_insert_operator : 17 18 21 22 30 32 33
action_insert_variable : 24 31
dimensions           : 5 6 7
doWhileLoop          : 60
elseCondition        : 44
elseIfCondition      : 42 43
factor               : 20 21 22
forLoop              : 61
ifCondition          : 58
term                 : 17 18 19 21 22
type                 : 9
variable             : 6 11 12 13 14 24 31 32 33 65 68
whileLoop            : 59

Parsing method: LALR

state 0

    (0) S' -> . ProgramFlow
    (1) ProgramFlow -> . VariablesDeclaration SubroutinesDeclaration Main
    (9) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (10) VariablesDeclaration -> .
    (15) type -> . int
    (16) type -> . double

    identifier      reduce using rule 10 (VariablesDeclaration -> .)
    main            reduce using rule 10 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    ProgramFlow                    shift and go to state 1
    VariablesDeclaration           shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> ProgramFlow .



state 2

    (1) ProgramFlow -> VariablesDeclaration . SubroutinesDeclaration Main
    (54) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (55) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 55 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 6

state 3

    (9) VariablesDeclaration -> type . RecVariableDeclaration semicolon VariablesDeclaration
    (11) RecVariableDeclaration -> . variable
    (12) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (14) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 8
    variable                       shift and go to state 9

state 4

    (15) type -> int .

    identifier      reduce using rule 15 (type -> int .)


state 5

    (16) type -> double .

    identifier      reduce using rule 16 (type -> double .)


state 6

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration . Main
    (2) Main -> . main open_brace Routine close_brace

    main            shift and go to state 12

    Main                           shift and go to state 11

state 7

    (54) SubroutinesDeclaration -> identifier . open_brace Routine close_brace SubroutinesDeclaration

    open_brace      shift and go to state 13


state 8

    (9) VariablesDeclaration -> type RecVariableDeclaration . semicolon VariablesDeclaration

    semicolon       shift and go to state 14


state 9

    (11) RecVariableDeclaration -> variable .
    (12) RecVariableDeclaration -> variable . comma RecVariableDeclaration
    (13) RecVariableDeclaration -> variable . equal ArithmeticExpression
    (14) RecVariableDeclaration -> variable . equal ArithmeticExpression comma RecVariableDeclaration

    semicolon       reduce using rule 11 (RecVariableDeclaration -> variable .)
    comma           shift and go to state 15
    equal           shift and go to state 16


state 10

    (5) variable -> identifier . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> . open_bracket Number close_bracket dimensions
    (8) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 8 (dimensions -> .)
    equal           reduce using rule 8 (dimensions -> .)
    semicolon       reduce using rule 8 (dimensions -> .)
    star            reduce using rule 8 (dimensions -> .)
    slash           reduce using rule 8 (dimensions -> .)
    plus            reduce using rule 8 (dimensions -> .)
    minus           reduce using rule 8 (dimensions -> .)
    close_bracket   reduce using rule 8 (dimensions -> .)
    close_parenthesis reduce using rule 8 (dimensions -> .)
    is_equal        reduce using rule 8 (dimensions -> .)
    not_equal       reduce using rule 8 (dimensions -> .)
    less_or_equal   reduce using rule 8 (dimensions -> .)
    greater_or_equal reduce using rule 8 (dimensions -> .)
    less_than       reduce using rule 8 (dimensions -> .)
    greater_than    reduce using rule 8 (dimensions -> .)
    and             reduce using rule 8 (dimensions -> .)
    or              reduce using rule 8 (dimensions -> .)
    out             reduce using rule 8 (dimensions -> .)
    in              reduce using rule 8 (dimensions -> .)

    dimensions                     shift and go to state 17

state 11

    (1) ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .

    $end            reduce using rule 1 (ProgramFlow -> VariablesDeclaration SubroutinesDeclaration Main .)


state 12

    (2) Main -> main . open_brace Routine close_brace

    open_brace      shift and go to state 19


state 13

    (54) SubroutinesDeclaration -> identifier open_brace . Routine close_brace SubroutinesDeclaration
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 20
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 14

    (9) VariablesDeclaration -> type RecVariableDeclaration semicolon . VariablesDeclaration
    (9) VariablesDeclaration -> . type RecVariableDeclaration semicolon VariablesDeclaration
    (10) VariablesDeclaration -> .
    (15) type -> . int
    (16) type -> . double

    identifier      reduce using rule 10 (VariablesDeclaration -> .)
    main            reduce using rule 10 (VariablesDeclaration -> .)
    int             shift and go to state 4
    double          shift and go to state 5

    type                           shift and go to state 3
    VariablesDeclaration           shift and go to state 38

state 15

    (12) RecVariableDeclaration -> variable comma . RecVariableDeclaration
    (11) RecVariableDeclaration -> . variable
    (12) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (14) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 39

state 16

    (13) RecVariableDeclaration -> variable equal . ArithmeticExpression
    (14) RecVariableDeclaration -> variable equal . ArithmeticExpression comma RecVariableDeclaration
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 41
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    UnaryOperation                 shift and go to state 45

state 17

    (5) variable -> identifier dimensions .

    comma           reduce using rule 5 (variable -> identifier dimensions .)
    equal           reduce using rule 5 (variable -> identifier dimensions .)
    semicolon       reduce using rule 5 (variable -> identifier dimensions .)
    star            reduce using rule 5 (variable -> identifier dimensions .)
    slash           reduce using rule 5 (variable -> identifier dimensions .)
    plus            reduce using rule 5 (variable -> identifier dimensions .)
    minus           reduce using rule 5 (variable -> identifier dimensions .)
    close_bracket   reduce using rule 5 (variable -> identifier dimensions .)
    close_parenthesis reduce using rule 5 (variable -> identifier dimensions .)
    is_equal        reduce using rule 5 (variable -> identifier dimensions .)
    not_equal       reduce using rule 5 (variable -> identifier dimensions .)
    less_or_equal   reduce using rule 5 (variable -> identifier dimensions .)
    greater_or_equal reduce using rule 5 (variable -> identifier dimensions .)
    less_than       reduce using rule 5 (variable -> identifier dimensions .)
    greater_than    reduce using rule 5 (variable -> identifier dimensions .)
    and             reduce using rule 5 (variable -> identifier dimensions .)
    or              reduce using rule 5 (variable -> identifier dimensions .)
    out             reduce using rule 5 (variable -> identifier dimensions .)
    in              reduce using rule 5 (variable -> identifier dimensions .)


state 18

    (6) dimensions -> open_bracket . variable close_bracket dimensions
    (7) dimensions -> open_bracket . Number close_bracket dimensions
    (5) variable -> . identifier dimensions
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand

    identifier      shift and go to state 10
    int_number      shift and go to state 47
    double_number   shift and go to state 48

    variable                       shift and go to state 49
    Number                         shift and go to state 50

state 19

    (2) Main -> main open_brace . Routine close_brace
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 51
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 20

    (54) SubroutinesDeclaration -> identifier open_brace Routine . close_brace SubroutinesDeclaration

    close_brace     shift and go to state 52


state 21

    (56) Routine -> AssignmentStatement . semicolon Routine

    semicolon       shift and go to state 53


state 22

    (57) Routine -> UnaryOperation . semicolon Routine

    semicolon       shift and go to state 54


state 23

    (58) Routine -> ifCondition . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    ifCondition                    shift and go to state 23
    Routine                        shift and go to state 55
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 24

    (59) Routine -> whileLoop . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    whileLoop                      shift and go to state 24
    Routine                        shift and go to state 56
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 25

    (60) Routine -> doWhileLoop . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    doWhileLoop                    shift and go to state 25
    Routine                        shift and go to state 57
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 26

    (61) Routine -> forLoop . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    forLoop                        shift and go to state 26
    Routine                        shift and go to state 58
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 27

    (62) Routine -> call . identifier semicolon Routine

    identifier      shift and go to state 59


state 28

    (63) Routine -> InOut . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    InOut                          shift and go to state 28
    Routine                        shift and go to state 60
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    variable                       shift and go to state 29

state 29

    (31) AssignmentStatement -> variable . action_insert_variable equal ArithmeticExpression action_assignation
    (73) action_insert_variable -> .

    equal           reduce using rule 73 (action_insert_variable -> .)

    action_insert_variable         shift and go to state 61

state 30

    (32) UnaryOperation -> plus_plus . action_insert_operator variable action_generate_unary_operation_quadruplet
    (76) action_insert_operator -> .

    identifier      reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 62

state 31

    (33) UnaryOperation -> minus_minus . action_insert_operator variable action_generate_unary_operation_quadruplet
    (76) action_insert_operator -> .

    identifier      reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 63

state 32

    (42) ifCondition -> if . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 64


state 33

    (47) whileLoop -> while . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 65


state 34

    (48) doWhileLoop -> do . open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    open_brace      shift and go to state 66


state 35

    (49) forLoop -> for . open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    open_parenthesis shift and go to state 67


state 36

    (65) InOut -> cin . in variable RecursiveIn semicolon

    in              shift and go to state 68


state 37

    (66) InOut -> cout . out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> cout . out string RecursiveOut semicolon

    out             shift and go to state 69


state 38

    (9) VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .

    identifier      reduce using rule 9 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)
    main            reduce using rule 9 (VariablesDeclaration -> type RecVariableDeclaration semicolon VariablesDeclaration .)


state 39

    (12) RecVariableDeclaration -> variable comma RecVariableDeclaration .

    semicolon       reduce using rule 12 (RecVariableDeclaration -> variable comma RecVariableDeclaration .)


state 40

    (24) factor -> variable . action_insert_variable
    (73) action_insert_variable -> .

    star            reduce using rule 73 (action_insert_variable -> .)
    slash           reduce using rule 73 (action_insert_variable -> .)
    comma           reduce using rule 73 (action_insert_variable -> .)
    plus            reduce using rule 73 (action_insert_variable -> .)
    minus           reduce using rule 73 (action_insert_variable -> .)
    semicolon       reduce using rule 73 (action_insert_variable -> .)
    close_parenthesis reduce using rule 73 (action_insert_variable -> .)
    is_equal        reduce using rule 73 (action_insert_variable -> .)
    not_equal       reduce using rule 73 (action_insert_variable -> .)
    less_or_equal   reduce using rule 73 (action_insert_variable -> .)
    greater_or_equal reduce using rule 73 (action_insert_variable -> .)
    less_than       reduce using rule 73 (action_insert_variable -> .)
    greater_than    reduce using rule 73 (action_insert_variable -> .)
    and             reduce using rule 73 (action_insert_variable -> .)
    or              reduce using rule 73 (action_insert_variable -> .)
    out             reduce using rule 73 (action_insert_variable -> .)

    action_insert_variable         shift and go to state 70

state 41

    (13) RecVariableDeclaration -> variable equal ArithmeticExpression .
    (14) RecVariableDeclaration -> variable equal ArithmeticExpression . comma RecVariableDeclaration
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet

    semicolon       reduce using rule 13 (RecVariableDeclaration -> variable equal ArithmeticExpression .)
    comma           shift and go to state 71
    plus            shift and go to state 72
    minus           shift and go to state 73


state 42

    (19) ArithmeticExpression -> term .
    (21) term -> term . star action_insert_operator factor action_generate_quadruplet
    (22) term -> term . slash action_insert_operator factor action_generate_quadruplet

    comma           reduce using rule 19 (ArithmeticExpression -> term .)
    plus            reduce using rule 19 (ArithmeticExpression -> term .)
    minus           reduce using rule 19 (ArithmeticExpression -> term .)
    semicolon       reduce using rule 19 (ArithmeticExpression -> term .)
    close_parenthesis reduce using rule 19 (ArithmeticExpression -> term .)
    is_equal        reduce using rule 19 (ArithmeticExpression -> term .)
    not_equal       reduce using rule 19 (ArithmeticExpression -> term .)
    less_or_equal   reduce using rule 19 (ArithmeticExpression -> term .)
    greater_or_equal reduce using rule 19 (ArithmeticExpression -> term .)
    less_than       reduce using rule 19 (ArithmeticExpression -> term .)
    greater_than    reduce using rule 19 (ArithmeticExpression -> term .)
    and             reduce using rule 19 (ArithmeticExpression -> term .)
    or              reduce using rule 19 (ArithmeticExpression -> term .)
    out             reduce using rule 19 (ArithmeticExpression -> term .)
    star            shift and go to state 74
    slash           shift and go to state 75


state 43

    (20) term -> factor .

    star            reduce using rule 20 (term -> factor .)
    slash           reduce using rule 20 (term -> factor .)
    comma           reduce using rule 20 (term -> factor .)
    plus            reduce using rule 20 (term -> factor .)
    minus           reduce using rule 20 (term -> factor .)
    semicolon       reduce using rule 20 (term -> factor .)
    close_parenthesis reduce using rule 20 (term -> factor .)
    is_equal        reduce using rule 20 (term -> factor .)
    not_equal       reduce using rule 20 (term -> factor .)
    less_or_equal   reduce using rule 20 (term -> factor .)
    greater_or_equal reduce using rule 20 (term -> factor .)
    less_than       reduce using rule 20 (term -> factor .)
    greater_than    reduce using rule 20 (term -> factor .)
    and             reduce using rule 20 (term -> factor .)
    or              reduce using rule 20 (term -> factor .)
    out             reduce using rule 20 (term -> factor .)


state 44

    (23) factor -> Number .

    star            reduce using rule 23 (factor -> Number .)
    slash           reduce using rule 23 (factor -> Number .)
    comma           reduce using rule 23 (factor -> Number .)
    plus            reduce using rule 23 (factor -> Number .)
    minus           reduce using rule 23 (factor -> Number .)
    semicolon       reduce using rule 23 (factor -> Number .)
    close_parenthesis reduce using rule 23 (factor -> Number .)
    is_equal        reduce using rule 23 (factor -> Number .)
    not_equal       reduce using rule 23 (factor -> Number .)
    less_or_equal   reduce using rule 23 (factor -> Number .)
    greater_or_equal reduce using rule 23 (factor -> Number .)
    less_than       reduce using rule 23 (factor -> Number .)
    greater_than    reduce using rule 23 (factor -> Number .)
    and             reduce using rule 23 (factor -> Number .)
    or              reduce using rule 23 (factor -> Number .)
    out             reduce using rule 23 (factor -> Number .)


state 45

    (25) factor -> UnaryOperation .

    star            reduce using rule 25 (factor -> UnaryOperation .)
    slash           reduce using rule 25 (factor -> UnaryOperation .)
    comma           reduce using rule 25 (factor -> UnaryOperation .)
    plus            reduce using rule 25 (factor -> UnaryOperation .)
    minus           reduce using rule 25 (factor -> UnaryOperation .)
    semicolon       reduce using rule 25 (factor -> UnaryOperation .)
    close_parenthesis reduce using rule 25 (factor -> UnaryOperation .)
    is_equal        reduce using rule 25 (factor -> UnaryOperation .)
    not_equal       reduce using rule 25 (factor -> UnaryOperation .)
    less_or_equal   reduce using rule 25 (factor -> UnaryOperation .)
    greater_or_equal reduce using rule 25 (factor -> UnaryOperation .)
    less_than       reduce using rule 25 (factor -> UnaryOperation .)
    greater_than    reduce using rule 25 (factor -> UnaryOperation .)
    and             reduce using rule 25 (factor -> UnaryOperation .)
    or              reduce using rule 25 (factor -> UnaryOperation .)
    out             reduce using rule 25 (factor -> UnaryOperation .)


state 46

    (26) factor -> open_parenthesis . ArithmeticExpression close_parenthesis
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 76
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 47

    (3) Number -> int_number . action_insert_int_operand
    (74) action_insert_int_operand -> .

    star            reduce using rule 74 (action_insert_int_operand -> .)
    slash           reduce using rule 74 (action_insert_int_operand -> .)
    comma           reduce using rule 74 (action_insert_int_operand -> .)
    plus            reduce using rule 74 (action_insert_int_operand -> .)
    minus           reduce using rule 74 (action_insert_int_operand -> .)
    semicolon       reduce using rule 74 (action_insert_int_operand -> .)
    close_bracket   reduce using rule 74 (action_insert_int_operand -> .)
    close_parenthesis reduce using rule 74 (action_insert_int_operand -> .)
    is_equal        reduce using rule 74 (action_insert_int_operand -> .)
    not_equal       reduce using rule 74 (action_insert_int_operand -> .)
    less_or_equal   reduce using rule 74 (action_insert_int_operand -> .)
    greater_or_equal reduce using rule 74 (action_insert_int_operand -> .)
    less_than       reduce using rule 74 (action_insert_int_operand -> .)
    greater_than    reduce using rule 74 (action_insert_int_operand -> .)
    and             reduce using rule 74 (action_insert_int_operand -> .)
    or              reduce using rule 74 (action_insert_int_operand -> .)
    out             reduce using rule 74 (action_insert_int_operand -> .)

    action_insert_int_operand      shift and go to state 77

state 48

    (4) Number -> double_number . action_insert_double_operand
    (75) action_insert_double_operand -> .

    star            reduce using rule 75 (action_insert_double_operand -> .)
    slash           reduce using rule 75 (action_insert_double_operand -> .)
    comma           reduce using rule 75 (action_insert_double_operand -> .)
    plus            reduce using rule 75 (action_insert_double_operand -> .)
    minus           reduce using rule 75 (action_insert_double_operand -> .)
    semicolon       reduce using rule 75 (action_insert_double_operand -> .)
    close_bracket   reduce using rule 75 (action_insert_double_operand -> .)
    close_parenthesis reduce using rule 75 (action_insert_double_operand -> .)
    is_equal        reduce using rule 75 (action_insert_double_operand -> .)
    not_equal       reduce using rule 75 (action_insert_double_operand -> .)
    less_or_equal   reduce using rule 75 (action_insert_double_operand -> .)
    greater_or_equal reduce using rule 75 (action_insert_double_operand -> .)
    less_than       reduce using rule 75 (action_insert_double_operand -> .)
    greater_than    reduce using rule 75 (action_insert_double_operand -> .)
    and             reduce using rule 75 (action_insert_double_operand -> .)
    or              reduce using rule 75 (action_insert_double_operand -> .)
    out             reduce using rule 75 (action_insert_double_operand -> .)

    action_insert_double_operand   shift and go to state 78

state 49

    (6) dimensions -> open_bracket variable . close_bracket dimensions

    close_bracket   shift and go to state 79


state 50

    (7) dimensions -> open_bracket Number . close_bracket dimensions

    close_bracket   shift and go to state 80


state 51

    (2) Main -> main open_brace Routine . close_brace

    close_brace     shift and go to state 81


state 52

    (54) SubroutinesDeclaration -> identifier open_brace Routine close_brace . SubroutinesDeclaration
    (54) SubroutinesDeclaration -> . identifier open_brace Routine close_brace SubroutinesDeclaration
    (55) SubroutinesDeclaration -> .

    identifier      shift and go to state 7
    main            reduce using rule 55 (SubroutinesDeclaration -> .)

    SubroutinesDeclaration         shift and go to state 82

state 53

    (56) Routine -> AssignmentStatement semicolon . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 21
    Routine                        shift and go to state 83
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 54

    (57) Routine -> UnaryOperation semicolon . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 22
    Routine                        shift and go to state 84
    AssignmentStatement            shift and go to state 21
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 55

    (58) Routine -> ifCondition Routine .

    close_brace     reduce using rule 58 (Routine -> ifCondition Routine .)


state 56

    (59) Routine -> whileLoop Routine .

    close_brace     reduce using rule 59 (Routine -> whileLoop Routine .)


state 57

    (60) Routine -> doWhileLoop Routine .

    close_brace     reduce using rule 60 (Routine -> doWhileLoop Routine .)


state 58

    (61) Routine -> forLoop Routine .

    close_brace     reduce using rule 61 (Routine -> forLoop Routine .)


state 59

    (62) Routine -> call identifier . semicolon Routine

    semicolon       shift and go to state 85


state 60

    (63) Routine -> InOut Routine .

    close_brace     reduce using rule 63 (Routine -> InOut Routine .)


state 61

    (31) AssignmentStatement -> variable action_insert_variable . equal ArithmeticExpression action_assignation

    equal           shift and go to state 86


state 62

    (32) UnaryOperation -> plus_plus action_insert_operator . variable action_generate_unary_operation_quadruplet
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 87

state 63

    (33) UnaryOperation -> minus_minus action_insert_operator . variable action_generate_unary_operation_quadruplet
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 88

state 64

    (42) ifCondition -> if open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 89
    ArithmeticExpression           shift and go to state 92
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 65

    (47) whileLoop -> while open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 93
    ArithmeticExpression           shift and go to state 92
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 66

    (48) doWhileLoop -> do open_brace . Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 94
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 67

    (49) forLoop -> for open_parenthesis . RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (11) RecVariableDeclaration -> . variable
    (12) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (14) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    RecVariableDeclaration         shift and go to state 95
    variable                       shift and go to state 9

state 68

    (65) InOut -> cin in . variable RecursiveIn semicolon
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 96

state 69

    (66) InOut -> cout out . ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> cout out . string RecursiveOut semicolon
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    string          shift and go to state 98
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 97
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 70

    (24) factor -> variable action_insert_variable .

    star            reduce using rule 24 (factor -> variable action_insert_variable .)
    slash           reduce using rule 24 (factor -> variable action_insert_variable .)
    comma           reduce using rule 24 (factor -> variable action_insert_variable .)
    plus            reduce using rule 24 (factor -> variable action_insert_variable .)
    minus           reduce using rule 24 (factor -> variable action_insert_variable .)
    semicolon       reduce using rule 24 (factor -> variable action_insert_variable .)
    close_parenthesis reduce using rule 24 (factor -> variable action_insert_variable .)
    is_equal        reduce using rule 24 (factor -> variable action_insert_variable .)
    not_equal       reduce using rule 24 (factor -> variable action_insert_variable .)
    less_or_equal   reduce using rule 24 (factor -> variable action_insert_variable .)
    greater_or_equal reduce using rule 24 (factor -> variable action_insert_variable .)
    less_than       reduce using rule 24 (factor -> variable action_insert_variable .)
    greater_than    reduce using rule 24 (factor -> variable action_insert_variable .)
    and             reduce using rule 24 (factor -> variable action_insert_variable .)
    or              reduce using rule 24 (factor -> variable action_insert_variable .)
    out             reduce using rule 24 (factor -> variable action_insert_variable .)


state 71

    (14) RecVariableDeclaration -> variable equal ArithmeticExpression comma . RecVariableDeclaration
    (11) RecVariableDeclaration -> . variable
    (12) RecVariableDeclaration -> . variable comma RecVariableDeclaration
    (13) RecVariableDeclaration -> . variable equal ArithmeticExpression
    (14) RecVariableDeclaration -> . variable equal ArithmeticExpression comma RecVariableDeclaration
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 9
    RecVariableDeclaration         shift and go to state 99

state 72

    (17) ArithmeticExpression -> ArithmeticExpression plus . action_insert_operator term action_generate_quadruplet
    (76) action_insert_operator -> .

    open_parenthesis reduce using rule 76 (action_insert_operator -> .)
    int_number      reduce using rule 76 (action_insert_operator -> .)
    double_number   reduce using rule 76 (action_insert_operator -> .)
    identifier      reduce using rule 76 (action_insert_operator -> .)
    plus_plus       reduce using rule 76 (action_insert_operator -> .)
    minus_minus     reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 100

state 73

    (18) ArithmeticExpression -> ArithmeticExpression minus . action_insert_operator term action_generate_quadruplet
    (76) action_insert_operator -> .

    open_parenthesis reduce using rule 76 (action_insert_operator -> .)
    int_number      reduce using rule 76 (action_insert_operator -> .)
    double_number   reduce using rule 76 (action_insert_operator -> .)
    identifier      reduce using rule 76 (action_insert_operator -> .)
    plus_plus       reduce using rule 76 (action_insert_operator -> .)
    minus_minus     reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 101

state 74

    (21) term -> term star . action_insert_operator factor action_generate_quadruplet
    (76) action_insert_operator -> .

    open_parenthesis reduce using rule 76 (action_insert_operator -> .)
    int_number      reduce using rule 76 (action_insert_operator -> .)
    double_number   reduce using rule 76 (action_insert_operator -> .)
    identifier      reduce using rule 76 (action_insert_operator -> .)
    plus_plus       reduce using rule 76 (action_insert_operator -> .)
    minus_minus     reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 102

state 75

    (22) term -> term slash . action_insert_operator factor action_generate_quadruplet
    (76) action_insert_operator -> .

    open_parenthesis reduce using rule 76 (action_insert_operator -> .)
    int_number      reduce using rule 76 (action_insert_operator -> .)
    double_number   reduce using rule 76 (action_insert_operator -> .)
    identifier      reduce using rule 76 (action_insert_operator -> .)
    plus_plus       reduce using rule 76 (action_insert_operator -> .)
    minus_minus     reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 103

state 76

    (26) factor -> open_parenthesis ArithmeticExpression . close_parenthesis
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet

    close_parenthesis shift and go to state 104
    plus            shift and go to state 72
    minus           shift and go to state 73


state 77

    (3) Number -> int_number action_insert_int_operand .

    star            reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    slash           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    comma           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    plus            reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    minus           reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    semicolon       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    close_bracket   reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    close_parenthesis reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    is_equal        reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    not_equal       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    less_or_equal   reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    greater_or_equal reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    less_than       reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    greater_than    reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    and             reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    or              reduce using rule 3 (Number -> int_number action_insert_int_operand .)
    out             reduce using rule 3 (Number -> int_number action_insert_int_operand .)


state 78

    (4) Number -> double_number action_insert_double_operand .

    star            reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    slash           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    comma           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    plus            reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    minus           reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    semicolon       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    close_bracket   reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    close_parenthesis reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    is_equal        reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    not_equal       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    less_or_equal   reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    greater_or_equal reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    less_than       reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    greater_than    reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    and             reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    or              reduce using rule 4 (Number -> double_number action_insert_double_operand .)
    out             reduce using rule 4 (Number -> double_number action_insert_double_operand .)


state 79

    (6) dimensions -> open_bracket variable close_bracket . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> . open_bracket Number close_bracket dimensions
    (8) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 8 (dimensions -> .)
    equal           reduce using rule 8 (dimensions -> .)
    semicolon       reduce using rule 8 (dimensions -> .)
    star            reduce using rule 8 (dimensions -> .)
    slash           reduce using rule 8 (dimensions -> .)
    plus            reduce using rule 8 (dimensions -> .)
    minus           reduce using rule 8 (dimensions -> .)
    close_bracket   reduce using rule 8 (dimensions -> .)
    close_parenthesis reduce using rule 8 (dimensions -> .)
    is_equal        reduce using rule 8 (dimensions -> .)
    not_equal       reduce using rule 8 (dimensions -> .)
    less_or_equal   reduce using rule 8 (dimensions -> .)
    greater_or_equal reduce using rule 8 (dimensions -> .)
    less_than       reduce using rule 8 (dimensions -> .)
    greater_than    reduce using rule 8 (dimensions -> .)
    and             reduce using rule 8 (dimensions -> .)
    or              reduce using rule 8 (dimensions -> .)
    out             reduce using rule 8 (dimensions -> .)
    in              reduce using rule 8 (dimensions -> .)

    dimensions                     shift and go to state 105

state 80

    (7) dimensions -> open_bracket Number close_bracket . dimensions
    (6) dimensions -> . open_bracket variable close_bracket dimensions
    (7) dimensions -> . open_bracket Number close_bracket dimensions
    (8) dimensions -> .

    open_bracket    shift and go to state 18
    comma           reduce using rule 8 (dimensions -> .)
    equal           reduce using rule 8 (dimensions -> .)
    semicolon       reduce using rule 8 (dimensions -> .)
    star            reduce using rule 8 (dimensions -> .)
    slash           reduce using rule 8 (dimensions -> .)
    plus            reduce using rule 8 (dimensions -> .)
    minus           reduce using rule 8 (dimensions -> .)
    close_bracket   reduce using rule 8 (dimensions -> .)
    close_parenthesis reduce using rule 8 (dimensions -> .)
    is_equal        reduce using rule 8 (dimensions -> .)
    not_equal       reduce using rule 8 (dimensions -> .)
    less_or_equal   reduce using rule 8 (dimensions -> .)
    greater_or_equal reduce using rule 8 (dimensions -> .)
    less_than       reduce using rule 8 (dimensions -> .)
    greater_than    reduce using rule 8 (dimensions -> .)
    and             reduce using rule 8 (dimensions -> .)
    or              reduce using rule 8 (dimensions -> .)
    out             reduce using rule 8 (dimensions -> .)
    in              reduce using rule 8 (dimensions -> .)

    dimensions                     shift and go to state 106

state 81

    (2) Main -> main open_brace Routine close_brace .

    $end            reduce using rule 2 (Main -> main open_brace Routine close_brace .)


state 82

    (54) SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .

    main            reduce using rule 54 (SubroutinesDeclaration -> identifier open_brace Routine close_brace SubroutinesDeclaration .)


state 83

    (56) Routine -> AssignmentStatement semicolon Routine .

    close_brace     reduce using rule 56 (Routine -> AssignmentStatement semicolon Routine .)


state 84

    (57) Routine -> UnaryOperation semicolon Routine .

    close_brace     reduce using rule 57 (Routine -> UnaryOperation semicolon Routine .)


state 85

    (62) Routine -> call identifier semicolon . Routine
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 107
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 86

    (31) AssignmentStatement -> variable action_insert_variable equal . ArithmeticExpression action_assignation
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    variable                       shift and go to state 40
    ArithmeticExpression           shift and go to state 108
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    UnaryOperation                 shift and go to state 45

state 87

    (32) UnaryOperation -> plus_plus action_insert_operator variable . action_generate_unary_operation_quadruplet
    (79) action_generate_unary_operation_quadruplet -> .

    semicolon       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    star            reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    slash           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    comma           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    plus            reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    minus           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    close_parenthesis reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    is_equal        reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    not_equal       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    less_or_equal   reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    greater_or_equal reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    less_than       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    greater_than    reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    and             reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    or              reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    out             reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)

    action_generate_unary_operation_quadruplet shift and go to state 109

state 88

    (33) UnaryOperation -> minus_minus action_insert_operator variable . action_generate_unary_operation_quadruplet
    (79) action_generate_unary_operation_quadruplet -> .

    semicolon       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    star            reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    slash           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    comma           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    plus            reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    minus           reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    close_parenthesis reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    is_equal        reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    not_equal       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    less_or_equal   reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    greater_or_equal reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    less_than       reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    greater_than    reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    and             reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    or              reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)
    out             reduce using rule 79 (action_generate_unary_operation_quadruplet -> .)

    action_generate_unary_operation_quadruplet shift and go to state 110

state 89

    (42) ifCondition -> if open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 111


state 90

    (27) BooleanExpression -> true .

    close_parenthesis reduce using rule 27 (BooleanExpression -> true .)
    semicolon       reduce using rule 27 (BooleanExpression -> true .)


state 91

    (28) BooleanExpression -> false .

    close_parenthesis reduce using rule 28 (BooleanExpression -> false .)
    semicolon       reduce using rule 28 (BooleanExpression -> false .)


state 92

    (29) BooleanExpression -> ArithmeticExpression .
    (30) BooleanExpression -> ArithmeticExpression . LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet
    (34) LogicOperator -> . is_equal
    (35) LogicOperator -> . not_equal
    (36) LogicOperator -> . less_or_equal
    (37) LogicOperator -> . greater_or_equal
    (38) LogicOperator -> . less_than
    (39) LogicOperator -> . greater_than
    (40) LogicOperator -> . and
    (41) LogicOperator -> . or

    close_parenthesis reduce using rule 29 (BooleanExpression -> ArithmeticExpression .)
    semicolon       reduce using rule 29 (BooleanExpression -> ArithmeticExpression .)
    plus            shift and go to state 72
    minus           shift and go to state 73
    is_equal        shift and go to state 113
    not_equal       shift and go to state 114
    less_or_equal   shift and go to state 115
    greater_or_equal shift and go to state 116
    less_than       shift and go to state 117
    greater_than    shift and go to state 118
    and             shift and go to state 119
    or              shift and go to state 120

    LogicOperator                  shift and go to state 112

state 93

    (47) whileLoop -> while open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 121


state 94

    (48) doWhileLoop -> do open_brace Routine . close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon

    close_brace     shift and go to state 122


state 95

    (49) forLoop -> for open_parenthesis RecVariableDeclaration . semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 123


state 96

    (65) InOut -> cin in variable . RecursiveIn semicolon
    (68) RecursiveIn -> . in variable RecursiveIn
    (69) RecursiveIn -> .

    in              shift and go to state 124
    semicolon       reduce using rule 69 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 125

state 97

    (66) InOut -> cout out ArithmeticExpression . RecursiveOut semicolon
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet
    (70) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (71) RecursiveOut -> . out string RecursiveOut
    (72) RecursiveOut -> .

    plus            shift and go to state 72
    minus           shift and go to state 73
    out             shift and go to state 126
    semicolon       reduce using rule 72 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 127

state 98

    (67) InOut -> cout out string . RecursiveOut semicolon
    (70) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (71) RecursiveOut -> . out string RecursiveOut
    (72) RecursiveOut -> .

    out             shift and go to state 126
    semicolon       reduce using rule 72 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 128

state 99

    (14) RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .

    semicolon       reduce using rule 14 (RecVariableDeclaration -> variable equal ArithmeticExpression comma RecVariableDeclaration .)


state 100

    (17) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator . term action_generate_quadruplet
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    term                           shift and go to state 129
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 101

    (18) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator . term action_generate_quadruplet
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    term                           shift and go to state 130
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 102

    (21) term -> term star action_insert_operator . factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    factor                         shift and go to state 131
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 103

    (22) term -> term slash action_insert_operator . factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    factor                         shift and go to state 132
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 104

    (26) factor -> open_parenthesis ArithmeticExpression close_parenthesis .

    star            reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    slash           reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    comma           reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    plus            reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    minus           reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    semicolon       reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    close_parenthesis reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    is_equal        reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    not_equal       reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_or_equal   reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_or_equal reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    less_than       reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    greater_than    reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    and             reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    or              reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)
    out             reduce using rule 26 (factor -> open_parenthesis ArithmeticExpression close_parenthesis .)


state 105

    (6) dimensions -> open_bracket variable close_bracket dimensions .

    comma           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    equal           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    semicolon       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    star            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    slash           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    plus            reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    minus           reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_bracket   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    close_parenthesis reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    is_equal        reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    not_equal       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_or_equal   reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_or_equal reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    less_than       reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    greater_than    reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    and             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    or              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    out             reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)
    in              reduce using rule 6 (dimensions -> open_bracket variable close_bracket dimensions .)


state 106

    (7) dimensions -> open_bracket Number close_bracket dimensions .

    comma           reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    equal           reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    semicolon       reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    star            reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    slash           reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    plus            reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    minus           reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    close_bracket   reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    close_parenthesis reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    is_equal        reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    not_equal       reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    less_or_equal   reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    greater_or_equal reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    less_than       reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    greater_than    reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    and             reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    or              reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    out             reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)
    in              reduce using rule 7 (dimensions -> open_bracket Number close_bracket dimensions .)


state 107

    (62) Routine -> call identifier semicolon Routine .

    close_brace     reduce using rule 62 (Routine -> call identifier semicolon Routine .)


state 108

    (31) AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression . action_assignation
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet
    (78) action_assignation -> .

    plus            shift and go to state 72
    minus           shift and go to state 73
    semicolon       reduce using rule 78 (action_assignation -> .)
    comma           reduce using rule 78 (action_assignation -> .)
    close_parenthesis reduce using rule 78 (action_assignation -> .)

    action_assignation             shift and go to state 133

state 109

    (32) UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .

    semicolon       reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    star            reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    slash           reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    comma           reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    plus            reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    minus           reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    close_parenthesis reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    is_equal        reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    not_equal       reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    less_or_equal   reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    greater_or_equal reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    less_than       reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    greater_than    reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    and             reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    or              reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    out             reduce using rule 32 (UnaryOperation -> plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet .)


state 110

    (33) UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .

    semicolon       reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    star            reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    slash           reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    comma           reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    plus            reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    minus           reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    close_parenthesis reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    is_equal        reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    not_equal       reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    less_or_equal   reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    greater_or_equal reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    less_than       reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    greater_than    reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    and             reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    or              reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)
    out             reduce using rule 33 (UnaryOperation -> minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet .)


state 111

    (42) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 134


state 112

    (30) BooleanExpression -> ArithmeticExpression LogicOperator . action_insert_operator BooleanExpression action_generate_quadruplet
    (76) action_insert_operator -> .

    true            reduce using rule 76 (action_insert_operator -> .)
    false           reduce using rule 76 (action_insert_operator -> .)
    open_parenthesis reduce using rule 76 (action_insert_operator -> .)
    int_number      reduce using rule 76 (action_insert_operator -> .)
    double_number   reduce using rule 76 (action_insert_operator -> .)
    identifier      reduce using rule 76 (action_insert_operator -> .)
    plus_plus       reduce using rule 76 (action_insert_operator -> .)
    minus_minus     reduce using rule 76 (action_insert_operator -> .)

    action_insert_operator         shift and go to state 135

state 113

    (34) LogicOperator -> is_equal .

    true            reduce using rule 34 (LogicOperator -> is_equal .)
    false           reduce using rule 34 (LogicOperator -> is_equal .)
    open_parenthesis reduce using rule 34 (LogicOperator -> is_equal .)
    int_number      reduce using rule 34 (LogicOperator -> is_equal .)
    double_number   reduce using rule 34 (LogicOperator -> is_equal .)
    identifier      reduce using rule 34 (LogicOperator -> is_equal .)
    plus_plus       reduce using rule 34 (LogicOperator -> is_equal .)
    minus_minus     reduce using rule 34 (LogicOperator -> is_equal .)


state 114

    (35) LogicOperator -> not_equal .

    true            reduce using rule 35 (LogicOperator -> not_equal .)
    false           reduce using rule 35 (LogicOperator -> not_equal .)
    open_parenthesis reduce using rule 35 (LogicOperator -> not_equal .)
    int_number      reduce using rule 35 (LogicOperator -> not_equal .)
    double_number   reduce using rule 35 (LogicOperator -> not_equal .)
    identifier      reduce using rule 35 (LogicOperator -> not_equal .)
    plus_plus       reduce using rule 35 (LogicOperator -> not_equal .)
    minus_minus     reduce using rule 35 (LogicOperator -> not_equal .)


state 115

    (36) LogicOperator -> less_or_equal .

    true            reduce using rule 36 (LogicOperator -> less_or_equal .)
    false           reduce using rule 36 (LogicOperator -> less_or_equal .)
    open_parenthesis reduce using rule 36 (LogicOperator -> less_or_equal .)
    int_number      reduce using rule 36 (LogicOperator -> less_or_equal .)
    double_number   reduce using rule 36 (LogicOperator -> less_or_equal .)
    identifier      reduce using rule 36 (LogicOperator -> less_or_equal .)
    plus_plus       reduce using rule 36 (LogicOperator -> less_or_equal .)
    minus_minus     reduce using rule 36 (LogicOperator -> less_or_equal .)


state 116

    (37) LogicOperator -> greater_or_equal .

    true            reduce using rule 37 (LogicOperator -> greater_or_equal .)
    false           reduce using rule 37 (LogicOperator -> greater_or_equal .)
    open_parenthesis reduce using rule 37 (LogicOperator -> greater_or_equal .)
    int_number      reduce using rule 37 (LogicOperator -> greater_or_equal .)
    double_number   reduce using rule 37 (LogicOperator -> greater_or_equal .)
    identifier      reduce using rule 37 (LogicOperator -> greater_or_equal .)
    plus_plus       reduce using rule 37 (LogicOperator -> greater_or_equal .)
    minus_minus     reduce using rule 37 (LogicOperator -> greater_or_equal .)


state 117

    (38) LogicOperator -> less_than .

    true            reduce using rule 38 (LogicOperator -> less_than .)
    false           reduce using rule 38 (LogicOperator -> less_than .)
    open_parenthesis reduce using rule 38 (LogicOperator -> less_than .)
    int_number      reduce using rule 38 (LogicOperator -> less_than .)
    double_number   reduce using rule 38 (LogicOperator -> less_than .)
    identifier      reduce using rule 38 (LogicOperator -> less_than .)
    plus_plus       reduce using rule 38 (LogicOperator -> less_than .)
    minus_minus     reduce using rule 38 (LogicOperator -> less_than .)


state 118

    (39) LogicOperator -> greater_than .

    true            reduce using rule 39 (LogicOperator -> greater_than .)
    false           reduce using rule 39 (LogicOperator -> greater_than .)
    open_parenthesis reduce using rule 39 (LogicOperator -> greater_than .)
    int_number      reduce using rule 39 (LogicOperator -> greater_than .)
    double_number   reduce using rule 39 (LogicOperator -> greater_than .)
    identifier      reduce using rule 39 (LogicOperator -> greater_than .)
    plus_plus       reduce using rule 39 (LogicOperator -> greater_than .)
    minus_minus     reduce using rule 39 (LogicOperator -> greater_than .)


state 119

    (40) LogicOperator -> and .

    true            reduce using rule 40 (LogicOperator -> and .)
    false           reduce using rule 40 (LogicOperator -> and .)
    open_parenthesis reduce using rule 40 (LogicOperator -> and .)
    int_number      reduce using rule 40 (LogicOperator -> and .)
    double_number   reduce using rule 40 (LogicOperator -> and .)
    identifier      reduce using rule 40 (LogicOperator -> and .)
    plus_plus       reduce using rule 40 (LogicOperator -> and .)
    minus_minus     reduce using rule 40 (LogicOperator -> and .)


state 120

    (41) LogicOperator -> or .

    true            reduce using rule 41 (LogicOperator -> or .)
    false           reduce using rule 41 (LogicOperator -> or .)
    open_parenthesis reduce using rule 41 (LogicOperator -> or .)
    int_number      reduce using rule 41 (LogicOperator -> or .)
    double_number   reduce using rule 41 (LogicOperator -> or .)
    identifier      reduce using rule 41 (LogicOperator -> or .)
    plus_plus       reduce using rule 41 (LogicOperator -> or .)
    minus_minus     reduce using rule 41 (LogicOperator -> or .)


state 121

    (47) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 136


state 122

    (48) doWhileLoop -> do open_brace Routine close_brace . while open_parenthesis BooleanExpression close_parenthesis semicolon

    while           shift and go to state 137


state 123

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon . BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 138
    ArithmeticExpression           shift and go to state 92
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 124

    (68) RecursiveIn -> in . variable RecursiveIn
    (5) variable -> . identifier dimensions

    identifier      shift and go to state 10

    variable                       shift and go to state 139

state 125

    (65) InOut -> cin in variable RecursiveIn . semicolon

    semicolon       shift and go to state 140


state 126

    (70) RecursiveOut -> out . ArithmeticExpression RecursiveOut
    (71) RecursiveOut -> out . string RecursiveOut
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    string          shift and go to state 142
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 141
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 127

    (66) InOut -> cout out ArithmeticExpression RecursiveOut . semicolon

    semicolon       shift and go to state 143


state 128

    (67) InOut -> cout out string RecursiveOut . semicolon

    semicolon       shift and go to state 144


state 129

    (17) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term . action_generate_quadruplet
    (21) term -> term . star action_insert_operator factor action_generate_quadruplet
    (22) term -> term . slash action_insert_operator factor action_generate_quadruplet
    (77) action_generate_quadruplet -> .

    star            shift and go to state 74
    slash           shift and go to state 75
    comma           reduce using rule 77 (action_generate_quadruplet -> .)
    plus            reduce using rule 77 (action_generate_quadruplet -> .)
    minus           reduce using rule 77 (action_generate_quadruplet -> .)
    semicolon       reduce using rule 77 (action_generate_quadruplet -> .)
    close_parenthesis reduce using rule 77 (action_generate_quadruplet -> .)
    is_equal        reduce using rule 77 (action_generate_quadruplet -> .)
    not_equal       reduce using rule 77 (action_generate_quadruplet -> .)
    less_or_equal   reduce using rule 77 (action_generate_quadruplet -> .)
    greater_or_equal reduce using rule 77 (action_generate_quadruplet -> .)
    less_than       reduce using rule 77 (action_generate_quadruplet -> .)
    greater_than    reduce using rule 77 (action_generate_quadruplet -> .)
    and             reduce using rule 77 (action_generate_quadruplet -> .)
    or              reduce using rule 77 (action_generate_quadruplet -> .)
    out             reduce using rule 77 (action_generate_quadruplet -> .)

    action_generate_quadruplet     shift and go to state 145

state 130

    (18) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term . action_generate_quadruplet
    (21) term -> term . star action_insert_operator factor action_generate_quadruplet
    (22) term -> term . slash action_insert_operator factor action_generate_quadruplet
    (77) action_generate_quadruplet -> .

    star            shift and go to state 74
    slash           shift and go to state 75
    comma           reduce using rule 77 (action_generate_quadruplet -> .)
    plus            reduce using rule 77 (action_generate_quadruplet -> .)
    minus           reduce using rule 77 (action_generate_quadruplet -> .)
    semicolon       reduce using rule 77 (action_generate_quadruplet -> .)
    close_parenthesis reduce using rule 77 (action_generate_quadruplet -> .)
    is_equal        reduce using rule 77 (action_generate_quadruplet -> .)
    not_equal       reduce using rule 77 (action_generate_quadruplet -> .)
    less_or_equal   reduce using rule 77 (action_generate_quadruplet -> .)
    greater_or_equal reduce using rule 77 (action_generate_quadruplet -> .)
    less_than       reduce using rule 77 (action_generate_quadruplet -> .)
    greater_than    reduce using rule 77 (action_generate_quadruplet -> .)
    and             reduce using rule 77 (action_generate_quadruplet -> .)
    or              reduce using rule 77 (action_generate_quadruplet -> .)
    out             reduce using rule 77 (action_generate_quadruplet -> .)

    action_generate_quadruplet     shift and go to state 146

state 131

    (21) term -> term star action_insert_operator factor . action_generate_quadruplet
    (77) action_generate_quadruplet -> .

    star            reduce using rule 77 (action_generate_quadruplet -> .)
    slash           reduce using rule 77 (action_generate_quadruplet -> .)
    comma           reduce using rule 77 (action_generate_quadruplet -> .)
    plus            reduce using rule 77 (action_generate_quadruplet -> .)
    minus           reduce using rule 77 (action_generate_quadruplet -> .)
    semicolon       reduce using rule 77 (action_generate_quadruplet -> .)
    close_parenthesis reduce using rule 77 (action_generate_quadruplet -> .)
    is_equal        reduce using rule 77 (action_generate_quadruplet -> .)
    not_equal       reduce using rule 77 (action_generate_quadruplet -> .)
    less_or_equal   reduce using rule 77 (action_generate_quadruplet -> .)
    greater_or_equal reduce using rule 77 (action_generate_quadruplet -> .)
    less_than       reduce using rule 77 (action_generate_quadruplet -> .)
    greater_than    reduce using rule 77 (action_generate_quadruplet -> .)
    and             reduce using rule 77 (action_generate_quadruplet -> .)
    or              reduce using rule 77 (action_generate_quadruplet -> .)
    out             reduce using rule 77 (action_generate_quadruplet -> .)

    action_generate_quadruplet     shift and go to state 147

state 132

    (22) term -> term slash action_insert_operator factor . action_generate_quadruplet
    (77) action_generate_quadruplet -> .

    star            reduce using rule 77 (action_generate_quadruplet -> .)
    slash           reduce using rule 77 (action_generate_quadruplet -> .)
    comma           reduce using rule 77 (action_generate_quadruplet -> .)
    plus            reduce using rule 77 (action_generate_quadruplet -> .)
    minus           reduce using rule 77 (action_generate_quadruplet -> .)
    semicolon       reduce using rule 77 (action_generate_quadruplet -> .)
    close_parenthesis reduce using rule 77 (action_generate_quadruplet -> .)
    is_equal        reduce using rule 77 (action_generate_quadruplet -> .)
    not_equal       reduce using rule 77 (action_generate_quadruplet -> .)
    less_or_equal   reduce using rule 77 (action_generate_quadruplet -> .)
    greater_or_equal reduce using rule 77 (action_generate_quadruplet -> .)
    less_than       reduce using rule 77 (action_generate_quadruplet -> .)
    greater_than    reduce using rule 77 (action_generate_quadruplet -> .)
    and             reduce using rule 77 (action_generate_quadruplet -> .)
    or              reduce using rule 77 (action_generate_quadruplet -> .)
    out             reduce using rule 77 (action_generate_quadruplet -> .)

    action_generate_quadruplet     shift and go to state 148

state 133

    (31) AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .

    semicolon       reduce using rule 31 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)
    comma           reduce using rule 31 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)
    close_parenthesis reduce using rule 31 (AssignmentStatement -> variable action_insert_variable equal ArithmeticExpression action_assignation .)


state 134

    (42) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 149
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 135

    (30) BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator . BooleanExpression action_generate_quadruplet
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    ArithmeticExpression           shift and go to state 92
    BooleanExpression              shift and go to state 150
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 136

    (47) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 151
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 137

    (48) doWhileLoop -> do open_brace Routine close_brace while . open_parenthesis BooleanExpression close_parenthesis semicolon

    open_parenthesis shift and go to state 152


state 138

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression . semicolon UpdateVariables close_parenthesis open_brace Routine close_brace

    semicolon       shift and go to state 153


state 139

    (68) RecursiveIn -> in variable . RecursiveIn
    (68) RecursiveIn -> . in variable RecursiveIn
    (69) RecursiveIn -> .

    in              shift and go to state 124
    semicolon       reduce using rule 69 (RecursiveIn -> .)

    RecursiveIn                    shift and go to state 154

state 140

    (65) InOut -> cin in variable RecursiveIn semicolon .

    call            reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    plus_plus       reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    minus_minus     reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    if              reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    while           reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    do              reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    for             reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    cin             reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    cout            reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    identifier      reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)
    close_brace     reduce using rule 65 (InOut -> cin in variable RecursiveIn semicolon .)


state 141

    (70) RecursiveOut -> out ArithmeticExpression . RecursiveOut
    (17) ArithmeticExpression -> ArithmeticExpression . plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> ArithmeticExpression . minus action_insert_operator term action_generate_quadruplet
    (70) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (71) RecursiveOut -> . out string RecursiveOut
    (72) RecursiveOut -> .

    plus            shift and go to state 72
    minus           shift and go to state 73
    out             shift and go to state 126
    semicolon       reduce using rule 72 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 155

state 142

    (71) RecursiveOut -> out string . RecursiveOut
    (70) RecursiveOut -> . out ArithmeticExpression RecursiveOut
    (71) RecursiveOut -> . out string RecursiveOut
    (72) RecursiveOut -> .

    out             shift and go to state 126
    semicolon       reduce using rule 72 (RecursiveOut -> .)

    RecursiveOut                   shift and go to state 156

state 143

    (66) InOut -> cout out ArithmeticExpression RecursiveOut semicolon .

    call            reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    plus_plus       reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    minus_minus     reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    if              reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    while           reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    do              reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    for             reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cin             reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    cout            reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    identifier      reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)
    close_brace     reduce using rule 66 (InOut -> cout out ArithmeticExpression RecursiveOut semicolon .)


state 144

    (67) InOut -> cout out string RecursiveOut semicolon .

    call            reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    plus_plus       reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    minus_minus     reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    if              reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    while           reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    do              reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    for             reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    cin             reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    cout            reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    identifier      reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)
    close_brace     reduce using rule 67 (InOut -> cout out string RecursiveOut semicolon .)


state 145

    (17) ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .

    comma           reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    plus            reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    minus           reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    semicolon       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    close_parenthesis reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    is_equal        reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    not_equal       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    less_or_equal   reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    greater_or_equal reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    less_than       reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    greater_than    reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    and             reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    or              reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)
    out             reduce using rule 17 (ArithmeticExpression -> ArithmeticExpression plus action_insert_operator term action_generate_quadruplet .)


state 146

    (18) ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .

    comma           reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    plus            reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    minus           reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    semicolon       reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    close_parenthesis reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    is_equal        reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    not_equal       reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    less_or_equal   reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    greater_or_equal reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    less_than       reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    greater_than    reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    and             reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    or              reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)
    out             reduce using rule 18 (ArithmeticExpression -> ArithmeticExpression minus action_insert_operator term action_generate_quadruplet .)


state 147

    (21) term -> term star action_insert_operator factor action_generate_quadruplet .

    star            reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    slash           reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    comma           reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    plus            reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    minus           reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    semicolon       reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    close_parenthesis reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    is_equal        reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    not_equal       reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    less_or_equal   reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    greater_or_equal reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    less_than       reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    greater_than    reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    and             reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    or              reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)
    out             reduce using rule 21 (term -> term star action_insert_operator factor action_generate_quadruplet .)


state 148

    (22) term -> term slash action_insert_operator factor action_generate_quadruplet .

    star            reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    slash           reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    comma           reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    plus            reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    minus           reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    semicolon       reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    close_parenthesis reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    is_equal        reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    not_equal       reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    less_or_equal   reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    greater_or_equal reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    less_than       reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    greater_than    reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    and             reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    or              reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)
    out             reduce using rule 22 (term -> term slash action_insert_operator factor action_generate_quadruplet .)


state 149

    (42) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 157


state 150

    (30) BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression . action_generate_quadruplet
    (77) action_generate_quadruplet -> .

    close_parenthesis reduce using rule 77 (action_generate_quadruplet -> .)
    semicolon       reduce using rule 77 (action_generate_quadruplet -> .)

    action_generate_quadruplet     shift and go to state 158

state 151

    (47) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 159


state 152

    (48) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis . BooleanExpression close_parenthesis semicolon
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 160
    ArithmeticExpression           shift and go to state 92
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 153

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon . UpdateVariables close_parenthesis open_brace Routine close_brace
    (50) UpdateVariables -> . AssignmentStatement
    (51) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (52) UpdateVariables -> . UnaryOperation
    (53) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UpdateVariables                shift and go to state 161
    AssignmentStatement            shift and go to state 162
    UnaryOperation                 shift and go to state 163
    variable                       shift and go to state 29

state 154

    (68) RecursiveIn -> in variable RecursiveIn .

    semicolon       reduce using rule 68 (RecursiveIn -> in variable RecursiveIn .)


state 155

    (70) RecursiveOut -> out ArithmeticExpression RecursiveOut .

    semicolon       reduce using rule 70 (RecursiveOut -> out ArithmeticExpression RecursiveOut .)


state 156

    (71) RecursiveOut -> out string RecursiveOut .

    semicolon       reduce using rule 71 (RecursiveOut -> out string RecursiveOut .)


state 157

    (42) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (43) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (44) elseIfCondition -> . elseCondition
    (45) elseCondition -> . else open_brace Routine close_brace
    (46) elseCondition -> .

    elseif          shift and go to state 165
    else            shift and go to state 167
    call            reduce using rule 46 (elseCondition -> .)
    plus_plus       reduce using rule 46 (elseCondition -> .)
    minus_minus     reduce using rule 46 (elseCondition -> .)
    if              reduce using rule 46 (elseCondition -> .)
    while           reduce using rule 46 (elseCondition -> .)
    do              reduce using rule 46 (elseCondition -> .)
    for             reduce using rule 46 (elseCondition -> .)
    cin             reduce using rule 46 (elseCondition -> .)
    cout            reduce using rule 46 (elseCondition -> .)
    identifier      reduce using rule 46 (elseCondition -> .)
    close_brace     reduce using rule 46 (elseCondition -> .)

    elseIfCondition                shift and go to state 164
    elseCondition                  shift and go to state 166

state 158

    (30) BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet .

    close_parenthesis reduce using rule 30 (BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet .)
    semicolon       reduce using rule 30 (BooleanExpression -> ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet .)


state 159

    (47) whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 47 (whileLoop -> while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace .)


state 160

    (48) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression . close_parenthesis semicolon

    close_parenthesis shift and go to state 168


state 161

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables . close_parenthesis open_brace Routine close_brace

    close_parenthesis shift and go to state 169


state 162

    (50) UpdateVariables -> AssignmentStatement .
    (51) UpdateVariables -> AssignmentStatement . comma UpdateVariables

    close_parenthesis reduce using rule 50 (UpdateVariables -> AssignmentStatement .)
    comma           shift and go to state 170


state 163

    (52) UpdateVariables -> UnaryOperation .
    (53) UpdateVariables -> UnaryOperation . comma UpdateVariables

    close_parenthesis reduce using rule 52 (UpdateVariables -> UnaryOperation .)
    comma           shift and go to state 171


state 164

    (42) ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 42 (ifCondition -> if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)


state 165

    (43) elseIfCondition -> elseif . open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition

    open_parenthesis shift and go to state 172


state 166

    (44) elseIfCondition -> elseCondition .

    call            reduce using rule 44 (elseIfCondition -> elseCondition .)
    plus_plus       reduce using rule 44 (elseIfCondition -> elseCondition .)
    minus_minus     reduce using rule 44 (elseIfCondition -> elseCondition .)
    if              reduce using rule 44 (elseIfCondition -> elseCondition .)
    while           reduce using rule 44 (elseIfCondition -> elseCondition .)
    do              reduce using rule 44 (elseIfCondition -> elseCondition .)
    for             reduce using rule 44 (elseIfCondition -> elseCondition .)
    cin             reduce using rule 44 (elseIfCondition -> elseCondition .)
    cout            reduce using rule 44 (elseIfCondition -> elseCondition .)
    identifier      reduce using rule 44 (elseIfCondition -> elseCondition .)
    close_brace     reduce using rule 44 (elseIfCondition -> elseCondition .)


state 167

    (45) elseCondition -> else . open_brace Routine close_brace

    open_brace      shift and go to state 173


state 168

    (48) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis . semicolon

    semicolon       shift and go to state 174


state 169

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis . open_brace Routine close_brace

    open_brace      shift and go to state 175


state 170

    (51) UpdateVariables -> AssignmentStatement comma . UpdateVariables
    (50) UpdateVariables -> . AssignmentStatement
    (51) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (52) UpdateVariables -> . UnaryOperation
    (53) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    AssignmentStatement            shift and go to state 162
    UpdateVariables                shift and go to state 176
    UnaryOperation                 shift and go to state 163
    variable                       shift and go to state 29

state 171

    (53) UpdateVariables -> UnaryOperation comma . UpdateVariables
    (50) UpdateVariables -> . AssignmentStatement
    (51) UpdateVariables -> . AssignmentStatement comma UpdateVariables
    (52) UpdateVariables -> . UnaryOperation
    (53) UpdateVariables -> . UnaryOperation comma UpdateVariables
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (5) variable -> . identifier dimensions

    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    identifier      shift and go to state 10

    UnaryOperation                 shift and go to state 163
    UpdateVariables                shift and go to state 177
    AssignmentStatement            shift and go to state 162
    variable                       shift and go to state 29

state 172

    (43) elseIfCondition -> elseif open_parenthesis . BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (27) BooleanExpression -> . true
    (28) BooleanExpression -> . false
    (29) BooleanExpression -> . ArithmeticExpression
    (30) BooleanExpression -> . ArithmeticExpression LogicOperator action_insert_operator BooleanExpression action_generate_quadruplet
    (17) ArithmeticExpression -> . ArithmeticExpression plus action_insert_operator term action_generate_quadruplet
    (18) ArithmeticExpression -> . ArithmeticExpression minus action_insert_operator term action_generate_quadruplet
    (19) ArithmeticExpression -> . term
    (20) term -> . factor
    (21) term -> . term star action_insert_operator factor action_generate_quadruplet
    (22) term -> . term slash action_insert_operator factor action_generate_quadruplet
    (23) factor -> . Number
    (24) factor -> . variable action_insert_variable
    (25) factor -> . UnaryOperation
    (26) factor -> . open_parenthesis ArithmeticExpression close_parenthesis
    (3) Number -> . int_number action_insert_int_operand
    (4) Number -> . double_number action_insert_double_operand
    (5) variable -> . identifier dimensions
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet

    true            shift and go to state 90
    false           shift and go to state 91
    open_parenthesis shift and go to state 46
    int_number      shift and go to state 47
    double_number   shift and go to state 48
    identifier      shift and go to state 10
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31

    BooleanExpression              shift and go to state 178
    ArithmeticExpression           shift and go to state 92
    term                           shift and go to state 42
    factor                         shift and go to state 43
    Number                         shift and go to state 44
    variable                       shift and go to state 40
    UnaryOperation                 shift and go to state 45

state 173

    (45) elseCondition -> else open_brace . Routine close_brace
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 179
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 174

    (48) doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .

    call            reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    plus_plus       reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    minus_minus     reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    if              reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    while           reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    do              reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    for             reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cin             reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    cout            reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    identifier      reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)
    close_brace     reduce using rule 48 (doWhileLoop -> do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon .)


state 175

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace . Routine close_brace
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 180
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 176

    (51) UpdateVariables -> AssignmentStatement comma UpdateVariables .

    close_parenthesis reduce using rule 51 (UpdateVariables -> AssignmentStatement comma UpdateVariables .)


state 177

    (53) UpdateVariables -> UnaryOperation comma UpdateVariables .

    close_parenthesis reduce using rule 53 (UpdateVariables -> UnaryOperation comma UpdateVariables .)


state 178

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression . close_parenthesis open_brace Routine close_brace elseIfCondition

    close_parenthesis shift and go to state 181


state 179

    (45) elseCondition -> else open_brace Routine . close_brace

    close_brace     shift and go to state 182


state 180

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine . close_brace

    close_brace     shift and go to state 183


state 181

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis . open_brace Routine close_brace elseIfCondition

    open_brace      shift and go to state 184


state 182

    (45) elseCondition -> else open_brace Routine close_brace .

    call            reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    plus_plus       reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    minus_minus     reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    if              reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    while           reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    do              reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    for             reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    cin             reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    cout            reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    identifier      reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)
    close_brace     reduce using rule 45 (elseCondition -> else open_brace Routine close_brace .)


state 183

    (49) forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .

    call            reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    plus_plus       reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    minus_minus     reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    if              reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    while           reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    do              reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    for             reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cin             reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    cout            reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    identifier      reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)
    close_brace     reduce using rule 49 (forLoop -> for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace .)


state 184

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace . Routine close_brace elseIfCondition
    (56) Routine -> . AssignmentStatement semicolon Routine
    (57) Routine -> . UnaryOperation semicolon Routine
    (58) Routine -> . ifCondition Routine
    (59) Routine -> . whileLoop Routine
    (60) Routine -> . doWhileLoop Routine
    (61) Routine -> . forLoop Routine
    (62) Routine -> . call identifier semicolon Routine
    (63) Routine -> . InOut Routine
    (64) Routine -> .
    (31) AssignmentStatement -> . variable action_insert_variable equal ArithmeticExpression action_assignation
    (32) UnaryOperation -> . plus_plus action_insert_operator variable action_generate_unary_operation_quadruplet
    (33) UnaryOperation -> . minus_minus action_insert_operator variable action_generate_unary_operation_quadruplet
    (42) ifCondition -> . if open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (47) whileLoop -> . while open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace
    (48) doWhileLoop -> . do open_brace Routine close_brace while open_parenthesis BooleanExpression close_parenthesis semicolon
    (49) forLoop -> . for open_parenthesis RecVariableDeclaration semicolon BooleanExpression semicolon UpdateVariables close_parenthesis open_brace Routine close_brace
    (65) InOut -> . cin in variable RecursiveIn semicolon
    (66) InOut -> . cout out ArithmeticExpression RecursiveOut semicolon
    (67) InOut -> . cout out string RecursiveOut semicolon
    (5) variable -> . identifier dimensions

    call            shift and go to state 27
    close_brace     reduce using rule 64 (Routine -> .)
    plus_plus       shift and go to state 30
    minus_minus     shift and go to state 31
    if              shift and go to state 32
    while           shift and go to state 33
    do              shift and go to state 34
    for             shift and go to state 35
    cin             shift and go to state 36
    cout            shift and go to state 37
    identifier      shift and go to state 10

    Routine                        shift and go to state 185
    AssignmentStatement            shift and go to state 21
    UnaryOperation                 shift and go to state 22
    ifCondition                    shift and go to state 23
    whileLoop                      shift and go to state 24
    doWhileLoop                    shift and go to state 25
    forLoop                        shift and go to state 26
    InOut                          shift and go to state 28
    variable                       shift and go to state 29

state 185

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine . close_brace elseIfCondition

    close_brace     shift and go to state 186


state 186

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace . elseIfCondition
    (43) elseIfCondition -> . elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition
    (44) elseIfCondition -> . elseCondition
    (45) elseCondition -> . else open_brace Routine close_brace
    (46) elseCondition -> .

    elseif          shift and go to state 165
    else            shift and go to state 167
    call            reduce using rule 46 (elseCondition -> .)
    plus_plus       reduce using rule 46 (elseCondition -> .)
    minus_minus     reduce using rule 46 (elseCondition -> .)
    if              reduce using rule 46 (elseCondition -> .)
    while           reduce using rule 46 (elseCondition -> .)
    do              reduce using rule 46 (elseCondition -> .)
    for             reduce using rule 46 (elseCondition -> .)
    cin             reduce using rule 46 (elseCondition -> .)
    cout            reduce using rule 46 (elseCondition -> .)
    identifier      reduce using rule 46 (elseCondition -> .)
    close_brace     reduce using rule 46 (elseCondition -> .)

    elseIfCondition                shift and go to state 187
    elseCondition                  shift and go to state 166

state 187

    (43) elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .

    call            reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    plus_plus       reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    minus_minus     reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    if              reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    while           reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    do              reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    for             reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cin             reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    cout            reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    identifier      reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)
    close_brace     reduce using rule 43 (elseIfCondition -> elseif open_parenthesis BooleanExpression close_parenthesis open_brace Routine close_brace elseIfCondition .)

